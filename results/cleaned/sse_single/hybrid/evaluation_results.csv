user_input,retrieved_contexts,reference_contexts,response,reference,context_precision,context_recall,faithfulness,factual_correctness(mode=f1),context_entity_recall,answer_relevancy
"As a developer focused on green software practices, how important is it to ensure that a system 'does it scale?' when designing and implementing sustainable solutions?","['• Examples: \n• Technical Debt \n• Does it scale? \n• Software testing \n• Bus-factor \n• Data integrity \n• Innovation \n• …\n10\n\nIndividual\n• Well-being of the individuals in an organisation.\u2028\nNote that it also includes how well individuals interact \nwith each other within the org. \n• Examples: \n• mental and physical well-being \n• self-respect \n• education/skills \n• career development \n• …\n11\n\nSocial\n• concerned with societal communities (groups of people, \norganisations) and the factors that erode trust in society. \n• Examples: \n• Social equity \n• Justice \n• Employment \n• Democracy \n• … \n• Also includes compliance with policies and regulations \n12\n\nEnvironmental Sustainability\n• the branch of Software Engineering that studies \nthe development of software that has minimal \nimpact in our planet throughout its whole \nlifecycle. \n• Looking at software at different levels: \n• Developing, Using, Serving, … \n• Also includes e-waste. \n• Almost identical to Green Software. (?)\n13\nBordallo II\n\nGreen Software\n• Sustainability and energy efficiency. \n• Building energy-efficient software is important also from a \ntechnical sustainability POV. \n• Smartphones, smart wearables, IoT devices, etc. run on limited \npower resources. \n• Developing software to these devices require energy-efficiency \ntesting and improvement. \n• It also leads to environmental sustainability (e.g., less battery \ncycles) \n• Important for UX (e.g., no need to walk around with power banks)\n14\n\nhttps://www.menti.com/uns9d89kzn\nWhat is the sustainability \ndimension you are most \ninterested in?\n?\n15\n\nEconomical sustainability tops the environment\n• In general, a software project will not survive if it’s not economical \nsustainable \n• Yet, a project can survive even if it is not environmental sustainable \n• The mindset is changing! \n• Software consumers have started to worry about the climate impact \nof their behaviour as users. \n• Being environmentally sustainable is now an important competitive \nfactor \n• Marketing teams are already using all eco-friendly labels. Technical \nteams are not there yet, though. \n• It’s easier said than done!\n$\n16\n\nGreen Washing\n• Deceptively use marketing techniques to \nclaim being eco-friendly.', '• Deadline April 4.\n6\n\nStrategy\n• Week 0 \n• Decide project idea (today) \n• Define steering meeting schedule \n• Create working document of the \narticle: Problem statement and solution \nproposal! \n• Define and assign tasks for each week. \n• Week 1 \n• Implementation \n• Agreements with supervisor. \n• Week 2 \n• Implementation \n• Week 3 \n• Implementation, Full draft of article, \ndissemination. \n• Week 4 \n• Final refinements \n• Prepare presentation\n7\n\nProject ideas\n• A1. Prototype cross-machine comparable benchmarks \n• A2. Add energy metrics to LMstudio/Ollama \n• A3. Visualizations built-in with EnergiBridge \n• A4. Service-based version of EnergiBridge\n\nProject ideas\n• B1. Measure energy consumption of single JUnit tests \n• B2. Study test generation energy consumption \n• B3. Energy profiling of static analysis tools \n• B4. Detailed energy profiling of build pipelines \n• B5. Tool supporting SusAF workshop / process \n• B6. Dataset of government-developed OS software \n• B7. Queue - but better for the student / TA society\nQuality Assurance & Testing\nSocial & Individual \u2028\nSustainability\n\nProject ideas\n• C1. Compare energy consumption of docker images for ML workloads. \n• C2. Create a plugin to visualize Hugging Face carbon emissions in detail. \n• C3. Plugin for ChatGPT (footprint per chat window) \n• C4. NutriScore for software libraries. \n• C5. Add energy-awareness to existing software \n• C6. Green Shift Left \n• C7. Education for Sustainable SE\n\nA1. Prototype cross-machine comparable benchmarks\n• Energy-usage comparisons require running both baseline + software on the \nsame machine → limits how extensive our experiments can be \n• Research community is in need of benchmarks that make energy \nmeasurements comparable even if executed on different machines \n• Focus on a single task or model (i.e. computing vision, classification)\n\nA2.']","[""['Technical\\n• Longevity of information, systems, and infrastructure and their \\nadequate evolution with changing surrounding conditions.\\n• Examples:\\n• Technical Debt\\n• Does it scale?\\n• Software testing\\n• Bus-factor\\n• Data integrity\\n• Innovation\\n• …\\n10']""]","Ensuring that a system ""does it scale?"" is crucial when designing and implementing sustainable solutions. Scalability is an important aspect of technical sustainability, as it ensures that the software can handle increased loads without requiring proportionally more resources, which aligns with the principles of green software. By designing scalable systems, developers can minimize resource usage and energy consumption, which contributes to environmental sustainability. Additionally, scalable systems can better accommodate growth and changes in demand, making them more economically sustainable as well.","Ensuring that a system 'does it scale?' is a key consideration in the design and implementation of sustainable solutions, as it relates to the longevity and adaptability of the system with changing conditions.",0.9999999999,1.0,0.1,0.44,0.0,0.901227759853306
"As a professional developer focused on green software practices, how does the concept of adaption play a role in addressing climate change within the context of software development?","['Carbon-free giants\n• Google, Microsoft, Meta/Facebook want to be carbon free by 2030 \n• Carbon free is different from carbon neutral \n• Green IT experts are needed to meet these goals\n23\n\n\nRebound effect*\n• Energy consumption decreases ↓↓ but demand also increases ↑↑. \n• *a.k.a. Jevons Paradox in economics; Downs–Thomson paradox in\xa0mobility.\nEnergy per prompt\nPrompts\n100\n80\n30\n38\nChat \nGPT\n“Energy-efficient” \nChat GPT\n0\n\nIs sustainability an\u2028\nethical issue?\n• Climate change is more likely to affect the \npoorest countries. \n• Less financial resources to adapt \n• Climate-impact does not necessarily affect \npolluting countries. \n• Poorest countries have contributed less to the \nclimate change. \n• We need to figure out how to do more using \nless resources.\n26\n\nMorality ≠ Moralising\n• We should not use climate action as a \nshaming weapon \n• Climate action should be agnostic of political \nviews, ideology, social status, etc. \n• We need everyone to take action!\n27\n\nWhy?\n• Throughout your career you might: \n• Design/maintain/contract data centers \n• Set up operations/devops \n• Develop AI for IoT devices \n• Be the next CEO/CTO of a software company \n• Sustainability can be your main role: \n• Green Software Developer \n• Sustainability Consultant \n• Green Advocate  \n• Founder of a Green Tech startup (B2B?)\n28\n\nFormat of classes\n• In-person. \n• Collegerama recordings. \n• Lectures and Labs. \n• Guest lectures. \n• Steering meetings (after week 5, new schedule)\n29\n\nFormat of classes\n• There’s no exam in this course. It’s more important that we learn how to \ndiscuss this topic and come up with new ideas than learning all the theory. \nCritical thinking over checkboxes. \n• Mix of content and discussion \n• Ultimately, the lectures aim to give you food for thought and the necessary \nknowledge to excel in Project 2.', '• Examples: \n• Technical Debt \n• Does it scale? \n• Software testing \n• Bus-factor \n• Data integrity \n• Innovation \n• …\n10\n\nIndividual\n• Well-being of the individuals in an organisation.\u2028\nNote that it also includes how well individuals interact \nwith each other within the org. \n• Examples: \n• mental and physical well-being \n• self-respect \n• education/skills \n• career development \n• …\n11\n\nSocial\n• concerned with societal communities (groups of people, \norganisations) and the factors that erode trust in society. \n• Examples: \n• Social equity \n• Justice \n• Employment \n• Democracy \n• … \n• Also includes compliance with policies and regulations \n12\n\nEnvironmental Sustainability\n• the branch of Software Engineering that studies \nthe development of software that has minimal \nimpact in our planet throughout its whole \nlifecycle. \n• Looking at software at different levels: \n• Developing, Using, Serving, … \n• Also includes e-waste. \n• Almost identical to Green Software. (?)\n13\nBordallo II\n\nGreen Software\n• Sustainability and energy efficiency. \n• Building energy-efficient software is important also from a \ntechnical sustainability POV. \n• Smartphones, smart wearables, IoT devices, etc. run on limited \npower resources. \n• Developing software to these devices require energy-efficiency \ntesting and improvement. \n• It also leads to environmental sustainability (e.g., less battery \ncycles) \n• Important for UX (e.g., no need to walk around with power banks)\n14\n\nhttps://www.menti.com/uns9d89kzn\nWhat is the sustainability \ndimension you are most \ninterested in?\n?\n15\n\nEconomical sustainability tops the environment\n• In general, a software project will not survive if it’s not economical \nsustainable \n• Yet, a project can survive even if it is not environmental sustainable \n• The mindset is changing! \n• Software consumers have started to worry about the climate impact \nof their behaviour as users. \n• Being environmentally sustainable is now an important competitive \nfactor \n• Marketing teams are already using all eco-friendly labels. Technical \nteams are not there yet, though. \n• It’s easier said than done!\n$\n16\n\nGreen Washing\n• Deceptively use marketing techniques to \nclaim being eco-friendly.']","[""['Buzz words\\n• Eco-friendly\\n• Climate change, action, adaption\\n• Energy eﬃciency\\n• Environmental-responsible\\n• Carbon-neutral; Climate-neutral; Net zero\\n• Carbon-oﬀsetting\\n• Carbon-free\\n• Clean technology\\n• E-waste\\n5']""]","Adaptation in the context of green software practices involves developing software that minimizes environmental impact throughout its lifecycle. This includes focusing on energy efficiency, which is crucial for devices with limited power resources like smartphones and IoT devices. By improving energy efficiency, developers can reduce the frequency of battery cycles, contributing to environmental sustainability. Additionally, adaptation involves creating software that can operate efficiently under varying conditions, which is essential as climate change impacts different regions differently. This approach helps ensure that software solutions remain effective and sustainable, even as environmental conditions evolve.","The term 'adaption' is mentioned in the context of climate change, alongside other buzzwords such as eco-friendly, energy efficiency, and environmental responsibility.",0.0,0.0,0.4,0.0,0.0,0.9312835220272656
Can you provide an example of greenwashing in the context of software?,"['8\n\nhttps://tqrg.github.io/energy-patterns\n\nDark UI Colors \nProvide a dark UI color theme to \nsave battery on devices with \nAMOLED screens.\n• Context: […] Apps that require heavy usage of screen can \nhave a substantial negative impact on battery life. \n• Solution: Provide a UI theme with dark background colors. […]\n• Example: In a reading app, provide a theme with a dark \nbackground using light colors to display text. […] \n10\n\nDark UI Colors \nProvide a dark UI color theme to \nsave battery on devices with \nAMOLED screens.\n• Context: […] Apps that require heavy usage of screen can \nhave a substantial negative impact on battery life. \n• Solution: Provide a UI theme with dark background colors. […]\n• Example: In a reading app, provide a theme with a dark \nbackground using light colors to display text. […] \n11\n\nDynamic Retry Delay\n• Context: […] In a mobile app, when a given resource is \nunavailable, the app will unnecessarily try to connect the resource \nfor a number of times, leading to unnecessary power consumption. \n• Solution: Increase retry interval after each failed connection. […]\n• Example: Consider a mobile app that provides a news feed and \nthe app is not able to reach the server to collect updates. […] use \nthe Fibonacci series to increase the time between attempts.\nWhenever an attempt to access a \nresource fails, increase the time \ninterval before retrying.\n12\n\nBatch Operations \n• Context: Executing operations separately leads to extraneous \ntail energy consumptions  \n• Solution: Bundle multiple operations in a single one. […]\n• Example: Use system provided APIs to schedule background \ntasks. These APIs, guarantee that device will exit sleep mode \nonly when there is a reasonable amount of work to do or when a \ngiven task is urgent. […]\n13\n\nAvoid Extraneous Graphics and \nAnimations  \n• Context: Mobile apps that feature impressive graphics \nand animations. […] \n• Solution: Study the importance of graphics and \nanimations to the user experience and reduce them when \napplicable. […]\n• Example: Resort to low frame rates for animations when \npossible. \nDespite being important to improve user experience, graphics \nand animations are battery intensive and should be used with \nmoderation.', '• Software consumers have started to worry about the climate impact \nof their behaviour as users. \n• Being environmentally sustainable is now an important competitive \nfactor \n• Marketing teams are already using all eco-friendly labels. Technical \nteams are not there yet, though. \n• It’s easier said than done!\n$\n16\n\nGreen Washing\n• Deceptively use marketing techniques to \nclaim being eco-friendly. \n• Opting for green-coloured designs. \n• Red/orange is usually perceived as \ntasty. \n• Green is perceived as eco-friendly. \n• The VW case. (?)\n17\n\nThe VW scandal\nGreenwashing\n• Used software to cheat on vehicle emissions \ntests. \n• The vehicle’s software could detect whether they \nwere being tested, changing the performance \naccordingly to improve results. \n• Affected 11M cars worldwide, 8M in Europe.\n18\n\nHow can we drive sustainability \nin the SE industry?\n\nGreen Procurement\n• Customers decide on providers that share their values \n• This is currently the main trigger reason why organisations \nworry about Sustainability and Green Software. \n• Examples of green procurement: \n• Customers that only buy green services/products \n• Companies that only use green providers \n• Developers that only work for green companies \n• Green procurement makes environmental sustainability \nessential for economical sustainability.\n20\n\nSustainability via compliance\n• EU wants to be carbon neutral by 2030 \n• This also affects the ICT sector. Estimated to impact \n14% of the global carbon footprint by 2040. \n• Some initiatives are already being negotiated. \n• Extending the smartphone lifetime to 7 years. \n• Right-to-repair movement. https://repair.eu \n• Making IT services relying on clean energy more \naccessible (e.g., less taxes).\n21\n\nSoftware for Sustainability \n• We are not covering it in this course.\n\nCarbon-free giants\n• Google, Microsoft, Meta/Facebook want to be carbon free by 2030 \n• Carbon free is different from carbon neutral \n• Green IT experts are needed to meet these goals\n23\n\n\nRebound effect*\n• Energy consumption decreases ↓↓ but demand also increases ↑↑. \n• *a.k.a. Jevons Paradox in economics; Downs–Thomson paradox in\xa0mobility.']","[""['The VW scandal\\nGreenwashing\\n• Used software to cheat on vehicle emissions \\ntests.\\n• The vehicle’s software could detect whether they \\nwere being tested, changing the performance \\naccordingly to improve results.\\n• Aﬀected 11M cars worldwide, 8M in Europe.\\n18']""]","An example of greenwashing in the context of software is the Volkswagen scandal. In this case, Volkswagen used software to cheat on vehicle emissions tests. The software could detect when the vehicles were being tested and would alter the performance to improve results, making the vehicles appear more eco-friendly than they actually were. This affected 11 million cars worldwide.","An example of greenwashing in software is the VW scandal, where vehicles' software was used to cheat on emissions tests by altering performance during testing.",0.49999999995,1.0,1.0,0.86,0.0,0.9999999999999992
How can we drive sustainability in the software engineering industry?,"['• Software consumers have started to worry about the climate impact \nof their behaviour as users. \n• Being environmentally sustainable is now an important competitive \nfactor \n• Marketing teams are already using all eco-friendly labels. Technical \nteams are not there yet, though. \n• It’s easier said than done!\n$\n16\n\nGreen Washing\n• Deceptively use marketing techniques to \nclaim being eco-friendly. \n• Opting for green-coloured designs. \n• Red/orange is usually perceived as \ntasty. \n• Green is perceived as eco-friendly. \n• The VW case. (?)\n17\n\nThe VW scandal\nGreenwashing\n• Used software to cheat on vehicle emissions \ntests. \n• The vehicle’s software could detect whether they \nwere being tested, changing the performance \naccordingly to improve results. \n• Affected 11M cars worldwide, 8M in Europe.\n18\n\nHow can we drive sustainability \nin the SE industry?\n\nGreen Procurement\n• Customers decide on providers that share their values \n• This is currently the main trigger reason why organisations \nworry about Sustainability and Green Software. \n• Examples of green procurement: \n• Customers that only buy green services/products \n• Companies that only use green providers \n• Developers that only work for green companies \n• Green procurement makes environmental sustainability \nessential for economical sustainability.\n20\n\nSustainability via compliance\n• EU wants to be carbon neutral by 2030 \n• This also affects the ICT sector. Estimated to impact \n14% of the global carbon footprint by 2040. \n• Some initiatives are already being negotiated. \n• Extending the smartphone lifetime to 7 years. \n• Right-to-repair movement. https://repair.eu \n• Making IT services relying on clean energy more \naccessible (e.g., less taxes).\n21\n\nSoftware for Sustainability \n• We are not covering it in this course.\n\nCarbon-free giants\n• Google, Microsoft, Meta/Facebook want to be carbon free by 2030 \n• Carbon free is different from carbon neutral \n• Green IT experts are needed to meet these goals\n23\n\n\nRebound effect*\n• Energy consumption decreases ↓↓ but demand also increases ↑↑. \n• *a.k.a. Jevons Paradox in economics; Downs–Thomson paradox in\xa0mobility.', 'Luís Cruz \nL.Cruz@tudelft.nl \n10. Project 2\nSustainable Software Engineering\u2028\nCS4575\nSustainableSE 2025\nCarolin Brandt \nC.E.Brandt@tudelft.nl \nEnrique Barba Roque \nE.BarbaRoque@tudelft.nl\n\n1. Goal/assignment \n2. Deliverables \n3. Strategy \n4. Ideas\n\nAssignment\n• Goal: Solve a Sustainable Software Engineering problem. \n• Identify 1 problem that should be fixed to help enabling sustainability in \nthe software engineering industry/community. \n• Propose a solution. A tool, framework, guidelines, etc. \n• Implementation. \n• Validation. (Depending on the idea) \n• Dissemination/social impact. (Solution should be open source, welcome \ncontributors, post on social media? Tool website? Available in a package \nmanager?)\n3\n\nDeliverables\n• Paper-like article. (Min 4 pages, max 10) \n• Online git repo with open source codebase and/or replication package. \n• Presentation: 5 min + 5min Q&A\n4\n\nArticle\n• Different projects will have different expectations -> Make agreements with \nyour coach. \n• Some projects are more technical and some projects more theoretical. \n• Common requirements: \n• Motivation, formulation of the problem being addressed, etc. \n• Description of the solution. \n• Validation of the solution (if applicable -> discuss with coach) \n• Discussion of the solution. (Including limitations)\n5\n\nStrategy\n• Starting next week, there are no lectures  \n• Steering meetings from week 5 till week 9 (either online or in person).  \n• 1 steering meeting per week. (4+1 sprints) \n• Every week, you need to plan different tasks and assignments. \n• Deadline April 4.\n6\n\nStrategy\n• Week 0 \n• Decide project idea (today) \n• Define steering meeting schedule \n• Create working document of the \narticle: Problem statement and solution \nproposal! \n• Define and assign tasks for each week. \n• Week 1 \n• Implementation \n• Agreements with supervisor. \n• Week 2 \n• Implementation \n• Week 3 \n• Implementation, Full draft of article, \ndissemination.']","[""['How can we drive sustainability \\nin the SE industry?']""]","To drive sustainability in the software engineering industry, several approaches can be taken:

1. **Green Procurement**: Encourage customers and companies to choose providers and products that align with their environmental values. This includes only buying green services/products and working with green companies, making environmental sustainability essential for economic sustainability.

2. **Compliance with Regulations**: Adhere to regulations such as the EU's goal to be carbon neutral by 2030, which impacts the ICT sector. This includes initiatives like extending the smartphone lifetime and supporting the right-to-repair movement.

3. **Carbon-Free Goals**: Follow the lead of major companies like Google, Microsoft, and Meta/Facebook, which aim to be carbon-free by 2030. This requires expertise in Green IT to achieve these goals.

4. **Avoid Greenwashing**: Ensure that marketing claims about being eco-friendly are genuine and not deceptive, as seen in the VW scandal where software was used to cheat on emissions tests.

5. **Address the Rebound Effect**: Be aware of the rebound effect, where energy consumption decreases but demand increases, and plan accordingly to mitigate its impact.

By focusing on these strategies, the software engineering industry can make significant strides toward sustainability.","Driving sustainability in the software engineering industry involves implementing practices that reduce environmental impact, promote resource efficiency, and encourage ethical development processes.",0.9999999999,1.0,0.8571428571428571,0.0,0.0,0.9767278229736424
How did the software in the VW scandal help cheat emissions tests and affect so many cars?,"['• Software consumers have started to worry about the climate impact \nof their behaviour as users. \n• Being environmentally sustainable is now an important competitive \nfactor \n• Marketing teams are already using all eco-friendly labels. Technical \nteams are not there yet, though. \n• It’s easier said than done!\n$\n16\n\nGreen Washing\n• Deceptively use marketing techniques to \nclaim being eco-friendly. \n• Opting for green-coloured designs. \n• Red/orange is usually perceived as \ntasty. \n• Green is perceived as eco-friendly. \n• The VW case. (?)\n17\n\nThe VW scandal\nGreenwashing\n• Used software to cheat on vehicle emissions \ntests. \n• The vehicle’s software could detect whether they \nwere being tested, changing the performance \naccordingly to improve results. \n• Affected 11M cars worldwide, 8M in Europe.\n18\n\nHow can we drive sustainability \nin the SE industry?\n\nGreen Procurement\n• Customers decide on providers that share their values \n• This is currently the main trigger reason why organisations \nworry about Sustainability and Green Software. \n• Examples of green procurement: \n• Customers that only buy green services/products \n• Companies that only use green providers \n• Developers that only work for green companies \n• Green procurement makes environmental sustainability \nessential for economical sustainability.\n20\n\nSustainability via compliance\n• EU wants to be carbon neutral by 2030 \n• This also affects the ICT sector. Estimated to impact \n14% of the global carbon footprint by 2040. \n• Some initiatives are already being negotiated. \n• Extending the smartphone lifetime to 7 years. \n• Right-to-repair movement. https://repair.eu \n• Making IT services relying on clean energy more \naccessible (e.g., less taxes).\n21\n\nSoftware for Sustainability \n• We are not covering it in this course.\n\nCarbon-free giants\n• Google, Microsoft, Meta/Facebook want to be carbon free by 2030 \n• Carbon free is different from carbon neutral \n• Green IT experts are needed to meet these goals\n23\n\n\nRebound effect*\n• Energy consumption decreases ↓↓ but demand also increases ↑↑. \n• *a.k.a. Jevons Paradox in economics; Downs–Thomson paradox in\xa0mobility.', '(?)\n\nPractical Significance\n• Depending on the case, a 2% improvement might be either wonderful or completely \nuseless. \n• Effect size analyses help assess practical significance but might not be enough. \n• A critical discussion always needs to be performed. Consider context and explain in what \nsense the effect size might be relevant. \n• E.g.: \n•  to improve 2% in energy efficiency the code will be less readable or the user \nexperience is not so appealing. \n• A particular method improves 2% but it will only be used 1% of the time. \n• There is no particular metric or structure, but this kind of critical analysis is very important.\n25\n\nWhat if data is not Normal?\nSame approach but different tests/metrics!\n\nNon-normal data\n• Statistical significance: non-parametric test (?) \n• Mann-Whitney U test. Instead of looking at standard deviation or mean, it orders \nsamples and compares with each other. \n• Less power than parametric-tests (?) \n• Effect size \n• Median difference: \n \n• Percentage of pairs supporting a conclusion\u2028\n(i.e., # pairs where version A > version B/ total pairs) \n• Common language effect size: \nΔM\nU1\nN1N2\n27\n\nRecap\nImpossible to \nfix but \nexplainable.\n\nEnergy Efficiency Across \nProgramming Languages\nhttps://sites.google.com/view/energy-efficiency-languages\n29\nRui Pereira, Marco Couto, Francisco Ribeiro, Rui Rua, Jácome \nCunha, João Paulo Fernandes, and João Saraiva\n\n• Is a faster programming language also more energy efficient? \n• Comparing different programming languages is not an easy task. \n• They differ in many mechanisms: \n• Interpreted vs Compiled \n• Optimisations at the compiler level \n• Virtual machine \n• Garbage collector \n• Available libraries\n30\n\nResearch Questions\n• Can we compare the energy efficiency of software languages?  \n• Is the faster language always the most energy efficient? \n• How does memory usage relate to energy consumption? (We don’t cover this one) \n• Can we automatically decide what is the best programming language \nconsidering energy, time, and memory usage?']","[""['The VW scandal\\nGreenwashing\\n• Used software to cheat on vehicle emissions \\ntests.\\n• The vehicle’s software could detect whether they \\nwere being tested, changing the performance \\naccordingly to improve results.\\n• Aﬀected 11M cars worldwide, 8M in Europe.\\n18']""]","The software in the VW scandal was designed to detect when vehicles were undergoing emissions tests. During these tests, the software would alter the vehicle's performance to improve emissions results, making the cars appear more environmentally friendly than they actually were. This deceptive practice affected 11 million cars worldwide, with 8 million of those in Europe.","The software in the VW scandal was used to cheat emissions tests by detecting when the vehicle was being tested and altering its performance to improve results. This affected 11 million cars worldwide, with 8 million in Europe.",0.9999999999,1.0,1.0,1.0,0.0,0.9519277877083504
How does environmental sustainability play a role as a competitive factor in software projects?,"['• Examples: \n• Technical Debt \n• Does it scale? \n• Software testing \n• Bus-factor \n• Data integrity \n• Innovation \n• …\n10\n\nIndividual\n• Well-being of the individuals in an organisation.\u2028\nNote that it also includes how well individuals interact \nwith each other within the org. \n• Examples: \n• mental and physical well-being \n• self-respect \n• education/skills \n• career development \n• …\n11\n\nSocial\n• concerned with societal communities (groups of people, \norganisations) and the factors that erode trust in society. \n• Examples: \n• Social equity \n• Justice \n• Employment \n• Democracy \n• … \n• Also includes compliance with policies and regulations \n12\n\nEnvironmental Sustainability\n• the branch of Software Engineering that studies \nthe development of software that has minimal \nimpact in our planet throughout its whole \nlifecycle. \n• Looking at software at different levels: \n• Developing, Using, Serving, … \n• Also includes e-waste. \n• Almost identical to Green Software. (?)\n13\nBordallo II\n\nGreen Software\n• Sustainability and energy efficiency. \n• Building energy-efficient software is important also from a \ntechnical sustainability POV. \n• Smartphones, smart wearables, IoT devices, etc. run on limited \npower resources. \n• Developing software to these devices require energy-efficiency \ntesting and improvement. \n• It also leads to environmental sustainability (e.g., less battery \ncycles) \n• Important for UX (e.g., no need to walk around with power banks)\n14\n\nhttps://www.menti.com/uns9d89kzn\nWhat is the sustainability \ndimension you are most \ninterested in?\n?\n15\n\nEconomical sustainability tops the environment\n• In general, a software project will not survive if it’s not economical \nsustainable \n• Yet, a project can survive even if it is not environmental sustainable \n• The mindset is changing! \n• Software consumers have started to worry about the climate impact \nof their behaviour as users. \n• Being environmentally sustainable is now an important competitive \nfactor \n• Marketing teams are already using all eco-friendly labels. Technical \nteams are not there yet, though. \n• It’s easier said than done!\n$\n16\n\nGreen Washing\n• Deceptively use marketing techniques to \nclaim being eco-friendly.', 'Carolin Brandt \nC.E.Brandt@tudelft.nl \nLuís Cruz \nL.Cruz@tudelft.nl \n1. Intro Class\nSustainable Software Engineering\u2028\nCS4575\nSustainableSE 2025\nEnrique Barba Roque \nE.BarbaRoque@tudelft.nl\n\n1. Intro to Sustainable SE \n2. Intro to the course\n2\n\nof the electricity consumed worldwide \nby 2040 will stem from ICT\n14%\n\n4\nhttps://xkcd.com/1007/\n\nBuzz words\n• Eco-friendly \n• Climate change, action, adaption \n• Energy efficiency \n• Environmental-responsible \n• Carbon-neutral; Climate-neutral; Net zero \n• Carbon-offsetting \n• Carbon-free \n• Clean technology \n• E-waste\n5\n\nhttps://www.menti.com/uns9d89kzn\nWhat is Sustainable \nSoftware Engineering?\n?\n6\n\nSustainable Software \nEngineering is…\n7\n…the discipline that studies the process of creating software systems that are able \nto create value in the long term without hindering its surrounding environment.\n\n8\nEconomical\nSocial\nTechnical\nIndividual\nEnvironmental\nSustainable\nSoftware\nEngineering\n⭐\nTechnical\u2028\n⚙\nEconomical\u2028\n💰\nSocial\u2028\n👩💼👨💼👩💼👩💼\nIndividual\u2028\n👩💻\nEnvironmental\u2028\n🌱\nSustainable\u2028\nSoftware \nEngineering\n\nEconomical\n• Focused on assets, capital and added value\u2028\n(wealth creation, prosperity, profitability, capital \ninvestment, income, etc.) \n• Nr of customers  \n• Man-day-rate estimate \n• Next round of funding \n• Meet requirements in the contract\n9\n\nTechnical\n• Longevity of information, systems, and infrastructure and their \nadequate evolution with changing surrounding conditions. \n• Examples: \n• Technical Debt \n• Does it scale? \n• Software testing \n• Bus-factor \n• Data integrity \n• Innovation \n• …\n10\n\nIndividual\n• Well-being of the individuals in an organisation.\u2028\nNote that it also includes how well individuals interact \nwith each other within the org.']","[""['Economical sustainability tops the environment\\n• In general, a software project will not survive if it’s not economical \\nsustainable\\n• Yet, a project can survive even if it is not environmental sustainable\\n• The mindset is changing! \\n• Software consumers have started to worry about the climate impact \\nof their behaviour as users.\\n• Being environmentally sustainable is now an important competitive \\nfactor\\n• Marketing teams are already using all eco-friendly labels. Technical \\nteams are not there yet, though.\\n• It’s easier said than done!\\n$\\n16']""]","Environmental sustainability is becoming an important competitive factor in software projects as consumers are increasingly concerned about the climate impact of their behavior as users. Being environmentally sustainable can differentiate a software project in the market, as marketing teams are already leveraging eco-friendly labels to attract consumers. This shift in consumer mindset means that projects that prioritize environmental sustainability can gain a competitive edge, even though achieving true environmental sustainability is challenging.","Environmental sustainability has become a key competitive factor in software projects as consumers increasingly prioritize the climate impact of their digital behavior. While marketing teams are actively promoting eco-friendly labels, technical teams are still catching up in implementing sustainable practices.",0.9999999999,1.0,1.0,0.83,0.0,0.9809919809802744
Is Chat GPT energy efficient?,"['Carbon-free giants\n• Google, Microsoft, Meta/Facebook want to be carbon free by 2030 \n• Carbon free is different from carbon neutral \n• Green IT experts are needed to meet these goals\n23\n\n\nRebound effect*\n• Energy consumption decreases ↓↓ but demand also increases ↑↑. \n• *a.k.a. Jevons Paradox in economics; Downs–Thomson paradox in\xa0mobility.\nEnergy per prompt\nPrompts\n100\n80\n30\n38\nChat \nGPT\n“Energy-efficient” \nChat GPT\n0\n\nIs sustainability an\u2028\nethical issue?\n• Climate change is more likely to affect the \npoorest countries. \n• Less financial resources to adapt \n• Climate-impact does not necessarily affect \npolluting countries. \n• Poorest countries have contributed less to the \nclimate change. \n• We need to figure out how to do more using \nless resources.\n26\n\nMorality ≠ Moralising\n• We should not use climate action as a \nshaming weapon \n• Climate action should be agnostic of political \nviews, ideology, social status, etc. \n• We need everyone to take action!\n27\n\nWhy?\n• Throughout your career you might: \n• Design/maintain/contract data centers \n• Set up operations/devops \n• Develop AI for IoT devices \n• Be the next CEO/CTO of a software company \n• Sustainability can be your main role: \n• Green Software Developer \n• Sustainability Consultant \n• Green Advocate  \n• Founder of a Green Tech startup (B2B?)\n28\n\nFormat of classes\n• In-person. \n• Collegerama recordings. \n• Lectures and Labs. \n• Guest lectures. \n• Steering meetings (after week 5, new schedule)\n29\n\nFormat of classes\n• There’s no exam in this course. It’s more important that we learn how to \ndiscuss this topic and come up with new ideas than learning all the theory. \nCritical thinking over checkboxes. \n• Mix of content and discussion \n• Ultimately, the lectures aim to give you food for thought and the necessary \nknowledge to excel in Project 2.', 'data to understand state of software: \nbuildable?, open dev. history?, requirements documentation? \n• Could start with NL, but including your / other countries greatly appreciated!\n\nB7. Queue - but better for the student / TA society\n• Requirements analysis regarding social and individual sustainability effects \nof Queue \n• Other EIP / TUD used software also possible: e.g., Answers EWI \n• Non-technical project → proper process (workshops? Interviews?) & rich \ndescription of outcomes focus of grading\nhttps://eip.pages.ewi.tudelft.nl/eip-website/queue.html\n\nC1. Compare energy consumption of docker images for \nML workloads.\n• Similar to what we have seen in the lectures but for ML-specific workloads. \n• We can reuse existing experiment replication packages.\n22\n\nC2. Plugin to visualize Hugging Face carbon emissions.\n• https://huggingface.co/blog/leaderboard-emissions-\nanalysis \n•\nYoo, Taewon, et al. ""Visualizing the Carbon Intensity of Machine Learning Inference for Image Analysis on TensorFlow Hub.""\n\nC3. Plugin for ChatGPT\n• Users seldom know how much carbon they are emitting when they interact \nwith chat GPT. \n• Let’s make it transparent to the users. Browser plugin?\n24\nCO2\n\nC4. NutriScore for software libraries\n25\n• NutriScore labels are not perfect but they are a good starting point! \n• What if we could do the same thing for the energy efficiency of software. \n• (Also open to individual or social sustainability) \n• This work can be scoped in particular domains/ecossystems/use cases. \n• Libraries for stats? ML? Web Dev? Cloud?\n\nC5. Add energy-awareness to existing software\n26\n• Streamlit, Notebooks, JSFiddle, \nPyScript, zsh, etc. \n•\n\nC6 - Green Shift Left\n• Estimate energy efficiency using static code analysis. \n• We don’t need an accurate value. \n• It is useful to know which code is more likely to \nintroduce energy hotspots and that should be \nreviewed with more attention. \n• Can be scoped to a particular domain (react, php, data \nscience, web, etc., etc.)']","[""['Rebound effect*\\n• Energy consumption decreases ↓↓ but demand also increases ↑↑.\\n• *a.k.a. Jevons Paradox in economics; Downs–Thomson paradox in\\xa0mobility.\\nEnergy per prompt\\nPrompts\\n100\\n80\\n30 38\\nChat \\nGPT “Energy-eﬃcient” \\nChat GPT\\n0']""]","The sources do not provide specific information on the energy efficiency of Chat GPT. However, they mention that users seldom know how much carbon they are emitting when they interact with Chat GPT, suggesting that there is room for improvement in transparency regarding its energy consumption. Additionally, there is a suggestion to create a browser plugin to make the carbon emissions of Chat GPT interactions more transparent to users. This implies that while there may be efforts to address energy efficiency, it is not explicitly stated how energy efficient Chat GPT currently is.","Yes, Chat GPT is described as energy-efficient.",0.9999999999,0.0,1.0,0.0,0.9999999900000002,0.0
"Is sustainability considered an ethical issue, especially when considering how poorer countries are disproportionately affected by climate change despite having fewer resources to adapt and contributing less to the problem?","['Carbon-free giants\n• Google, Microsoft, Meta/Facebook want to be carbon free by 2030 \n• Carbon free is different from carbon neutral \n• Green IT experts are needed to meet these goals\n23\n\n\nRebound effect*\n• Energy consumption decreases ↓↓ but demand also increases ↑↑. \n• *a.k.a. Jevons Paradox in economics; Downs–Thomson paradox in\xa0mobility.\nEnergy per prompt\nPrompts\n100\n80\n30\n38\nChat \nGPT\n“Energy-efficient” \nChat GPT\n0\n\nIs sustainability an\u2028\nethical issue?\n• Climate change is more likely to affect the \npoorest countries. \n• Less financial resources to adapt \n• Climate-impact does not necessarily affect \npolluting countries. \n• Poorest countries have contributed less to the \nclimate change. \n• We need to figure out how to do more using \nless resources.\n26\n\nMorality ≠ Moralising\n• We should not use climate action as a \nshaming weapon \n• Climate action should be agnostic of political \nviews, ideology, social status, etc. \n• We need everyone to take action!\n27\n\nWhy?\n• Throughout your career you might: \n• Design/maintain/contract data centers \n• Set up operations/devops \n• Develop AI for IoT devices \n• Be the next CEO/CTO of a software company \n• Sustainability can be your main role: \n• Green Software Developer \n• Sustainability Consultant \n• Green Advocate  \n• Founder of a Green Tech startup (B2B?)\n28\n\nFormat of classes\n• In-person. \n• Collegerama recordings. \n• Lectures and Labs. \n• Guest lectures. \n• Steering meetings (after week 5, new schedule)\n29\n\nFormat of classes\n• There’s no exam in this course. It’s more important that we learn how to \ndiscuss this topic and come up with new ideas than learning all the theory. \nCritical thinking over checkboxes. \n• Mix of content and discussion \n• Ultimately, the lectures aim to give you food for thought and the necessary \nknowledge to excel in Project 2.', '8\n\nhttps://tqrg.github.io/energy-patterns\n\nDark UI Colors \nProvide a dark UI color theme to \nsave battery on devices with \nAMOLED screens.\n• Context: […] Apps that require heavy usage of screen can \nhave a substantial negative impact on battery life. \n• Solution: Provide a UI theme with dark background colors. […]\n• Example: In a reading app, provide a theme with a dark \nbackground using light colors to display text. […] \n10\n\nDark UI Colors \nProvide a dark UI color theme to \nsave battery on devices with \nAMOLED screens.\n• Context: […] Apps that require heavy usage of screen can \nhave a substantial negative impact on battery life. \n• Solution: Provide a UI theme with dark background colors. […]\n• Example: In a reading app, provide a theme with a dark \nbackground using light colors to display text. […] \n11\n\nDynamic Retry Delay\n• Context: […] In a mobile app, when a given resource is \nunavailable, the app will unnecessarily try to connect the resource \nfor a number of times, leading to unnecessary power consumption. \n• Solution: Increase retry interval after each failed connection. […]\n• Example: Consider a mobile app that provides a news feed and \nthe app is not able to reach the server to collect updates. […] use \nthe Fibonacci series to increase the time between attempts.\nWhenever an attempt to access a \nresource fails, increase the time \ninterval before retrying.\n12\n\nBatch Operations \n• Context: Executing operations separately leads to extraneous \ntail energy consumptions  \n• Solution: Bundle multiple operations in a single one. […]\n• Example: Use system provided APIs to schedule background \ntasks. These APIs, guarantee that device will exit sleep mode \nonly when there is a reasonable amount of work to do or when a \ngiven task is urgent. […]\n13\n\nAvoid Extraneous Graphics and \nAnimations  \n• Context: Mobile apps that feature impressive graphics \nand animations. […] \n• Solution: Study the importance of graphics and \nanimations to the user experience and reduce them when \napplicable. […]\n• Example: Resort to low frame rates for animations when \npossible. \nDespite being important to improve user experience, graphics \nand animations are battery intensive and should be used with \nmoderation.']","[""['Is sustainability an\\u2028\\nethical issue?\\n• Climate change is more likely to aﬀect the \\npoorest countries.\\n• Less ﬁnancial resources to adapt\\n• Climate-impact does not necessarily aﬀect \\npolluting countries.\\n• Poorest countries have contributed less to the \\nclimate change.\\n• We need to ﬁgure out how to do more using \\nless resources.\\n26']""]","Yes, sustainability is considered an ethical issue, particularly because climate change disproportionately affects poorer countries. These countries have fewer financial resources to adapt to the impacts of climate change, despite having contributed less to the problem. This raises ethical concerns about fairness and responsibility in addressing climate change and its effects.","Yes, sustainability is considered an ethical issue because poorer countries are disproportionately affected by climate change despite having fewer resources to adapt and contributing less to the problem. This raises questions about fairness and responsibility in addressing these challenges.",0.9999999999,1.0,1.0,1.0,0.4285714279591837,0.919085497730579
What are some examples of green procurement?,"['• Software consumers have started to worry about the climate impact \nof their behaviour as users. \n• Being environmentally sustainable is now an important competitive \nfactor \n• Marketing teams are already using all eco-friendly labels. Technical \nteams are not there yet, though. \n• It’s easier said than done!\n$\n16\n\nGreen Washing\n• Deceptively use marketing techniques to \nclaim being eco-friendly. \n• Opting for green-coloured designs. \n• Red/orange is usually perceived as \ntasty. \n• Green is perceived as eco-friendly. \n• The VW case. (?)\n17\n\nThe VW scandal\nGreenwashing\n• Used software to cheat on vehicle emissions \ntests. \n• The vehicle’s software could detect whether they \nwere being tested, changing the performance \naccordingly to improve results. \n• Affected 11M cars worldwide, 8M in Europe.\n18\n\nHow can we drive sustainability \nin the SE industry?\n\nGreen Procurement\n• Customers decide on providers that share their values \n• This is currently the main trigger reason why organisations \nworry about Sustainability and Green Software. \n• Examples of green procurement: \n• Customers that only buy green services/products \n• Companies that only use green providers \n• Developers that only work for green companies \n• Green procurement makes environmental sustainability \nessential for economical sustainability.\n20\n\nSustainability via compliance\n• EU wants to be carbon neutral by 2030 \n• This also affects the ICT sector. Estimated to impact \n14% of the global carbon footprint by 2040. \n• Some initiatives are already being negotiated. \n• Extending the smartphone lifetime to 7 years. \n• Right-to-repair movement. https://repair.eu \n• Making IT services relying on clean energy more \naccessible (e.g., less taxes).\n21\n\nSoftware for Sustainability \n• We are not covering it in this course.\n\nCarbon-free giants\n• Google, Microsoft, Meta/Facebook want to be carbon free by 2030 \n• Carbon free is different from carbon neutral \n• Green IT experts are needed to meet these goals\n23\n\n\nRebound effect*\n• Energy consumption decreases ↓↓ but demand also increases ↑↑. \n• *a.k.a. Jevons Paradox in economics; Downs–Thomson paradox in\xa0mobility.', '[…]\n13\n\nAvoid Extraneous Graphics and \nAnimations  \n• Context: Mobile apps that feature impressive graphics \nand animations. […] \n• Solution: Study the importance of graphics and \nanimations to the user experience and reduce them when \napplicable. […]\n• Example: Resort to low frame rates for animations when \npossible. \nDespite being important to improve user experience, graphics \nand animations are battery intensive and should be used with \nmoderation.  \n14\n\nEnergy Patterns are \nmore Frequent\nin Android Apps\n\nExample case: Nextcloud\nFOSS\n\nExample case: Nextcloud\n• Users complain that sometimes they go on a trip and  Nextcloud drains their \nbattery. Users consider uninstalling the app when battery life is essential. \n• File sync can be energy-greedy. Send large files to the server, long 3G/4G data connections. \n• It is mostly used for backup. No real-time collaboration is needed. \n• Energy requirements vary depending on context and user. Some days you really \nneed all the battery you can get. \n• https://github.com/nextcloud/android/commit/\n8bc432027e0d33e8043cf40192203203a40ca29c\nSolutions?\n17\n\nExample case: K-9 mail\n18\n\nExample case: K-9 mail\n19\nSolutions?\n• Some users noticed that K-9 mail was spending more energy than usual. 🙉 \n• A user that was having issues with a personal mail server  noticed that K-9 \nmail was the one of the most energy-greedy apps. IMAP IDLE protocol for real-time \nnotifications. \n• When a connection is not possible, the app automatically retries later.']","[""['Green Procurement\\n• Customers decide on providers that share their values\\n• This is currently the main trigger reason why organisations \\nworry about Sustainability and Green Software.\\n• Examples of green procurement:\\n• Customers that only buy green services/products\\n• Companies that only use green providers\\n• Developers that only work for green companies\\n• Green procurement makes environmental sustainability \\nessential for economical sustainability.\\n20']""]","Examples of green procurement include:

- Customers that only buy green services/products.
- Companies that only use green providers.
- Developers that only work for green companies.

These practices make environmental sustainability essential for economic sustainability.","Examples of green procurement include customers that only buy green services/products, companies that only use green providers, and developers that only work for green companies.",0.9999999999,1.0,1.0,0.86,0.0,0.997931576167458
What are the different dimensions of software engineering and how do they contribute to sustainable software development?,"['• Examples: \n• Technical Debt \n• Does it scale? \n• Software testing \n• Bus-factor \n• Data integrity \n• Innovation \n• …\n10\n\nIndividual\n• Well-being of the individuals in an organisation.\u2028\nNote that it also includes how well individuals interact \nwith each other within the org. \n• Examples: \n• mental and physical well-being \n• self-respect \n• education/skills \n• career development \n• …\n11\n\nSocial\n• concerned with societal communities (groups of people, \norganisations) and the factors that erode trust in society. \n• Examples: \n• Social equity \n• Justice \n• Employment \n• Democracy \n• … \n• Also includes compliance with policies and regulations \n12\n\nEnvironmental Sustainability\n• the branch of Software Engineering that studies \nthe development of software that has minimal \nimpact in our planet throughout its whole \nlifecycle. \n• Looking at software at different levels: \n• Developing, Using, Serving, … \n• Also includes e-waste. \n• Almost identical to Green Software. (?)\n13\nBordallo II\n\nGreen Software\n• Sustainability and energy efficiency. \n• Building energy-efficient software is important also from a \ntechnical sustainability POV. \n• Smartphones, smart wearables, IoT devices, etc. run on limited \npower resources. \n• Developing software to these devices require energy-efficiency \ntesting and improvement. \n• It also leads to environmental sustainability (e.g., less battery \ncycles) \n• Important for UX (e.g., no need to walk around with power banks)\n14\n\nhttps://www.menti.com/uns9d89kzn\nWhat is the sustainability \ndimension you are most \ninterested in?\n?\n15\n\nEconomical sustainability tops the environment\n• In general, a software project will not survive if it’s not economical \nsustainable \n• Yet, a project can survive even if it is not environmental sustainable \n• The mindset is changing! \n• Software consumers have started to worry about the climate impact \nof their behaviour as users. \n• Being environmentally sustainable is now an important competitive \nfactor \n• Marketing teams are already using all eco-friendly labels. Technical \nteams are not there yet, though. \n• It’s easier said than done!\n$\n16\n\nGreen Washing\n• Deceptively use marketing techniques to \nclaim being eco-friendly.', 'Carbon-free giants\n• Google, Microsoft, Meta/Facebook want to be carbon free by 2030 \n• Carbon free is different from carbon neutral \n• Green IT experts are needed to meet these goals\n23\n\n\nRebound effect*\n• Energy consumption decreases ↓↓ but demand also increases ↑↑. \n• *a.k.a. Jevons Paradox in economics; Downs–Thomson paradox in\xa0mobility.\nEnergy per prompt\nPrompts\n100\n80\n30\n38\nChat \nGPT\n“Energy-efficient” \nChat GPT\n0\n\nIs sustainability an\u2028\nethical issue?\n• Climate change is more likely to affect the \npoorest countries. \n• Less financial resources to adapt \n• Climate-impact does not necessarily affect \npolluting countries. \n• Poorest countries have contributed less to the \nclimate change. \n• We need to figure out how to do more using \nless resources.\n26\n\nMorality ≠ Moralising\n• We should not use climate action as a \nshaming weapon \n• Climate action should be agnostic of political \nviews, ideology, social status, etc. \n• We need everyone to take action!\n27\n\nWhy?\n• Throughout your career you might: \n• Design/maintain/contract data centers \n• Set up operations/devops \n• Develop AI for IoT devices \n• Be the next CEO/CTO of a software company \n• Sustainability can be your main role: \n• Green Software Developer \n• Sustainability Consultant \n• Green Advocate  \n• Founder of a Green Tech startup (B2B?)\n28\n\nFormat of classes\n• In-person. \n• Collegerama recordings. \n• Lectures and Labs. \n• Guest lectures. \n• Steering meetings (after week 5, new schedule)\n29\n\nFormat of classes\n• There’s no exam in this course. It’s more important that we learn how to \ndiscuss this topic and come up with new ideas than learning all the theory. \nCritical thinking over checkboxes. \n• Mix of content and discussion \n• Ultimately, the lectures aim to give you food for thought and the necessary \nknowledge to excel in Project 2.']","[""['8\\nEconomical\\nSocial\\nTechnical\\nIndividual\\nEnvironmental\\nSustainable\\nSoftware\\nEngineering\\n⭐\\nTechnical\\u2028\\n⚙\\nEconomical\\u2028\\n💰\\nSocial\\u2028\\n👩💼\\n👨💼\\n👩💼\\n👩💼\\nIndividual\\u2028\\n👩💻\\nEnvironmental\\u2028\\n🌱\\nSustainable\\u2028\\nSoftware \\nEngineering']""]","The different dimensions of software engineering that contribute to sustainable software development include:

1. **Environmental Sustainability**: This dimension focuses on developing software with minimal environmental impact throughout its lifecycle. It includes considerations like e-waste and energy efficiency, particularly for devices with limited power resources such as smartphones and IoT devices. This leads to less frequent battery cycles and contributes to overall environmental sustainability.

2. **Green Software**: Closely related to environmental sustainability, green software emphasizes building energy-efficient software. This is important for both technical sustainability and user experience, as it reduces the need for additional power resources like power banks.

3. **Economical Sustainability**: A software project must be economically sustainable to survive. While environmental sustainability is becoming a competitive factor, economic sustainability remains crucial for the viability of a project.

4. **Individual Well-being**: This dimension considers the mental and physical well-being of individuals within an organization, including their education, skills, and career development. A healthy work environment can lead to more innovative and efficient software development processes.

5. **Social**: This dimension is concerned with societal communities and factors that erode trust in society, such as social equity, justice, and compliance with policies and regulations. Ensuring social sustainability can enhance the reputation and acceptance of software products in the market.

Each of these dimensions contributes to sustainable software development by ensuring that software is not only environmentally friendly but also economically viable, socially responsible, and supportive of individual well-being.","Software engineering encompasses several dimensions, including Technical, Economical, Social, Individual, Environmental, and Sustainable aspects. These dimensions contribute to sustainable software development by ensuring that solutions are not only technically sound but also consider economic viability, social impact, individual needs, environmental sustainability, and long-term maintainability.",0.9999999999,1.0,0.8,0.67,0.0,0.9818891151015218
What are the factors that erode trust in societal communities?,"['• Examples: \n• Technical Debt \n• Does it scale? \n• Software testing \n• Bus-factor \n• Data integrity \n• Innovation \n• …\n10\n\nIndividual\n• Well-being of the individuals in an organisation.\u2028\nNote that it also includes how well individuals interact \nwith each other within the org. \n• Examples: \n• mental and physical well-being \n• self-respect \n• education/skills \n• career development \n• …\n11\n\nSocial\n• concerned with societal communities (groups of people, \norganisations) and the factors that erode trust in society. \n• Examples: \n• Social equity \n• Justice \n• Employment \n• Democracy \n• … \n• Also includes compliance with policies and regulations \n12\n\nEnvironmental Sustainability\n• the branch of Software Engineering that studies \nthe development of software that has minimal \nimpact in our planet throughout its whole \nlifecycle. \n• Looking at software at different levels: \n• Developing, Using, Serving, … \n• Also includes e-waste. \n• Almost identical to Green Software. (?)\n13\nBordallo II\n\nGreen Software\n• Sustainability and energy efficiency. \n• Building energy-efficient software is important also from a \ntechnical sustainability POV. \n• Smartphones, smart wearables, IoT devices, etc. run on limited \npower resources. \n• Developing software to these devices require energy-efficiency \ntesting and improvement. \n• It also leads to environmental sustainability (e.g., less battery \ncycles) \n• Important for UX (e.g., no need to walk around with power banks)\n14\n\nhttps://www.menti.com/uns9d89kzn\nWhat is the sustainability \ndimension you are most \ninterested in?\n?\n15\n\nEconomical sustainability tops the environment\n• In general, a software project will not survive if it’s not economical \nsustainable \n• Yet, a project can survive even if it is not environmental sustainable \n• The mindset is changing! \n• Software consumers have started to worry about the climate impact \nof their behaviour as users. \n• Being environmentally sustainable is now an important competitive \nfactor \n• Marketing teams are already using all eco-friendly labels. Technical \nteams are not there yet, though. \n• It’s easier said than done!\n$\n16\n\nGreen Washing\n• Deceptively use marketing techniques to \nclaim being eco-friendly.', '36\n\nGreen TU\n• https://www.tudelft.nl/sustainability/get-\ninvolved/greentu \n• Student organisation at the TU Delft devoted \nto stimulating sustainability in education, \nresearch, university operations and \ncommunity engagement.\n37\n\nClimateAction.tech\n• Great community for outreach \n• Based on Slack  \n• Regular meetings, talks, social events \n• You can join as a volunteer or simply to \nconnect to other techies \n• Also good to for job hunting on green tech.\n38\n\nClimateAction.tech\n39\n\nBranch magazine\n• Stay up-to-date on sustainable tech \n• Creativity booster \n• Carbon-aware UI \n• https://branch.climateaction.tech 🔗\n40\n\nThis is the fourth edition\n• Any feedback is welcome! Email or DM!\n41\n\n42\n\nCarolin Brandt \nC.E.Brandt@tudelft.nl \nLuís Cruz \nL.Cruz@tudelft.nl \n1. Intro Class\nSustainable Software Engineering\u2028\nCS4575\nSustainableSE 2025\nEnrique Barba Roque \nE.BarbaRoque@tudelft.nl']","[""['Social\\n• concerned with societal communities (groups of people, \\norganisations) and the factors that erode trust in society.\\n• Examples:\\n• Social equity\\n• Justice\\n• Employment\\n• Democracy\\n• …\\n• Also includes compliance with policies and regulations \\n12']""]","Factors that erode trust in societal communities include issues related to social equity, justice, employment, and democracy. Compliance with policies and regulations also plays a role in maintaining or eroding trust within these communities.","Factors that erode trust in societal communities include social equity, justice, employment, democracy, and compliance with policies and regulations.",0.9999999999,1.0,0.8333333333333334,,0.1999999996,0.9870281026755968
"What are the goals of the companies referred to as 'Carbon-free giants' in terms of achieving carbon-free status, and what does this imply for the role of green IT experts?","['Carbon-free giants\n• Google, Microsoft, Meta/Facebook want to be carbon free by 2030 \n• Carbon free is different from carbon neutral \n• Green IT experts are needed to meet these goals\n23\n\n\nRebound effect*\n• Energy consumption decreases ↓↓ but demand also increases ↑↑. \n• *a.k.a. Jevons Paradox in economics; Downs–Thomson paradox in\xa0mobility.\nEnergy per prompt\nPrompts\n100\n80\n30\n38\nChat \nGPT\n“Energy-efficient” \nChat GPT\n0\n\nIs sustainability an\u2028\nethical issue?\n• Climate change is more likely to affect the \npoorest countries. \n• Less financial resources to adapt \n• Climate-impact does not necessarily affect \npolluting countries. \n• Poorest countries have contributed less to the \nclimate change. \n• We need to figure out how to do more using \nless resources.\n26\n\nMorality ≠ Moralising\n• We should not use climate action as a \nshaming weapon \n• Climate action should be agnostic of political \nviews, ideology, social status, etc. \n• We need everyone to take action!\n27\n\nWhy?\n• Throughout your career you might: \n• Design/maintain/contract data centers \n• Set up operations/devops \n• Develop AI for IoT devices \n• Be the next CEO/CTO of a software company \n• Sustainability can be your main role: \n• Green Software Developer \n• Sustainability Consultant \n• Green Advocate  \n• Founder of a Green Tech startup (B2B?)\n28\n\nFormat of classes\n• In-person. \n• Collegerama recordings. \n• Lectures and Labs. \n• Guest lectures. \n• Steering meetings (after week 5, new schedule)\n29\n\nFormat of classes\n• There’s no exam in this course. It’s more important that we learn how to \ndiscuss this topic and come up with new ideas than learning all the theory. \nCritical thinking over checkboxes. \n• Mix of content and discussion \n• Ultimately, the lectures aim to give you food for thought and the necessary \nknowledge to excel in Project 2.', '• Software consumers have started to worry about the climate impact \nof their behaviour as users. \n• Being environmentally sustainable is now an important competitive \nfactor \n• Marketing teams are already using all eco-friendly labels. Technical \nteams are not there yet, though. \n• It’s easier said than done!\n$\n16\n\nGreen Washing\n• Deceptively use marketing techniques to \nclaim being eco-friendly. \n• Opting for green-coloured designs. \n• Red/orange is usually perceived as \ntasty. \n• Green is perceived as eco-friendly. \n• The VW case. (?)\n17\n\nThe VW scandal\nGreenwashing\n• Used software to cheat on vehicle emissions \ntests. \n• The vehicle’s software could detect whether they \nwere being tested, changing the performance \naccordingly to improve results. \n• Affected 11M cars worldwide, 8M in Europe.\n18\n\nHow can we drive sustainability \nin the SE industry?\n\nGreen Procurement\n• Customers decide on providers that share their values \n• This is currently the main trigger reason why organisations \nworry about Sustainability and Green Software. \n• Examples of green procurement: \n• Customers that only buy green services/products \n• Companies that only use green providers \n• Developers that only work for green companies \n• Green procurement makes environmental sustainability \nessential for economical sustainability.\n20\n\nSustainability via compliance\n• EU wants to be carbon neutral by 2030 \n• This also affects the ICT sector. Estimated to impact \n14% of the global carbon footprint by 2040. \n• Some initiatives are already being negotiated. \n• Extending the smartphone lifetime to 7 years. \n• Right-to-repair movement. https://repair.eu \n• Making IT services relying on clean energy more \naccessible (e.g., less taxes).\n21\n\nSoftware for Sustainability \n• We are not covering it in this course.\n\nCarbon-free giants\n• Google, Microsoft, Meta/Facebook want to be carbon free by 2030 \n• Carbon free is different from carbon neutral \n• Green IT experts are needed to meet these goals\n23\n\n\nRebound effect*\n• Energy consumption decreases ↓↓ but demand also increases ↑↑. \n• *a.k.a. Jevons Paradox in economics; Downs–Thomson paradox in\xa0mobility.']","[""['Carbon-free giants\\n• Google, Microsoft, Meta/Facebook want to be carbon free by 2030 \\n• Carbon free is diﬀerent from carbon neutral \\n• Green IT experts are needed to meet these goals\\n23']""]","The companies referred to as 'Carbon-free giants'—Google, Microsoft, and Meta/Facebook—aim to be carbon-free by 2030. Achieving carbon-free status means eliminating carbon emissions entirely, as opposed to being carbon neutral, which involves offsetting emissions. To meet these ambitious goals, there is a need for green IT experts who can help design and implement the necessary technologies and strategies to reduce and eliminate carbon emissions within these companies.","The companies referred to as 'Carbon-free giants,' including Google, Microsoft, and Meta/Facebook, aim to achieve carbon-free status by 2030. This goal is distinct from being carbon neutral, and it underscores the critical role of green IT experts in helping these organizations meet their objectives.",0.99999999995,1.0,0.5,0.8,0.4999999993749999,0.929251519579292
What are the main things that a company should consider when managing their aseets and capital to ensure they are creating value and making a profit?,"['Carolin Brandt \nC.E.Brandt@tudelft.nl \nLuís Cruz \nL.Cruz@tudelft.nl \n1. Intro Class\nSustainable Software Engineering\u2028\nCS4575\nSustainableSE 2025\nEnrique Barba Roque \nE.BarbaRoque@tudelft.nl\n\n1. Intro to Sustainable SE \n2. Intro to the course\n2\n\nof the electricity consumed worldwide \nby 2040 will stem from ICT\n14%\n\n4\nhttps://xkcd.com/1007/\n\nBuzz words\n• Eco-friendly \n• Climate change, action, adaption \n• Energy efficiency \n• Environmental-responsible \n• Carbon-neutral; Climate-neutral; Net zero \n• Carbon-offsetting \n• Carbon-free \n• Clean technology \n• E-waste\n5\n\nhttps://www.menti.com/uns9d89kzn\nWhat is Sustainable \nSoftware Engineering?\n?\n6\n\nSustainable Software \nEngineering is…\n7\n…the discipline that studies the process of creating software systems that are able \nto create value in the long term without hindering its surrounding environment.\n\n8\nEconomical\nSocial\nTechnical\nIndividual\nEnvironmental\nSustainable\nSoftware\nEngineering\n⭐\nTechnical\u2028\n⚙\nEconomical\u2028\n💰\nSocial\u2028\n👩💼👨💼👩💼👩💼\nIndividual\u2028\n👩💻\nEnvironmental\u2028\n🌱\nSustainable\u2028\nSoftware \nEngineering\n\nEconomical\n• Focused on assets, capital and added value\u2028\n(wealth creation, prosperity, profitability, capital \ninvestment, income, etc.) \n• Nr of customers  \n• Man-day-rate estimate \n• Next round of funding \n• Meet requirements in the contract\n9\n\nTechnical\n• Longevity of information, systems, and infrastructure and their \nadequate evolution with changing surrounding conditions. \n• Examples: \n• Technical Debt \n• Does it scale? \n• Software testing \n• Bus-factor \n• Data integrity \n• Innovation \n• …\n10\n\nIndividual\n• Well-being of the individuals in an organisation.\u2028\nNote that it also includes how well individuals interact \nwith each other within the org.', 'Study test generation energy consumption\n• Automatic test generation mainly focuses on making strong test suites \n• Do different techniques and configurations impact the energy consumption \nduring generation? \n• Preferably focus on non-LLM test generation methods (EvoSuite, Pyguin, \nDSpot)\n\nB3. Detailed energy profiling of build pipelines\n• Automatic builds have become a cornerstone of quality assurance. But how \nmuch energy do they even consume? \n• Create a tool that reports on the energy consumed during the (different stages \nof the) whole build (compile, build, test, package, …) \n• Should be integrated with build system(s), making setup for developers easy \n• For local setup (to enable true energy measurements)\n\nB4. Energy profiling of static analysis tools\n• What is the energy consumption of a ""typical run"" for a few OSS projects? \n• Does the type of analysis matter? Are certain analysis more expensive? Does \nthe number of rules that are activated in a static analysis tool important for the \nenergy consumption? \n• Differences between static analysis tools [lower priority]\n\nB5. Tool supporting SusAF workshop / process\n• Lead engineers through process & questions \n• Interface to create & document the two diagrams \n• (!) Should be easy to start using & set up \n• You may also create a simplified version / \u2028\nyour favorite sustainability framework\nEnvironmental\nEconomic\nTechnical\nIndividual\nSocial\nImmediate\nEnabling\nStructural\nAirbnb\ngreater \nearnings\nincrease \nin rents\ngentrification\ngreater racial \ndisparities\nrent \nrooms\n5\n1\n3\n4\n2\n \n \n \n \n \n \nVery \nunlikely \nVery \nlikely \n\nB6. Dataset of government-developed OS software\n• Governments develop & use software for supporting society\u2028\nOpen-source development & policies are on the rise \n• But studying government software is difficult b/c we don’t know what is out \nthere\u2028\n→ Lack of incentive to make popular \u2028\n→ Language barriers \n• Create a comprehensive dataset, incl. data to understand state of software: \nbuildable?, open dev. history?, requirements documentation? \n• Could start with NL, but including your / other countries greatly appreciated!\n\nB7.']","[""['Economical\\n• Focused on assets, capital and added value\\u2028\\n(wealth creation, prosperity, proﬁtability, capital \\ninvestment, income, etc.)\\n• Nr of customers \\n• Man-day-rate estimate\\n• Next round of funding\\n• Meet requirements in the contract\\n9']""]","When managing assets and capital to ensure value creation and profitability, a company should focus on:

1. **Wealth Creation**: Ensuring that the company's activities lead to the generation of wealth over time.
2. **Prosperity and Profitability**: Maintaining a balance between growth and profitability to ensure long-term success.
3. **Capital Investment**: Making strategic investments that will yield returns and support the company's growth objectives.
4. **Income**: Ensuring a steady stream of revenue to support operations and growth.
5. **Number of Customers**: Expanding the customer base to increase revenue potential.
6. **Man-day-rate Estimate**: Efficiently estimating and managing labor costs to optimize profitability.
7. **Next Round of Funding**: Planning for future funding needs to support expansion and innovation.
8. **Meeting Contractual Requirements**: Ensuring that all contractual obligations are met to maintain customer satisfaction and avoid penalties.

These considerations help in aligning the company's financial strategies with its long-term goals and sustainability.","When managing assets and capital, a company should consider wealth creation, prosperity, profitability, capital investment, income, the number of customers, man-day-rate estimates, the next round of funding, and meeting requirements in contracts.",0.9999999999,0.0,0.0,0.94,0.0,0.947317308630406
What are the methods or approaches that can be implemented to drive sustainability within the software engineering industry?,"['Luís Cruz \nL.Cruz@tudelft.nl \n10. Project 2\nSustainable Software Engineering\u2028\nCS4575\nSustainableSE 2025\nCarolin Brandt \nC.E.Brandt@tudelft.nl \nEnrique Barba Roque \nE.BarbaRoque@tudelft.nl\n\n1. Goal/assignment \n2. Deliverables \n3. Strategy \n4. Ideas\n\nAssignment\n• Goal: Solve a Sustainable Software Engineering problem. \n• Identify 1 problem that should be fixed to help enabling sustainability in \nthe software engineering industry/community. \n• Propose a solution. A tool, framework, guidelines, etc. \n• Implementation. \n• Validation. (Depending on the idea) \n• Dissemination/social impact. (Solution should be open source, welcome \ncontributors, post on social media? Tool website? Available in a package \nmanager?)\n3\n\nDeliverables\n• Paper-like article. (Min 4 pages, max 10) \n• Online git repo with open source codebase and/or replication package. \n• Presentation: 5 min + 5min Q&A\n4\n\nArticle\n• Different projects will have different expectations -> Make agreements with \nyour coach. \n• Some projects are more technical and some projects more theoretical. \n• Common requirements: \n• Motivation, formulation of the problem being addressed, etc. \n• Description of the solution. \n• Validation of the solution (if applicable -> discuss with coach) \n• Discussion of the solution. (Including limitations)\n5\n\nStrategy\n• Starting next week, there are no lectures  \n• Steering meetings from week 5 till week 9 (either online or in person).  \n• 1 steering meeting per week. (4+1 sprints) \n• Every week, you need to plan different tasks and assignments. \n• Deadline April 4.\n6\n\nStrategy\n• Week 0 \n• Decide project idea (today) \n• Define steering meeting schedule \n• Create working document of the \narticle: Problem statement and solution \nproposal! \n• Define and assign tasks for each week. \n• Week 1 \n• Implementation \n• Agreements with supervisor. \n• Week 2 \n• Implementation \n• Week 3 \n• Implementation, Full draft of article, \ndissemination.', 'Carolin Brandt \nC.E.Brandt@tudelft.nl \nLuís Cruz \nL.Cruz@tudelft.nl \n1. Intro Class\nSustainable Software Engineering\u2028\nCS4575\nSustainableSE 2025\nEnrique Barba Roque \nE.BarbaRoque@tudelft.nl\n\n1. Intro to Sustainable SE \n2. Intro to the course\n2\n\nof the electricity consumed worldwide \nby 2040 will stem from ICT\n14%\n\n4\nhttps://xkcd.com/1007/\n\nBuzz words\n• Eco-friendly \n• Climate change, action, adaption \n• Energy efficiency \n• Environmental-responsible \n• Carbon-neutral; Climate-neutral; Net zero \n• Carbon-offsetting \n• Carbon-free \n• Clean technology \n• E-waste\n5\n\nhttps://www.menti.com/uns9d89kzn\nWhat is Sustainable \nSoftware Engineering?\n?\n6\n\nSustainable Software \nEngineering is…\n7\n…the discipline that studies the process of creating software systems that are able \nto create value in the long term without hindering its surrounding environment.\n\n8\nEconomical\nSocial\nTechnical\nIndividual\nEnvironmental\nSustainable\nSoftware\nEngineering\n⭐\nTechnical\u2028\n⚙\nEconomical\u2028\n💰\nSocial\u2028\n👩💼👨💼👩💼👩💼\nIndividual\u2028\n👩💻\nEnvironmental\u2028\n🌱\nSustainable\u2028\nSoftware \nEngineering\n\nEconomical\n• Focused on assets, capital and added value\u2028\n(wealth creation, prosperity, profitability, capital \ninvestment, income, etc.) \n• Nr of customers  \n• Man-day-rate estimate \n• Next round of funding \n• Meet requirements in the contract\n9\n\nTechnical\n• Longevity of information, systems, and infrastructure and their \nadequate evolution with changing surrounding conditions. \n• Examples: \n• Technical Debt \n• Does it scale? \n• Software testing \n• Bus-factor \n• Data integrity \n• Innovation \n• …\n10\n\nIndividual\n• Well-being of the individuals in an organisation.\u2028\nNote that it also includes how well individuals interact \nwith each other within the org.']","[""['How can we drive sustainability \\nin the SE industry?']""]","To drive sustainability within the software engineering industry, several methods and approaches can be implemented:

1. **Energy Efficiency**: Focus on creating software that consumes less energy, thereby reducing the carbon footprint associated with its use.

2. **Eco-friendly Practices**: Incorporate practices that minimize environmental impact, such as reducing e-waste and using clean technology.

3. **Sustainable Software Design**: Develop software systems that create long-term value without harming the environment, ensuring they are adaptable to changing conditions.

4. **Technical Longevity**: Ensure the longevity of information, systems, and infrastructure, allowing them to evolve adequately with changing conditions. This includes addressing technical debt, ensuring scalability, and maintaining data integrity.

5. **Open Source Solutions**: Encourage the development of open-source tools and frameworks that promote sustainability, allowing for community contributions and wider dissemination.

6. **Social and Individual Well-being**: Promote the well-being of individuals within organizations, ensuring healthy interactions and a supportive work environment.

7. **Economic Sustainability**: Focus on creating value through wealth creation, profitability, and capital investment, ensuring that software projects meet contractual requirements and attract funding.

By integrating these approaches, the software engineering industry can move towards more sustainable practices that benefit the environment, society, and the economy.","Driving sustainability in the software engineering industry involves implementing practices that reduce the environmental impact of software development and operation, promote resource efficiency, and consider the entire lifecycle of software systems.",0.49999999995,1.0,0.625,0.5,0.0,0.9881856338045056
"What are the objectives and approach of Project 1, which aims to measure the energy consumption of software applications, and how can this be effectively presented to management?","['• Guest lectures. \n• Steering meetings (after week 5, new schedule)\n29\n\nFormat of classes\n• There’s no exam in this course. It’s more important that we learn how to \ndiscuss this topic and come up with new ideas than learning all the theory. \nCritical thinking over checkboxes. \n• Mix of content and discussion \n• Ultimately, the lectures aim to give you food for thought and the necessary \nknowledge to excel in Project 2. (We will talk about it later)\n30\n\nhttps://luiscruz.github.io/course_sustainableSE/\n31\nContent of the course 👇\n\n32\nhttps://mattermost.tudelft.nl/signup_user_complete/?id=1nj9tk6usjf8xmsws8wpq3s5uy&md=link&sbr=su\n\nProject 1\n• Goal: Measure the energy consumption of software applications. \n• Approach: energy measurement tools; use case testing. \n• Deliverable: blog-style report (approx. 2500 words) \n• Deadline: Week 3, Feb 28, 2025 \n• Group size: 4–5\n33\n\nProject 2\n• Goal: Create a solution/tool/technique that helps building green software. (You \ncan come up with your own idea or choose one from a list of suggestions). \n• Approach: open-source software development; literature review. \n• Deliverable: library/tool/app; paper; presentation. \n• Two deadlines:\u2028\n1. Paper and software: Week 8, April 4, 2025\u2028\n2. Presentation: Week 9, April 11, 2025 \n• Group size: 4–5\n34\n\nGuest Lectures\nNergis Tömen \nComputer Vision lab | TU Delft \nWeek 4, Wed, Mar 5, 2025\n35\n\nCommunity \nHow to get involved?\n36\n\nGreen TU\n• https://www.tudelft.nl/sustainability/get-\ninvolved/greentu \n• Student organisation at the TU Delft devoted \nto stimulating sustainability in education, \nresearch, university operations and \ncommunity engagement.', 'Luís Cruz \nL.Cruz@tudelft.nl \n10. Project 2\nSustainable Software Engineering\u2028\nCS4575\nSustainableSE 2025\nCarolin Brandt \nC.E.Brandt@tudelft.nl \nEnrique Barba Roque \nE.BarbaRoque@tudelft.nl\n\n1. Goal/assignment \n2. Deliverables \n3. Strategy \n4. Ideas\n\nAssignment\n• Goal: Solve a Sustainable Software Engineering problem. \n• Identify 1 problem that should be fixed to help enabling sustainability in \nthe software engineering industry/community. \n• Propose a solution. A tool, framework, guidelines, etc. \n• Implementation. \n• Validation. (Depending on the idea) \n• Dissemination/social impact. (Solution should be open source, welcome \ncontributors, post on social media? Tool website? Available in a package \nmanager?)\n3\n\nDeliverables\n• Paper-like article. (Min 4 pages, max 10) \n• Online git repo with open source codebase and/or replication package. \n• Presentation: 5 min + 5min Q&A\n4\n\nArticle\n• Different projects will have different expectations -> Make agreements with \nyour coach. \n• Some projects are more technical and some projects more theoretical. \n• Common requirements: \n• Motivation, formulation of the problem being addressed, etc. \n• Description of the solution. \n• Validation of the solution (if applicable -> discuss with coach) \n• Discussion of the solution. (Including limitations)\n5\n\nStrategy\n• Starting next week, there are no lectures  \n• Steering meetings from week 5 till week 9 (either online or in person).  \n• 1 steering meeting per week. (4+1 sprints) \n• Every week, you need to plan different tasks and assignments. \n• Deadline April 4.\n6\n\nStrategy\n• Week 0 \n• Decide project idea (today) \n• Define steering meeting schedule \n• Create working document of the \narticle: Problem statement and solution \nproposal! \n• Define and assign tasks for each week. \n• Week 1 \n• Implementation \n• Agreements with supervisor. \n• Week 2 \n• Implementation \n• Week 3 \n• Implementation, Full draft of article, \ndissemination.']","[""['Project 1\\n• Goal: Measure the energy consumption of software applications.\\n• Approach: energy measurement tools; use case testing.\\n• Deliverable: blog-style report (approx. 2500 words)\\n• Deadline: Week 3, Feb 28, 2025\\n• Group size: 4–5\\n33']""]","The objectives of Project 1 are to measure the energy consumption of software applications. The approach involves using energy measurement tools and conducting use case testing. The deliverable for this project is a blog-style report of approximately 2500 words, due by Week 3, February 28, 2025, and the project is to be completed in groups of 4–5.

To effectively present this to management, you could focus on the following points:

1. **Objective Clarity**: Clearly state the goal of measuring energy consumption and its importance in reducing operational costs and improving sustainability.

2. **Methodology**: Explain the approach using energy measurement tools and use case testing, highlighting how these methods provide accurate and actionable insights.

3. **Deliverable**: Describe the blog-style report, emphasizing its role in communicating findings in an accessible and engaging manner.

4. **Impact**: Discuss the potential benefits of understanding energy consumption, such as identifying inefficiencies, reducing energy costs, and contributing to sustainability goals.

5. **Timeline and Team**: Present the timeline and team structure to assure management of the project's feasibility and collaborative effort.

By focusing on these aspects, you can effectively communicate the project's value and relevance to management.","Project 1 is designed to measure the energy consumption of software applications. The approach involves using energy measurement tools and conducting use case testing. The deliverable is a blog-style report of approximately 2500 words, with a deadline of Week 3, Feb 28, 2025. The project is intended for a group of 4–5 members. This project can be presented to management as a comprehensive analysis of energy consumption metrics, demonstrating the practical application of green software practices and their potential benefits to the organization.",0.9999999999,0.8,0.8947368421052632,0.5,0.1111111109876543,0.8967632069354341
What companies are called carbon-free giants and what is their goal to be carbon-free by 2030 and what is the difference between carbon-free and carbon-neutral and what experts are needed to achieve this?,"['• Software consumers have started to worry about the climate impact \nof their behaviour as users. \n• Being environmentally sustainable is now an important competitive \nfactor \n• Marketing teams are already using all eco-friendly labels. Technical \nteams are not there yet, though. \n• It’s easier said than done!\n$\n16\n\nGreen Washing\n• Deceptively use marketing techniques to \nclaim being eco-friendly. \n• Opting for green-coloured designs. \n• Red/orange is usually perceived as \ntasty. \n• Green is perceived as eco-friendly. \n• The VW case. (?)\n17\n\nThe VW scandal\nGreenwashing\n• Used software to cheat on vehicle emissions \ntests. \n• The vehicle’s software could detect whether they \nwere being tested, changing the performance \naccordingly to improve results. \n• Affected 11M cars worldwide, 8M in Europe.\n18\n\nHow can we drive sustainability \nin the SE industry?\n\nGreen Procurement\n• Customers decide on providers that share their values \n• This is currently the main trigger reason why organisations \nworry about Sustainability and Green Software. \n• Examples of green procurement: \n• Customers that only buy green services/products \n• Companies that only use green providers \n• Developers that only work for green companies \n• Green procurement makes environmental sustainability \nessential for economical sustainability.\n20\n\nSustainability via compliance\n• EU wants to be carbon neutral by 2030 \n• This also affects the ICT sector. Estimated to impact \n14% of the global carbon footprint by 2040. \n• Some initiatives are already being negotiated. \n• Extending the smartphone lifetime to 7 years. \n• Right-to-repair movement. https://repair.eu \n• Making IT services relying on clean energy more \naccessible (e.g., less taxes).\n21\n\nSoftware for Sustainability \n• We are not covering it in this course.\n\nCarbon-free giants\n• Google, Microsoft, Meta/Facebook want to be carbon free by 2030 \n• Carbon free is different from carbon neutral \n• Green IT experts are needed to meet these goals\n23\n\n\nRebound effect*\n• Energy consumption decreases ↓↓ but demand also increases ↑↑. \n• *a.k.a. Jevons Paradox in economics; Downs–Thomson paradox in\xa0mobility.', 'Carbon-free giants\n• Google, Microsoft, Meta/Facebook want to be carbon free by 2030 \n• Carbon free is different from carbon neutral \n• Green IT experts are needed to meet these goals\n23\n\n\nRebound effect*\n• Energy consumption decreases ↓↓ but demand also increases ↑↑. \n• *a.k.a. Jevons Paradox in economics; Downs–Thomson paradox in\xa0mobility.\nEnergy per prompt\nPrompts\n100\n80\n30\n38\nChat \nGPT\n“Energy-efficient” \nChat GPT\n0\n\nIs sustainability an\u2028\nethical issue?\n• Climate change is more likely to affect the \npoorest countries. \n• Less financial resources to adapt \n• Climate-impact does not necessarily affect \npolluting countries. \n• Poorest countries have contributed less to the \nclimate change. \n• We need to figure out how to do more using \nless resources.\n26\n\nMorality ≠ Moralising\n• We should not use climate action as a \nshaming weapon \n• Climate action should be agnostic of political \nviews, ideology, social status, etc. \n• We need everyone to take action!\n27\n\nWhy?\n• Throughout your career you might: \n• Design/maintain/contract data centers \n• Set up operations/devops \n• Develop AI for IoT devices \n• Be the next CEO/CTO of a software company \n• Sustainability can be your main role: \n• Green Software Developer \n• Sustainability Consultant \n• Green Advocate  \n• Founder of a Green Tech startup (B2B?)\n28\n\nFormat of classes\n• In-person. \n• Collegerama recordings. \n• Lectures and Labs. \n• Guest lectures. \n• Steering meetings (after week 5, new schedule)\n29\n\nFormat of classes\n• There’s no exam in this course. It’s more important that we learn how to \ndiscuss this topic and come up with new ideas than learning all the theory. \nCritical thinking over checkboxes. \n• Mix of content and discussion \n• Ultimately, the lectures aim to give you food for thought and the necessary \nknowledge to excel in Project 2.']","[""['Carbon-free giants\\n• Google, Microsoft, Meta/Facebook want to be carbon free by 2030 \\n• Carbon free is diﬀerent from carbon neutral \\n• Green IT experts are needed to meet these goals\\n23']""]","The companies referred to as carbon-free giants are Google, Microsoft, and Meta/Facebook. Their goal is to be carbon-free by 2030. The difference between carbon-free and carbon-neutral is that being carbon-free means eliminating carbon emissions entirely, whereas carbon-neutral means balancing emitted carbon with equivalent offsets, such as planting trees or investing in renewable energy. To achieve these goals, Green IT experts are needed.","Google, Microsoft, and Meta/Facebook are called carbon-free giants. Their goal is to be carbon-free by 2030. Being carbon-free is different from being carbon-neutral. Green IT experts are needed to help achieve these goals.",0.99999999995,1.0,0.7777777777777778,0.75,0.4999999993749999,0.9578849285847112
What does 'Green Washing' mean in the context of software development?,"['• Examples: \n• Technical Debt \n• Does it scale? \n• Software testing \n• Bus-factor \n• Data integrity \n• Innovation \n• …\n10\n\nIndividual\n• Well-being of the individuals in an organisation.\u2028\nNote that it also includes how well individuals interact \nwith each other within the org. \n• Examples: \n• mental and physical well-being \n• self-respect \n• education/skills \n• career development \n• …\n11\n\nSocial\n• concerned with societal communities (groups of people, \norganisations) and the factors that erode trust in society. \n• Examples: \n• Social equity \n• Justice \n• Employment \n• Democracy \n• … \n• Also includes compliance with policies and regulations \n12\n\nEnvironmental Sustainability\n• the branch of Software Engineering that studies \nthe development of software that has minimal \nimpact in our planet throughout its whole \nlifecycle. \n• Looking at software at different levels: \n• Developing, Using, Serving, … \n• Also includes e-waste. \n• Almost identical to Green Software. (?)\n13\nBordallo II\n\nGreen Software\n• Sustainability and energy efficiency. \n• Building energy-efficient software is important also from a \ntechnical sustainability POV. \n• Smartphones, smart wearables, IoT devices, etc. run on limited \npower resources. \n• Developing software to these devices require energy-efficiency \ntesting and improvement. \n• It also leads to environmental sustainability (e.g., less battery \ncycles) \n• Important for UX (e.g., no need to walk around with power banks)\n14\n\nhttps://www.menti.com/uns9d89kzn\nWhat is the sustainability \ndimension you are most \ninterested in?\n?\n15\n\nEconomical sustainability tops the environment\n• In general, a software project will not survive if it’s not economical \nsustainable \n• Yet, a project can survive even if it is not environmental sustainable \n• The mindset is changing! \n• Software consumers have started to worry about the climate impact \nof their behaviour as users. \n• Being environmentally sustainable is now an important competitive \nfactor \n• Marketing teams are already using all eco-friendly labels. Technical \nteams are not there yet, though. \n• It’s easier said than done!\n$\n16\n\nGreen Washing\n• Deceptively use marketing techniques to \nclaim being eco-friendly.', '(?)\n\nPractical Significance\n• Depending on the case, a 2% improvement might be either wonderful or completely \nuseless. \n• Effect size analyses help assess practical significance but might not be enough. \n• A critical discussion always needs to be performed. Consider context and explain in what \nsense the effect size might be relevant. \n• E.g.: \n•  to improve 2% in energy efficiency the code will be less readable or the user \nexperience is not so appealing. \n• A particular method improves 2% but it will only be used 1% of the time. \n• There is no particular metric or structure, but this kind of critical analysis is very important.\n25\n\nWhat if data is not Normal?\nSame approach but different tests/metrics!\n\nNon-normal data\n• Statistical significance: non-parametric test (?) \n• Mann-Whitney U test. Instead of looking at standard deviation or mean, it orders \nsamples and compares with each other. \n• Less power than parametric-tests (?) \n• Effect size \n• Median difference: \n \n• Percentage of pairs supporting a conclusion\u2028\n(i.e., # pairs where version A > version B/ total pairs) \n• Common language effect size: \nΔM\nU1\nN1N2\n27\n\nRecap\nImpossible to \nfix but \nexplainable.\n\nEnergy Efficiency Across \nProgramming Languages\nhttps://sites.google.com/view/energy-efficiency-languages\n29\nRui Pereira, Marco Couto, Francisco Ribeiro, Rui Rua, Jácome \nCunha, João Paulo Fernandes, and João Saraiva\n\n• Is a faster programming language also more energy efficient? \n• Comparing different programming languages is not an easy task. \n• They differ in many mechanisms: \n• Interpreted vs Compiled \n• Optimisations at the compiler level \n• Virtual machine \n• Garbage collector \n• Available libraries\n30\n\nResearch Questions\n• Can we compare the energy efficiency of software languages?  \n• Is the faster language always the most energy efficient? \n• How does memory usage relate to energy consumption? (We don’t cover this one) \n• Can we automatically decide what is the best programming language \nconsidering energy, time, and memory usage?']","[""['Green Washing\\n• Deceptively use marketing techniques to \\nclaim being eco-friendly.\\n• Opting for green-coloured designs.\\n• Red/orange is usually perceived as \\ntasty.\\n• Green is perceived as eco-friendly.\\n• The VW case. (?)\\n17']""]","In the context of software development, 'Green Washing' refers to the deceptive use of marketing techniques to claim that software or a software development process is eco-friendly, when in reality, it may not be. This involves making misleading claims about the environmental benefits of a product or service to appeal to environmentally conscious consumers without making substantial efforts to reduce environmental impact.","Green Washing refers to the practice of deceptively using marketing techniques to claim that a product or service is eco-friendly, often through the use of green-colored designs or other tactics that suggest environmental responsibility without substantial basis.",0.9999999999,0.5,0.5,0.5,0.1999999996,0.995752808692116
What economical factors are important in software projects?,"['• Examples: \n• Technical Debt \n• Does it scale? \n• Software testing \n• Bus-factor \n• Data integrity \n• Innovation \n• …\n10\n\nIndividual\n• Well-being of the individuals in an organisation.\u2028\nNote that it also includes how well individuals interact \nwith each other within the org. \n• Examples: \n• mental and physical well-being \n• self-respect \n• education/skills \n• career development \n• …\n11\n\nSocial\n• concerned with societal communities (groups of people, \norganisations) and the factors that erode trust in society. \n• Examples: \n• Social equity \n• Justice \n• Employment \n• Democracy \n• … \n• Also includes compliance with policies and regulations \n12\n\nEnvironmental Sustainability\n• the branch of Software Engineering that studies \nthe development of software that has minimal \nimpact in our planet throughout its whole \nlifecycle. \n• Looking at software at different levels: \n• Developing, Using, Serving, … \n• Also includes e-waste. \n• Almost identical to Green Software. (?)\n13\nBordallo II\n\nGreen Software\n• Sustainability and energy efficiency. \n• Building energy-efficient software is important also from a \ntechnical sustainability POV. \n• Smartphones, smart wearables, IoT devices, etc. run on limited \npower resources. \n• Developing software to these devices require energy-efficiency \ntesting and improvement. \n• It also leads to environmental sustainability (e.g., less battery \ncycles) \n• Important for UX (e.g., no need to walk around with power banks)\n14\n\nhttps://www.menti.com/uns9d89kzn\nWhat is the sustainability \ndimension you are most \ninterested in?\n?\n15\n\nEconomical sustainability tops the environment\n• In general, a software project will not survive if it’s not economical \nsustainable \n• Yet, a project can survive even if it is not environmental sustainable \n• The mindset is changing! \n• Software consumers have started to worry about the climate impact \nof their behaviour as users. \n• Being environmentally sustainable is now an important competitive \nfactor \n• Marketing teams are already using all eco-friendly labels. Technical \nteams are not there yet, though. \n• It’s easier said than done!\n$\n16\n\nGreen Washing\n• Deceptively use marketing techniques to \nclaim being eco-friendly.', 'Carolin Brandt \nC.E.Brandt@tudelft.nl \nLuís Cruz \nL.Cruz@tudelft.nl \n1. Intro Class\nSustainable Software Engineering\u2028\nCS4575\nSustainableSE 2025\nEnrique Barba Roque \nE.BarbaRoque@tudelft.nl\n\n1. Intro to Sustainable SE \n2. Intro to the course\n2\n\nof the electricity consumed worldwide \nby 2040 will stem from ICT\n14%\n\n4\nhttps://xkcd.com/1007/\n\nBuzz words\n• Eco-friendly \n• Climate change, action, adaption \n• Energy efficiency \n• Environmental-responsible \n• Carbon-neutral; Climate-neutral; Net zero \n• Carbon-offsetting \n• Carbon-free \n• Clean technology \n• E-waste\n5\n\nhttps://www.menti.com/uns9d89kzn\nWhat is Sustainable \nSoftware Engineering?\n?\n6\n\nSustainable Software \nEngineering is…\n7\n…the discipline that studies the process of creating software systems that are able \nto create value in the long term without hindering its surrounding environment.\n\n8\nEconomical\nSocial\nTechnical\nIndividual\nEnvironmental\nSustainable\nSoftware\nEngineering\n⭐\nTechnical\u2028\n⚙\nEconomical\u2028\n💰\nSocial\u2028\n👩💼👨💼👩💼👩💼\nIndividual\u2028\n👩💻\nEnvironmental\u2028\n🌱\nSustainable\u2028\nSoftware \nEngineering\n\nEconomical\n• Focused on assets, capital and added value\u2028\n(wealth creation, prosperity, profitability, capital \ninvestment, income, etc.) \n• Nr of customers  \n• Man-day-rate estimate \n• Next round of funding \n• Meet requirements in the contract\n9\n\nTechnical\n• Longevity of information, systems, and infrastructure and their \nadequate evolution with changing surrounding conditions. \n• Examples: \n• Technical Debt \n• Does it scale? \n• Software testing \n• Bus-factor \n• Data integrity \n• Innovation \n• …\n10\n\nIndividual\n• Well-being of the individuals in an organisation.\u2028\nNote that it also includes how well individuals interact \nwith each other within the org.']","[""['Economical\\n• Focused on assets, capital and added value\\u2028\\n(wealth creation, prosperity, proﬁtability, capital \\ninvestment, income, etc.)\\n• Nr of customers \\n• Man-day-rate estimate\\n• Next round of funding\\n• Meet requirements in the contract\\n9']""]","Economical factors important in software projects include:

- Assets, capital, and added value (wealth creation, prosperity, profitability, capital investment, income, etc.)
- Number of customers
- Man-day-rate estimate
- Next round of funding
- Meeting requirements in the contract

These factors focus on ensuring the economic sustainability of a software project.","Economical factors include assets, capital, added value, number of customers, man-day-rate estimate, next round of funding, and meeting requirements in the contract.",0.49999999995,1.0,1.0,0.83,0.0,0.9963981726234884
What is Democrazy?,"[""Neuromorphic computing\nCS4575\nSustainable Software Engineering\n05.03.2025\nNergis Tömen\n\nIntroduction\nComputer Vision Lab\nBiomorphic Intelligence Lab\nBiomedical Intervention Optimisation Lab\nNergis\n\nNeuromorphic computing\nNeuromorphic computing is an approach to computing that is inspired by the structure and function of the human brain.\nA neuromorphic computer/chip is any device that uses physical artificial neurons to do computations.\nhttps://en.wikipedia.org/wiki/Neuromorphic_engineering, https://www.informationweek.com/software-services/what-you-need-to-know-about-neuromorphic-computing\n\nHow many of you are familiar \nwith neural networks?\n\nSimple model of an artificial neuron\nhttps://medium.com/@cprasenjit32/perceptron-a-simple-yet-mighty-machine-learning-algorithm-9ff6b7d86a71\n\nWhat is a neural network?\nhttps://www.tibco.com/reference-center/what-is-a-neural-network\n\nWhy is it called a 'neural network'?\nhttps://www.tibco.com/reference-center/what-is-a-neural-network\n\nWhat is a neural network?\nWhy is it called a 'neural network'?\nMcCulloch-Pitts neuron [1, 2] (1943)\nWarren Sturgis McCulloch\n(Neurophysiologist)\nWalter Pitts\n(Logician)\n\nHow do biological neurons work?\nhttps://commons.wikimedia.org/wiki/File:Coincidence_detection_in_dendrites_of_pyramidal_neurons.gif\n'Input current' travels down the dendrites (top),\nget integrated (summed!) in the cell body\nwhich generates an 'output current' (bottom)\nwhich is chemically transmitted to the dendrites of \nother neurons.\n\nSimplified picture\nReal neuron\nArtificial neuron\nhttps://vajiramandravi.com/quest-upsc-notes/artificial-neural-network/\n\nWhat is a neural network?\nMcCulloch-Pitts neuron [1, 2]\n1940s: How do biological neurons compute basic \nlogic functions? (e.g. logic gates)\nNote: Ref. [3] gives a nice brief history on the ideas which lead to the \nMcCulloch-Pitts neuron.\n\nWhat is a neural network?"", 'McCulloch-Pitts neuron [1, 2]\n1940s: How do biological neurons compute basic \nlogic functions? (e.g. logic gates)\nNote: Ref. [3] gives a nice brief history on the ideas which lead to the \nMcCulloch-Pitts neuron.\n\nWhat is a neural network?\n1950s: How are neurons organized to perform \nsensory perception?\n\nWhat is a neural network?\n1950s: How are neurons organized to perform \nsensory perception?\nThe first ""neural network"": Perceptron (1958). [4]\nhttps://www.reddit.com/r/interestingasfuck/comments/e8a8oy/frank_rosenblatt_with_a_mark_i_perceptron/\nFrank Rosenblatt (Psychologist)\nwith a Mark I Perceptron computer in 1960\n\nWhat is a neural network?\n1950s: How are neurons organized to perform \nsensory perception?\nThe first ""neural network"": Perceptron (1958). [4]\nhttps://www.reddit.com/r/interestingasfuck/comments/e8a8oy/frank_rosenblatt_with_a_mark_i_perceptron/\nFrank Rosenblatt (Psychologist)\nwith a Mark I Perceptron computer in 1960\nPower-efficient\n\nNeuromorphic computing\nWhy neuromorphic computing?\nNeuromorphic computing is an approach to computing that is inspired by the structure and function of the human brain.\nA neuromorphic computer/chip is any device that uses physical artificial neurons to do computations.\n\nNeuromorphic computing\nWhy neuromorphic computing?\n‘Biological inspiration’ for artificial neural networks (ANNs) is not a new idea.\nEmulation (as opposed to simulation) of neural networks in hardware is not a new idea.\nQuestion: What can we gain from increasing biological realism in existing neural networks?\n\nPower-efficiency at scale\nModern, deep neural networks*\nare trained using GPUs.\n* It is estimated that ChatGPT was trained on \n10,000-20,000 GPUs and that it will require\n30,000 GPUs to keep running stably in the future.\n* It is estimated that ChatGPT has 10-20 billion \nparameters.']","[""['Social\\n• concerned with societal communities (groups of people, \\norganisations) and the factors that erode trust in society.\\n• Examples:\\n• Social equity\\n• Justice\\n• Employment\\n• Democracy\\n• …\\n• Also includes compliance with policies and regulations \\n12']""]","The term ""Democrazy"" does not appear in the provided sources, and it seems to be a play on the word ""democracy."" If you meant ""democracy,"" it is a system of government where the citizens exercise power by voting. If ""Democrazy"" refers to something specific, such as a book, movie, or concept, I would need more context to provide a detailed answer.","Democracy is a societal factor that contributes to social equity, justice, and employment, all of which are important in maintaining trust within society.",0.0,0.0,0.5,0.5,,0.0
What is Sofware Engineering?,"['Carolin Brandt \nC.E.Brandt@tudelft.nl \nLuís Cruz \nL.Cruz@tudelft.nl \n1. Intro Class\nSustainable Software Engineering\u2028\nCS4575\nSustainableSE 2025\nEnrique Barba Roque \nE.BarbaRoque@tudelft.nl\n\n1. Intro to Sustainable SE \n2. Intro to the course\n2\n\nof the electricity consumed worldwide \nby 2040 will stem from ICT\n14%\n\n4\nhttps://xkcd.com/1007/\n\nBuzz words\n• Eco-friendly \n• Climate change, action, adaption \n• Energy efficiency \n• Environmental-responsible \n• Carbon-neutral; Climate-neutral; Net zero \n• Carbon-offsetting \n• Carbon-free \n• Clean technology \n• E-waste\n5\n\nhttps://www.menti.com/uns9d89kzn\nWhat is Sustainable \nSoftware Engineering?\n?\n6\n\nSustainable Software \nEngineering is…\n7\n…the discipline that studies the process of creating software systems that are able \nto create value in the long term without hindering its surrounding environment.\n\n8\nEconomical\nSocial\nTechnical\nIndividual\nEnvironmental\nSustainable\nSoftware\nEngineering\n⭐\nTechnical\u2028\n⚙\nEconomical\u2028\n💰\nSocial\u2028\n👩💼👨💼👩💼👩💼\nIndividual\u2028\n👩💻\nEnvironmental\u2028\n🌱\nSustainable\u2028\nSoftware \nEngineering\n\nEconomical\n• Focused on assets, capital and added value\u2028\n(wealth creation, prosperity, profitability, capital \ninvestment, income, etc.) \n• Nr of customers  \n• Man-day-rate estimate \n• Next round of funding \n• Meet requirements in the contract\n9\n\nTechnical\n• Longevity of information, systems, and infrastructure and their \nadequate evolution with changing surrounding conditions. \n• Examples: \n• Technical Debt \n• Does it scale? \n• Software testing \n• Bus-factor \n• Data integrity \n• Innovation \n• …\n10\n\nIndividual\n• Well-being of the individuals in an organisation.\u2028\nNote that it also includes how well individuals interact \nwith each other within the org.', 'Revisiting Research Questions\n• Can we compare the energy efficiency of software languages?  \n• Is the faster language always the most energy efficient? \n• How does memory usage relate to energy consumption?  \n• Can we automatically decide what is the best programming language considering \nenergy, time, and memory usage?  \n• How do the results of our energy consumption analysis of programming \nlanguages gathered from rigorous performance benchmarking solutions \ncompare to results of average day-to-day solutions?  \n• What would happen if we cherry picked the tasks?\u2028\n44\n\n\nLuís Cruz \nL.Cruz@tudelft.nl \n3. Scientific Guide for Reliable \nEnergy Experiments\nSustainable Software Engineering\u2028\nCS4575\nSustainableSE 2025\nCarolin Brandt \nC.E.Brandt@tudelft.nl \nEnrique Barba Roque \nE.BarbaRoque@tudelft.nl']","[""['https://www.menti.com/uns9d89kzn\\nWhat is Sustainable \\nSoftware Engineering?\\n?\\n6']""]","The sources provided do not explicitly define ""Software Engineering."" However, based on general knowledge, Software Engineering is the discipline of designing, developing, maintaining, testing, and evaluating software systems. It involves applying engineering principles to software creation to ensure that the software is reliable, efficient, and meets user requirements.",The context provided discusses Sustainable Software Engineering but does not explicitly define Software Engineering itself.,0.0,1.0,0.3333333333333333,0.4,0.4999999975,0.974157880841983
What is Sustainable SE?,"['Carolin Brandt \nC.E.Brandt@tudelft.nl \nLuís Cruz \nL.Cruz@tudelft.nl \n1. Intro Class\nSustainable Software Engineering\u2028\nCS4575\nSustainableSE 2025\nEnrique Barba Roque \nE.BarbaRoque@tudelft.nl\n\n1. Intro to Sustainable SE \n2. Intro to the course\n2\n\nof the electricity consumed worldwide \nby 2040 will stem from ICT\n14%\n\n4\nhttps://xkcd.com/1007/\n\nBuzz words\n• Eco-friendly \n• Climate change, action, adaption \n• Energy efficiency \n• Environmental-responsible \n• Carbon-neutral; Climate-neutral; Net zero \n• Carbon-offsetting \n• Carbon-free \n• Clean technology \n• E-waste\n5\n\nhttps://www.menti.com/uns9d89kzn\nWhat is Sustainable \nSoftware Engineering?\n?\n6\n\nSustainable Software \nEngineering is…\n7\n…the discipline that studies the process of creating software systems that are able \nto create value in the long term without hindering its surrounding environment.\n\n8\nEconomical\nSocial\nTechnical\nIndividual\nEnvironmental\nSustainable\nSoftware\nEngineering\n⭐\nTechnical\u2028\n⚙\nEconomical\u2028\n💰\nSocial\u2028\n👩💼👨💼👩💼👩💼\nIndividual\u2028\n👩💻\nEnvironmental\u2028\n🌱\nSustainable\u2028\nSoftware \nEngineering\n\nEconomical\n• Focused on assets, capital and added value\u2028\n(wealth creation, prosperity, profitability, capital \ninvestment, income, etc.) \n• Nr of customers  \n• Man-day-rate estimate \n• Next round of funding \n• Meet requirements in the contract\n9\n\nTechnical\n• Longevity of information, systems, and infrastructure and their \nadequate evolution with changing surrounding conditions. \n• Examples: \n• Technical Debt \n• Does it scale? \n• Software testing \n• Bus-factor \n• Data integrity \n• Innovation \n• …\n10\n\nIndividual\n• Well-being of the individuals in an organisation.\u2028\nNote that it also includes how well individuals interact \nwith each other within the org.', '• Software consumers have started to worry about the climate impact \nof their behaviour as users. \n• Being environmentally sustainable is now an important competitive \nfactor \n• Marketing teams are already using all eco-friendly labels. Technical \nteams are not there yet, though. \n• It’s easier said than done!\n$\n16\n\nGreen Washing\n• Deceptively use marketing techniques to \nclaim being eco-friendly. \n• Opting for green-coloured designs. \n• Red/orange is usually perceived as \ntasty. \n• Green is perceived as eco-friendly. \n• The VW case. (?)\n17\n\nThe VW scandal\nGreenwashing\n• Used software to cheat on vehicle emissions \ntests. \n• The vehicle’s software could detect whether they \nwere being tested, changing the performance \naccordingly to improve results. \n• Affected 11M cars worldwide, 8M in Europe.\n18\n\nHow can we drive sustainability \nin the SE industry?\n\nGreen Procurement\n• Customers decide on providers that share their values \n• This is currently the main trigger reason why organisations \nworry about Sustainability and Green Software. \n• Examples of green procurement: \n• Customers that only buy green services/products \n• Companies that only use green providers \n• Developers that only work for green companies \n• Green procurement makes environmental sustainability \nessential for economical sustainability.\n20\n\nSustainability via compliance\n• EU wants to be carbon neutral by 2030 \n• This also affects the ICT sector. Estimated to impact \n14% of the global carbon footprint by 2040. \n• Some initiatives are already being negotiated. \n• Extending the smartphone lifetime to 7 years. \n• Right-to-repair movement. https://repair.eu \n• Making IT services relying on clean energy more \naccessible (e.g., less taxes).\n21\n\nSoftware for Sustainability \n• We are not covering it in this course.\n\nCarbon-free giants\n• Google, Microsoft, Meta/Facebook want to be carbon free by 2030 \n• Carbon free is different from carbon neutral \n• Green IT experts are needed to meet these goals\n23\n\n\nRebound effect*\n• Energy consumption decreases ↓↓ but demand also increases ↑↑. \n• *a.k.a. Jevons Paradox in economics; Downs–Thomson paradox in\xa0mobility.']","[""['1. Intro to Sustainable SE \\n2. Intro to the course\\n2']""]","Sustainable Software Engineering is the discipline that studies the process of creating software systems that are able to create value in the long term without hindering their surrounding environment. It encompasses various aspects such as economical, social, technical, individual, and environmental sustainability.","Sustainable SE is the focus of the course, as indicated by the first section of the course outline.",0.9999999999,1.0,1.0,0.0,0.0,0.8910527793152566
What is Sustainable Software Engineering and how does it contribute to creating long-term value while minimizing environmental impact?,"['Carolin Brandt \nC.E.Brandt@tudelft.nl \nLuís Cruz \nL.Cruz@tudelft.nl \n1. Intro Class\nSustainable Software Engineering\u2028\nCS4575\nSustainableSE 2025\nEnrique Barba Roque \nE.BarbaRoque@tudelft.nl\n\n1. Intro to Sustainable SE \n2. Intro to the course\n2\n\nof the electricity consumed worldwide \nby 2040 will stem from ICT\n14%\n\n4\nhttps://xkcd.com/1007/\n\nBuzz words\n• Eco-friendly \n• Climate change, action, adaption \n• Energy efficiency \n• Environmental-responsible \n• Carbon-neutral; Climate-neutral; Net zero \n• Carbon-offsetting \n• Carbon-free \n• Clean technology \n• E-waste\n5\n\nhttps://www.menti.com/uns9d89kzn\nWhat is Sustainable \nSoftware Engineering?\n?\n6\n\nSustainable Software \nEngineering is…\n7\n…the discipline that studies the process of creating software systems that are able \nto create value in the long term without hindering its surrounding environment.\n\n8\nEconomical\nSocial\nTechnical\nIndividual\nEnvironmental\nSustainable\nSoftware\nEngineering\n⭐\nTechnical\u2028\n⚙\nEconomical\u2028\n💰\nSocial\u2028\n👩💼👨💼👩💼👩💼\nIndividual\u2028\n👩💻\nEnvironmental\u2028\n🌱\nSustainable\u2028\nSoftware \nEngineering\n\nEconomical\n• Focused on assets, capital and added value\u2028\n(wealth creation, prosperity, profitability, capital \ninvestment, income, etc.) \n• Nr of customers  \n• Man-day-rate estimate \n• Next round of funding \n• Meet requirements in the contract\n9\n\nTechnical\n• Longevity of information, systems, and infrastructure and their \nadequate evolution with changing surrounding conditions. \n• Examples: \n• Technical Debt \n• Does it scale? \n• Software testing \n• Bus-factor \n• Data integrity \n• Innovation \n• …\n10\n\nIndividual\n• Well-being of the individuals in an organisation.\u2028\nNote that it also includes how well individuals interact \nwith each other within the org.', '• Examples: \n• Technical Debt \n• Does it scale? \n• Software testing \n• Bus-factor \n• Data integrity \n• Innovation \n• …\n10\n\nIndividual\n• Well-being of the individuals in an organisation.\u2028\nNote that it also includes how well individuals interact \nwith each other within the org. \n• Examples: \n• mental and physical well-being \n• self-respect \n• education/skills \n• career development \n• …\n11\n\nSocial\n• concerned with societal communities (groups of people, \norganisations) and the factors that erode trust in society. \n• Examples: \n• Social equity \n• Justice \n• Employment \n• Democracy \n• … \n• Also includes compliance with policies and regulations \n12\n\nEnvironmental Sustainability\n• the branch of Software Engineering that studies \nthe development of software that has minimal \nimpact in our planet throughout its whole \nlifecycle. \n• Looking at software at different levels: \n• Developing, Using, Serving, … \n• Also includes e-waste. \n• Almost identical to Green Software. (?)\n13\nBordallo II\n\nGreen Software\n• Sustainability and energy efficiency. \n• Building energy-efficient software is important also from a \ntechnical sustainability POV. \n• Smartphones, smart wearables, IoT devices, etc. run on limited \npower resources. \n• Developing software to these devices require energy-efficiency \ntesting and improvement. \n• It also leads to environmental sustainability (e.g., less battery \ncycles) \n• Important for UX (e.g., no need to walk around with power banks)\n14\n\nhttps://www.menti.com/uns9d89kzn\nWhat is the sustainability \ndimension you are most \ninterested in?\n?\n15\n\nEconomical sustainability tops the environment\n• In general, a software project will not survive if it’s not economical \nsustainable \n• Yet, a project can survive even if it is not environmental sustainable \n• The mindset is changing! \n• Software consumers have started to worry about the climate impact \nof their behaviour as users. \n• Being environmentally sustainable is now an important competitive \nfactor \n• Marketing teams are already using all eco-friendly labels. Technical \nteams are not there yet, though. \n• It’s easier said than done!\n$\n16\n\nGreen Washing\n• Deceptively use marketing techniques to \nclaim being eco-friendly.']","[""['Sustainable Software \\nEngineering is…\\n7\\n…the  discipline that studies the process of creating software systems that are able \\nto create value in the long term without hindering its surrounding environment.']""]","Sustainable Software Engineering is the discipline that studies the process of creating software systems that are able to create value in the long term without hindering their surrounding environment. It focuses on multiple dimensions, including economical, social, technical, individual, and environmental aspects.

In terms of environmental sustainability, it involves developing software that has minimal impact on the planet throughout its lifecycle. This includes considerations like energy efficiency, reducing e-waste, and ensuring that software can run effectively on devices with limited power resources, such as smartphones and IoT devices. By focusing on these aspects, Sustainable Software Engineering contributes to creating long-term value by ensuring that software systems are not only economically viable but also environmentally responsible, thus aligning with the growing consumer concern about climate impact.",Sustainable Software Engineering is the discipline that studies the process of creating software systems that are able to create value in the long term without hindering its surrounding environment.,0.99999999995,1.0,0.9166666666666666,1.0,0.249999999375,0.9658349821833824
What is Sustainable Software Engineering?,"['Carolin Brandt \nC.E.Brandt@tudelft.nl \nLuís Cruz \nL.Cruz@tudelft.nl \n1. Intro Class\nSustainable Software Engineering\u2028\nCS4575\nSustainableSE 2025\nEnrique Barba Roque \nE.BarbaRoque@tudelft.nl\n\n1. Intro to Sustainable SE \n2. Intro to the course\n2\n\nof the electricity consumed worldwide \nby 2040 will stem from ICT\n14%\n\n4\nhttps://xkcd.com/1007/\n\nBuzz words\n• Eco-friendly \n• Climate change, action, adaption \n• Energy efficiency \n• Environmental-responsible \n• Carbon-neutral; Climate-neutral; Net zero \n• Carbon-offsetting \n• Carbon-free \n• Clean technology \n• E-waste\n5\n\nhttps://www.menti.com/uns9d89kzn\nWhat is Sustainable \nSoftware Engineering?\n?\n6\n\nSustainable Software \nEngineering is…\n7\n…the discipline that studies the process of creating software systems that are able \nto create value in the long term without hindering its surrounding environment.\n\n8\nEconomical\nSocial\nTechnical\nIndividual\nEnvironmental\nSustainable\nSoftware\nEngineering\n⭐\nTechnical\u2028\n⚙\nEconomical\u2028\n💰\nSocial\u2028\n👩💼👨💼👩💼👩💼\nIndividual\u2028\n👩💻\nEnvironmental\u2028\n🌱\nSustainable\u2028\nSoftware \nEngineering\n\nEconomical\n• Focused on assets, capital and added value\u2028\n(wealth creation, prosperity, profitability, capital \ninvestment, income, etc.) \n• Nr of customers  \n• Man-day-rate estimate \n• Next round of funding \n• Meet requirements in the contract\n9\n\nTechnical\n• Longevity of information, systems, and infrastructure and their \nadequate evolution with changing surrounding conditions. \n• Examples: \n• Technical Debt \n• Does it scale? \n• Software testing \n• Bus-factor \n• Data integrity \n• Innovation \n• …\n10\n\nIndividual\n• Well-being of the individuals in an organisation.\u2028\nNote that it also includes how well individuals interact \nwith each other within the org.', 'Revisiting Research Questions\n• Can we compare the energy efficiency of software languages?  \n• Is the faster language always the most energy efficient? \n• How does memory usage relate to energy consumption?  \n• Can we automatically decide what is the best programming language considering \nenergy, time, and memory usage?  \n• How do the results of our energy consumption analysis of programming \nlanguages gathered from rigorous performance benchmarking solutions \ncompare to results of average day-to-day solutions?  \n• What would happen if we cherry picked the tasks?\u2028\n44\n\n\nLuís Cruz \nL.Cruz@tudelft.nl \n3. Scientific Guide for Reliable \nEnergy Experiments\nSustainable Software Engineering\u2028\nCS4575\nSustainableSE 2025\nCarolin Brandt \nC.E.Brandt@tudelft.nl \nEnrique Barba Roque \nE.BarbaRoque@tudelft.nl']","[""['https://www.menti.com/uns9d89kzn\\nWhat is Sustainable \\nSoftware Engineering?\\n?\\n6']"", ""['Sustainable Software \\nEngineering is…\\n7\\n…the  discipline that studies the process of creating software systems that are able \\nto create value in the long term without hindering its surrounding environment.']""]","Sustainable Software Engineering is the discipline that studies the process of creating software systems that are able to create value in the long term without hindering their surrounding environment. It encompasses various aspects such as economical, social, technical, individual, and environmental considerations.","Sustainable Software Engineering refers to the practice of developing software in a way that considers long-term maintainability, environmental impact, and efficient use of resources.",0.9999999999,1.0,1.0,0.67,0.249999999375,0.9999999999999992
What is environmental-responsible?,"['Carolin Brandt \nC.E.Brandt@tudelft.nl \nLuís Cruz \nL.Cruz@tudelft.nl \n1. Intro Class\nSustainable Software Engineering\u2028\nCS4575\nSustainableSE 2025\nEnrique Barba Roque \nE.BarbaRoque@tudelft.nl\n\n1. Intro to Sustainable SE \n2. Intro to the course\n2\n\nof the electricity consumed worldwide \nby 2040 will stem from ICT\n14%\n\n4\nhttps://xkcd.com/1007/\n\nBuzz words\n• Eco-friendly \n• Climate change, action, adaption \n• Energy efficiency \n• Environmental-responsible \n• Carbon-neutral; Climate-neutral; Net zero \n• Carbon-offsetting \n• Carbon-free \n• Clean technology \n• E-waste\n5\n\nhttps://www.menti.com/uns9d89kzn\nWhat is Sustainable \nSoftware Engineering?\n?\n6\n\nSustainable Software \nEngineering is…\n7\n…the discipline that studies the process of creating software systems that are able \nto create value in the long term without hindering its surrounding environment.\n\n8\nEconomical\nSocial\nTechnical\nIndividual\nEnvironmental\nSustainable\nSoftware\nEngineering\n⭐\nTechnical\u2028\n⚙\nEconomical\u2028\n💰\nSocial\u2028\n👩💼👨💼👩💼👩💼\nIndividual\u2028\n👩💻\nEnvironmental\u2028\n🌱\nSustainable\u2028\nSoftware \nEngineering\n\nEconomical\n• Focused on assets, capital and added value\u2028\n(wealth creation, prosperity, profitability, capital \ninvestment, income, etc.) \n• Nr of customers  \n• Man-day-rate estimate \n• Next round of funding \n• Meet requirements in the contract\n9\n\nTechnical\n• Longevity of information, systems, and infrastructure and their \nadequate evolution with changing surrounding conditions. \n• Examples: \n• Technical Debt \n• Does it scale? \n• Software testing \n• Bus-factor \n• Data integrity \n• Innovation \n• …\n10\n\nIndividual\n• Well-being of the individuals in an organisation.\u2028\nNote that it also includes how well individuals interact \nwith each other within the org.', '• Examples: \n• Technical Debt \n• Does it scale? \n• Software testing \n• Bus-factor \n• Data integrity \n• Innovation \n• …\n10\n\nIndividual\n• Well-being of the individuals in an organisation.\u2028\nNote that it also includes how well individuals interact \nwith each other within the org. \n• Examples: \n• mental and physical well-being \n• self-respect \n• education/skills \n• career development \n• …\n11\n\nSocial\n• concerned with societal communities (groups of people, \norganisations) and the factors that erode trust in society. \n• Examples: \n• Social equity \n• Justice \n• Employment \n• Democracy \n• … \n• Also includes compliance with policies and regulations \n12\n\nEnvironmental Sustainability\n• the branch of Software Engineering that studies \nthe development of software that has minimal \nimpact in our planet throughout its whole \nlifecycle. \n• Looking at software at different levels: \n• Developing, Using, Serving, … \n• Also includes e-waste. \n• Almost identical to Green Software. (?)\n13\nBordallo II\n\nGreen Software\n• Sustainability and energy efficiency. \n• Building energy-efficient software is important also from a \ntechnical sustainability POV. \n• Smartphones, smart wearables, IoT devices, etc. run on limited \npower resources. \n• Developing software to these devices require energy-efficiency \ntesting and improvement. \n• It also leads to environmental sustainability (e.g., less battery \ncycles) \n• Important for UX (e.g., no need to walk around with power banks)\n14\n\nhttps://www.menti.com/uns9d89kzn\nWhat is the sustainability \ndimension you are most \ninterested in?\n?\n15\n\nEconomical sustainability tops the environment\n• In general, a software project will not survive if it’s not economical \nsustainable \n• Yet, a project can survive even if it is not environmental sustainable \n• The mindset is changing! \n• Software consumers have started to worry about the climate impact \nof their behaviour as users. \n• Being environmentally sustainable is now an important competitive \nfactor \n• Marketing teams are already using all eco-friendly labels. Technical \nteams are not there yet, though. \n• It’s easier said than done!\n$\n16\n\nGreen Washing\n• Deceptively use marketing techniques to \nclaim being eco-friendly.']","[""['Buzz words\\n• Eco-friendly\\n• Climate change, action, adaption\\n• Energy eﬃciency\\n• Environmental-responsible\\n• Carbon-neutral; Climate-neutral; Net zero\\n• Carbon-oﬀsetting\\n• Carbon-free\\n• Clean technology\\n• E-waste\\n5']""]","Environmental-responsible refers to practices and approaches that aim to minimize the impact on the environment throughout the lifecycle of a product or service. In the context of software engineering, it involves developing software that has minimal environmental impact, considering aspects such as energy efficiency, reducing e-waste, and ensuring that the software is sustainable and eco-friendly. This concept is closely related to green software, which emphasizes sustainability and energy efficiency in software development.",Environmental-responsible is a buzzword.,0.9999999999,1.0,0.8888888888888888,0.0,0.4999999975,0.9135802525682962
"What is the Rebound effect and how does it affect energy consumption and demand, and why is it called a paradox?","['Carbon-free giants\n• Google, Microsoft, Meta/Facebook want to be carbon free by 2030 \n• Carbon free is different from carbon neutral \n• Green IT experts are needed to meet these goals\n23\n\n\nRebound effect*\n• Energy consumption decreases ↓↓ but demand also increases ↑↑. \n• *a.k.a. Jevons Paradox in economics; Downs–Thomson paradox in\xa0mobility.\nEnergy per prompt\nPrompts\n100\n80\n30\n38\nChat \nGPT\n“Energy-efficient” \nChat GPT\n0\n\nIs sustainability an\u2028\nethical issue?\n• Climate change is more likely to affect the \npoorest countries. \n• Less financial resources to adapt \n• Climate-impact does not necessarily affect \npolluting countries. \n• Poorest countries have contributed less to the \nclimate change. \n• We need to figure out how to do more using \nless resources.\n26\n\nMorality ≠ Moralising\n• We should not use climate action as a \nshaming weapon \n• Climate action should be agnostic of political \nviews, ideology, social status, etc. \n• We need everyone to take action!\n27\n\nWhy?\n• Throughout your career you might: \n• Design/maintain/contract data centers \n• Set up operations/devops \n• Develop AI for IoT devices \n• Be the next CEO/CTO of a software company \n• Sustainability can be your main role: \n• Green Software Developer \n• Sustainability Consultant \n• Green Advocate  \n• Founder of a Green Tech startup (B2B?)\n28\n\nFormat of classes\n• In-person. \n• Collegerama recordings. \n• Lectures and Labs. \n• Guest lectures. \n• Steering meetings (after week 5, new schedule)\n29\n\nFormat of classes\n• There’s no exam in this course. It’s more important that we learn how to \ndiscuss this topic and come up with new ideas than learning all the theory. \nCritical thinking over checkboxes. \n• Mix of content and discussion \n• Ultimately, the lectures aim to give you food for thought and the necessary \nknowledge to excel in Project 2.', '• Software consumers have started to worry about the climate impact \nof their behaviour as users. \n• Being environmentally sustainable is now an important competitive \nfactor \n• Marketing teams are already using all eco-friendly labels. Technical \nteams are not there yet, though. \n• It’s easier said than done!\n$\n16\n\nGreen Washing\n• Deceptively use marketing techniques to \nclaim being eco-friendly. \n• Opting for green-coloured designs. \n• Red/orange is usually perceived as \ntasty. \n• Green is perceived as eco-friendly. \n• The VW case. (?)\n17\n\nThe VW scandal\nGreenwashing\n• Used software to cheat on vehicle emissions \ntests. \n• The vehicle’s software could detect whether they \nwere being tested, changing the performance \naccordingly to improve results. \n• Affected 11M cars worldwide, 8M in Europe.\n18\n\nHow can we drive sustainability \nin the SE industry?\n\nGreen Procurement\n• Customers decide on providers that share their values \n• This is currently the main trigger reason why organisations \nworry about Sustainability and Green Software. \n• Examples of green procurement: \n• Customers that only buy green services/products \n• Companies that only use green providers \n• Developers that only work for green companies \n• Green procurement makes environmental sustainability \nessential for economical sustainability.\n20\n\nSustainability via compliance\n• EU wants to be carbon neutral by 2030 \n• This also affects the ICT sector. Estimated to impact \n14% of the global carbon footprint by 2040. \n• Some initiatives are already being negotiated. \n• Extending the smartphone lifetime to 7 years. \n• Right-to-repair movement. https://repair.eu \n• Making IT services relying on clean energy more \naccessible (e.g., less taxes).\n21\n\nSoftware for Sustainability \n• We are not covering it in this course.\n\nCarbon-free giants\n• Google, Microsoft, Meta/Facebook want to be carbon free by 2030 \n• Carbon free is different from carbon neutral \n• Green IT experts are needed to meet these goals\n23\n\n\nRebound effect*\n• Energy consumption decreases ↓↓ but demand also increases ↑↑. \n• *a.k.a. Jevons Paradox in economics; Downs–Thomson paradox in\xa0mobility.']","[""['Rebound effect*\\n• Energy consumption decreases ↓↓ but demand also increases ↑↑.\\n• *a.k.a. Jevons Paradox in economics; Downs–Thomson paradox in\\xa0mobility.\\nEnergy per prompt\\nPrompts\\n100\\n80\\n30 38\\nChat \\nGPT “Energy-eﬃcient” \\nChat GPT\\n0']""]","The Rebound effect, also known as Jevons Paradox in economics, refers to the phenomenon where energy consumption decreases due to increased efficiency, but this leads to an increase in demand. This paradox occurs because as energy use becomes more efficient and cheaper, people tend to use more of it, which can offset the initial energy savings. This effect highlights the counterintuitive outcome where improvements in energy efficiency do not always lead to a proportional decrease in overall energy consumption.","The Rebound effect, also known as Jevons Paradox in economics and Downs–Thomson paradox in mobility, occurs when energy consumption decreases but demand increases. This phenomenon is referred to as a paradox because improving energy efficiency can lead to increased energy use due to higher demand.",0.99999999995,0.5,0.625,0.83,0.5999999988,0.939026998481565
What is the content of the course about?,"['• Guest lectures. \n• Steering meetings (after week 5, new schedule)\n29\n\nFormat of classes\n• There’s no exam in this course. It’s more important that we learn how to \ndiscuss this topic and come up with new ideas than learning all the theory. \nCritical thinking over checkboxes. \n• Mix of content and discussion \n• Ultimately, the lectures aim to give you food for thought and the necessary \nknowledge to excel in Project 2. (We will talk about it later)\n30\n\nhttps://luiscruz.github.io/course_sustainableSE/\n31\nContent of the course 👇\n\n32\nhttps://mattermost.tudelft.nl/signup_user_complete/?id=1nj9tk6usjf8xmsws8wpq3s5uy&md=link&sbr=su\n\nProject 1\n• Goal: Measure the energy consumption of software applications. \n• Approach: energy measurement tools; use case testing. \n• Deliverable: blog-style report (approx. 2500 words) \n• Deadline: Week 3, Feb 28, 2025 \n• Group size: 4–5\n33\n\nProject 2\n• Goal: Create a solution/tool/technique that helps building green software. (You \ncan come up with your own idea or choose one from a list of suggestions). \n• Approach: open-source software development; literature review. \n• Deliverable: library/tool/app; paper; presentation. \n• Two deadlines:\u2028\n1. Paper and software: Week 8, April 4, 2025\u2028\n2. Presentation: Week 9, April 11, 2025 \n• Group size: 4–5\n34\n\nGuest Lectures\nNergis Tömen \nComputer Vision lab | TU Delft \nWeek 4, Wed, Mar 5, 2025\n35\n\nCommunity \nHow to get involved?\n36\n\nGreen TU\n• https://www.tudelft.nl/sustainability/get-\ninvolved/greentu \n• Student organisation at the TU Delft devoted \nto stimulating sustainability in education, \nresearch, university operations and \ncommunity engagement.', 'Carbon-free giants\n• Google, Microsoft, Meta/Facebook want to be carbon free by 2030 \n• Carbon free is different from carbon neutral \n• Green IT experts are needed to meet these goals\n23\n\n\nRebound effect*\n• Energy consumption decreases ↓↓ but demand also increases ↑↑. \n• *a.k.a. Jevons Paradox in economics; Downs–Thomson paradox in\xa0mobility.\nEnergy per prompt\nPrompts\n100\n80\n30\n38\nChat \nGPT\n“Energy-efficient” \nChat GPT\n0\n\nIs sustainability an\u2028\nethical issue?\n• Climate change is more likely to affect the \npoorest countries. \n• Less financial resources to adapt \n• Climate-impact does not necessarily affect \npolluting countries. \n• Poorest countries have contributed less to the \nclimate change. \n• We need to figure out how to do more using \nless resources.\n26\n\nMorality ≠ Moralising\n• We should not use climate action as a \nshaming weapon \n• Climate action should be agnostic of political \nviews, ideology, social status, etc. \n• We need everyone to take action!\n27\n\nWhy?\n• Throughout your career you might: \n• Design/maintain/contract data centers \n• Set up operations/devops \n• Develop AI for IoT devices \n• Be the next CEO/CTO of a software company \n• Sustainability can be your main role: \n• Green Software Developer \n• Sustainability Consultant \n• Green Advocate  \n• Founder of a Green Tech startup (B2B?)\n28\n\nFormat of classes\n• In-person. \n• Collegerama recordings. \n• Lectures and Labs. \n• Guest lectures. \n• Steering meetings (after week 5, new schedule)\n29\n\nFormat of classes\n• There’s no exam in this course. It’s more important that we learn how to \ndiscuss this topic and come up with new ideas than learning all the theory. \nCritical thinking over checkboxes. \n• Mix of content and discussion \n• Ultimately, the lectures aim to give you food for thought and the necessary \nknowledge to excel in Project 2.']","[""['https://luiscruz.github.io/course_sustainableSE/\\n31\\nContent of the course \\n👇']""]","The course focuses on discussing sustainability in software engineering, emphasizing critical thinking and idea generation over rote learning of theory. It includes a mix of content and discussion, with the aim of providing knowledge to excel in Project 2. The course involves guest lectures, steering meetings, and covers topics like energy consumption measurement, creating green software solutions, and the ethical implications of sustainability. There are no exams; instead, the course includes projects that involve practical applications and open-source software development.",The content of the course is available at the provided link.,0.0,1.0,0.75,0.0,0.0,0.9003039287712234
What is the focus of the '1. Intro to Sustainable SE' section?,"['Carolin Brandt \nC.E.Brandt@tudelft.nl \nLuís Cruz \nL.Cruz@tudelft.nl \n1. Intro Class\nSustainable Software Engineering\u2028\nCS4575\nSustainableSE 2025\nEnrique Barba Roque \nE.BarbaRoque@tudelft.nl\n\n1. Intro to Sustainable SE \n2. Intro to the course\n2\n\nof the electricity consumed worldwide \nby 2040 will stem from ICT\n14%\n\n4\nhttps://xkcd.com/1007/\n\nBuzz words\n• Eco-friendly \n• Climate change, action, adaption \n• Energy efficiency \n• Environmental-responsible \n• Carbon-neutral; Climate-neutral; Net zero \n• Carbon-offsetting \n• Carbon-free \n• Clean technology \n• E-waste\n5\n\nhttps://www.menti.com/uns9d89kzn\nWhat is Sustainable \nSoftware Engineering?\n?\n6\n\nSustainable Software \nEngineering is…\n7\n…the discipline that studies the process of creating software systems that are able \nto create value in the long term without hindering its surrounding environment.\n\n8\nEconomical\nSocial\nTechnical\nIndividual\nEnvironmental\nSustainable\nSoftware\nEngineering\n⭐\nTechnical\u2028\n⚙\nEconomical\u2028\n💰\nSocial\u2028\n👩💼👨💼👩💼👩💼\nIndividual\u2028\n👩💻\nEnvironmental\u2028\n🌱\nSustainable\u2028\nSoftware \nEngineering\n\nEconomical\n• Focused on assets, capital and added value\u2028\n(wealth creation, prosperity, profitability, capital \ninvestment, income, etc.) \n• Nr of customers  \n• Man-day-rate estimate \n• Next round of funding \n• Meet requirements in the contract\n9\n\nTechnical\n• Longevity of information, systems, and infrastructure and their \nadequate evolution with changing surrounding conditions. \n• Examples: \n• Technical Debt \n• Does it scale? \n• Software testing \n• Bus-factor \n• Data integrity \n• Innovation \n• …\n10\n\nIndividual\n• Well-being of the individuals in an organisation.\u2028\nNote that it also includes how well individuals interact \nwith each other within the org.', 'Green Shift Left \n• C7. Education for Sustainable SE\n\nA1. Prototype cross-machine comparable benchmarks\n• Energy-usage comparisons require running both baseline + software on the \nsame machine → limits how extensive our experiments can be \n• Research community is in need of benchmarks that make energy \nmeasurements comparable even if executed on different machines \n• Focus on a single task or model (i.e. computing vision, classification)\n\nA2. Adding energy metrics to LMstudio/Ollama\n• Make energy consumption visible to users \nwithin local chat-interface for LLMs \n• LMstudio/Ollama are tools for easy \ndeployment of LLMs \n• Do not show energy metrics \n• Add energy metrics to LMstudio-python \nor Ollama\nhttps://lmstudio.ai/\n\nA3. Visualizations built-in with EnergiBridge\n• EnergiBridge simplifies energy measurement, but analysis & visualization is \nstill left to the user \n• Extend the tool with well-chosen visualizations and analyses directly from the \nprovided data\n\nA4. Service-based version of EnergiBridge\n• Simplify interaction & setup with EnergiBridge \n• Service that runs independently, start/stop signals over RPC to manage \nexperiments \n• Potential: create EnergiBridge interface for other prog. lang\n\nB1. Measure energy consumption of single JUnit tests\n• We’d like to identify energy anti patterns in unit tests \n• As a first step, we need tooling to measure and compare the energy \nconsumption of single unit tests \n• Ideally including preliminary analysis looking at potential reasons for high-\nenergy-consuming tests\n\nB2. Study test generation energy consumption\n• Automatic test generation mainly focuses on making strong test suites \n• Do different techniques and configurations impact the energy consumption \nduring generation? \n• Preferably focus on non-LLM test generation methods (EvoSuite, Pyguin, \nDSpot)\n\nB3. Detailed energy profiling of build pipelines\n• Automatic builds have become a cornerstone of quality assurance. But how \nmuch energy do they even consume?']","[""['1. Intro to Sustainable SE \\n2. Intro to the course\\n2']""]","The focus of the '1. Intro to Sustainable SE' section is on defining Sustainable Software Engineering as the discipline that studies the process of creating software systems that are able to create value in the long term without hindering their surrounding environment. It emphasizes the importance of considering economical, social, technical, individual, and environmental aspects in software engineering.",The '1. Intro to Sustainable SE' section serves as an introduction to the topic of sustainable software engineering.,0.9999999999,0.0,1.0,0.0,0.0,0.9999999999999992
What is the format of the class regarding Lecture and Lab sessions?,"['Carbon-free giants\n• Google, Microsoft, Meta/Facebook want to be carbon free by 2030 \n• Carbon free is different from carbon neutral \n• Green IT experts are needed to meet these goals\n23\n\n\nRebound effect*\n• Energy consumption decreases ↓↓ but demand also increases ↑↑. \n• *a.k.a. Jevons Paradox in economics; Downs–Thomson paradox in\xa0mobility.\nEnergy per prompt\nPrompts\n100\n80\n30\n38\nChat \nGPT\n“Energy-efficient” \nChat GPT\n0\n\nIs sustainability an\u2028\nethical issue?\n• Climate change is more likely to affect the \npoorest countries. \n• Less financial resources to adapt \n• Climate-impact does not necessarily affect \npolluting countries. \n• Poorest countries have contributed less to the \nclimate change. \n• We need to figure out how to do more using \nless resources.\n26\n\nMorality ≠ Moralising\n• We should not use climate action as a \nshaming weapon \n• Climate action should be agnostic of political \nviews, ideology, social status, etc. \n• We need everyone to take action!\n27\n\nWhy?\n• Throughout your career you might: \n• Design/maintain/contract data centers \n• Set up operations/devops \n• Develop AI for IoT devices \n• Be the next CEO/CTO of a software company \n• Sustainability can be your main role: \n• Green Software Developer \n• Sustainability Consultant \n• Green Advocate  \n• Founder of a Green Tech startup (B2B?)\n28\n\nFormat of classes\n• In-person. \n• Collegerama recordings. \n• Lectures and Labs. \n• Guest lectures. \n• Steering meetings (after week 5, new schedule)\n29\n\nFormat of classes\n• There’s no exam in this course. It’s more important that we learn how to \ndiscuss this topic and come up with new ideas than learning all the theory. \nCritical thinking over checkboxes. \n• Mix of content and discussion \n• Ultimately, the lectures aim to give you food for thought and the necessary \nknowledge to excel in Project 2.', '• Guest lectures. \n• Steering meetings (after week 5, new schedule)\n29\n\nFormat of classes\n• There’s no exam in this course. It’s more important that we learn how to \ndiscuss this topic and come up with new ideas than learning all the theory. \nCritical thinking over checkboxes. \n• Mix of content and discussion \n• Ultimately, the lectures aim to give you food for thought and the necessary \nknowledge to excel in Project 2. (We will talk about it later)\n30\n\nhttps://luiscruz.github.io/course_sustainableSE/\n31\nContent of the course 👇\n\n32\nhttps://mattermost.tudelft.nl/signup_user_complete/?id=1nj9tk6usjf8xmsws8wpq3s5uy&md=link&sbr=su\n\nProject 1\n• Goal: Measure the energy consumption of software applications. \n• Approach: energy measurement tools; use case testing. \n• Deliverable: blog-style report (approx. 2500 words) \n• Deadline: Week 3, Feb 28, 2025 \n• Group size: 4–5\n33\n\nProject 2\n• Goal: Create a solution/tool/technique that helps building green software. (You \ncan come up with your own idea or choose one from a list of suggestions). \n• Approach: open-source software development; literature review. \n• Deliverable: library/tool/app; paper; presentation. \n• Two deadlines:\u2028\n1. Paper and software: Week 8, April 4, 2025\u2028\n2. Presentation: Week 9, April 11, 2025 \n• Group size: 4–5\n34\n\nGuest Lectures\nNergis Tömen \nComputer Vision lab | TU Delft \nWeek 4, Wed, Mar 5, 2025\n35\n\nCommunity \nHow to get involved?\n36\n\nGreen TU\n• https://www.tudelft.nl/sustainability/get-\ninvolved/greentu \n• Student organisation at the TU Delft devoted \nto stimulating sustainability in education, \nresearch, university operations and \ncommunity engagement.']","[""['Format of classes\\n• In-person.\\n• Collegerama recordings.\\n• Lectures and Labs.\\n• Guest lectures.\\n• Steering meetings (after week 5, new schedule)\\n29']""]","The format of the class includes in-person lectures and labs, along with Collegerama recordings. There are also guest lectures and steering meetings scheduled after week 5. The course emphasizes a mix of content and discussion, focusing on critical thinking over rote learning.","The class format includes in-person sessions, Collegerama recordings, Lectures and Labs, guest lectures, and steering meetings (after week 5, new schedule).",0.9999999999,1.0,0.8571428571428571,0.67,0.0,0.9062877707561628
What is the purpose of XKCD comic 1007?,"['Carolin Brandt \nC.E.Brandt@tudelft.nl \nLuís Cruz \nL.Cruz@tudelft.nl \n1. Intro Class\nSustainable Software Engineering\u2028\nCS4575\nSustainableSE 2025\nEnrique Barba Roque \nE.BarbaRoque@tudelft.nl\n\n1. Intro to Sustainable SE \n2. Intro to the course\n2\n\nof the electricity consumed worldwide \nby 2040 will stem from ICT\n14%\n\n4\nhttps://xkcd.com/1007/\n\nBuzz words\n• Eco-friendly \n• Climate change, action, adaption \n• Energy efficiency \n• Environmental-responsible \n• Carbon-neutral; Climate-neutral; Net zero \n• Carbon-offsetting \n• Carbon-free \n• Clean technology \n• E-waste\n5\n\nhttps://www.menti.com/uns9d89kzn\nWhat is Sustainable \nSoftware Engineering?\n?\n6\n\nSustainable Software \nEngineering is…\n7\n…the discipline that studies the process of creating software systems that are able \nto create value in the long term without hindering its surrounding environment.\n\n8\nEconomical\nSocial\nTechnical\nIndividual\nEnvironmental\nSustainable\nSoftware\nEngineering\n⭐\nTechnical\u2028\n⚙\nEconomical\u2028\n💰\nSocial\u2028\n👩💼👨💼👩💼👩💼\nIndividual\u2028\n👩💻\nEnvironmental\u2028\n🌱\nSustainable\u2028\nSoftware \nEngineering\n\nEconomical\n• Focused on assets, capital and added value\u2028\n(wealth creation, prosperity, profitability, capital \ninvestment, income, etc.) \n• Nr of customers  \n• Man-day-rate estimate \n• Next round of funding \n• Meet requirements in the contract\n9\n\nTechnical\n• Longevity of information, systems, and infrastructure and their \nadequate evolution with changing surrounding conditions. \n• Examples: \n• Technical Debt \n• Does it scale? \n• Software testing \n• Bus-factor \n• Data integrity \n• Innovation \n• …\n10\n\nIndividual\n• Well-being of the individuals in an organisation.\u2028\nNote that it also includes how well individuals interact \nwith each other within the org.', '• Is the faster language always the most energy efficient? \n• How does memory usage relate to energy consumption? (We don’t cover this one) \n• Can we automatically decide what is the best programming language \nconsidering energy, time, and memory usage?  \n• How do the results of our energy consumption analysis of programming \nlanguages gathered from rigorous performance benchmarking solutions \ncompare to results of average day-to-day solutions? \u2028\n31\n\nMethodology\n\nThe Computer Language Benchmarks Game \n• https://benchmarksgame-team.pages.debian.net/benchmarksgame/\n33\n\nProblems in the Computer Language Benchmarks Game\n34\n\n• 27 Programming languages across different paradigms  \n• Functional (e.g., Ocaml, F#, Haskell) \n• Imperative (e.g., C, Go, Python) \n• Object-oriented (e.g., C++, C#, Java) \n• Scripting (or interpretative) (e.g., JavaScript, Python, Ruby) \n• (These are not mutual exclusive) \n• Intel RAPL’s C library to measure energy consumption\n35\n\n• Execute each benchmark solution 10 times. \n• Collect energy data and timestamps. \n• Two-minute interval between executions\n36\n\n\n\n\nCritical thinking\n• There is no doubt this is an excellent study. Yet, as any excellent study, there’s \na lot we can discuss and criticise constructively. \n• What kind of issues you see in drawing conclusions from such a table of \nresults? \n• Is the benchmark representative of the most common usage behaviour? \n• Are the implemented solutions representative? \n• Does it make sense to use the average to compare energy consumption \nacross different problems? \n• …\n40\n\nReproducing with Rosetta Code \n• Rosetta Code is a programming chrestomathy repository \n \n• 900 usecases/tasks solved across 700 different programming languages \n• Purpose: if you know a programming language we can easily learn how the \nsame task is solved in a language you are not familiar with.\n41\n(?)']","[""['4\\nhttps://xkcd.com/1007/']""]","The purpose of XKCD comic 1007 is not explicitly mentioned in the provided sources. However, XKCD comics often use humor and satire to comment on various aspects of technology, science, and everyday life. Comic 1007 likely follows this pattern, providing a humorous take on a particular topic. For more specific details, you might want to visit the XKCD website directly.",XKCD comic 1007 is available at https://xkcd.com/1007/.,0.0,1.0,0.5,0.4,0.3333333322222222,0.0
What is the purpose of the website https://repair.eu in the context of green software practices?,"['• Software consumers have started to worry about the climate impact \nof their behaviour as users. \n• Being environmentally sustainable is now an important competitive \nfactor \n• Marketing teams are already using all eco-friendly labels. Technical \nteams are not there yet, though. \n• It’s easier said than done!\n$\n16\n\nGreen Washing\n• Deceptively use marketing techniques to \nclaim being eco-friendly. \n• Opting for green-coloured designs. \n• Red/orange is usually perceived as \ntasty. \n• Green is perceived as eco-friendly. \n• The VW case. (?)\n17\n\nThe VW scandal\nGreenwashing\n• Used software to cheat on vehicle emissions \ntests. \n• The vehicle’s software could detect whether they \nwere being tested, changing the performance \naccordingly to improve results. \n• Affected 11M cars worldwide, 8M in Europe.\n18\n\nHow can we drive sustainability \nin the SE industry?\n\nGreen Procurement\n• Customers decide on providers that share their values \n• This is currently the main trigger reason why organisations \nworry about Sustainability and Green Software. \n• Examples of green procurement: \n• Customers that only buy green services/products \n• Companies that only use green providers \n• Developers that only work for green companies \n• Green procurement makes environmental sustainability \nessential for economical sustainability.\n20\n\nSustainability via compliance\n• EU wants to be carbon neutral by 2030 \n• This also affects the ICT sector. Estimated to impact \n14% of the global carbon footprint by 2040. \n• Some initiatives are already being negotiated. \n• Extending the smartphone lifetime to 7 years. \n• Right-to-repair movement. https://repair.eu \n• Making IT services relying on clean energy more \naccessible (e.g., less taxes).\n21\n\nSoftware for Sustainability \n• We are not covering it in this course.\n\nCarbon-free giants\n• Google, Microsoft, Meta/Facebook want to be carbon free by 2030 \n• Carbon free is different from carbon neutral \n• Green IT experts are needed to meet these goals\n23\n\n\nRebound effect*\n• Energy consumption decreases ↓↓ but demand also increases ↑↑. \n• *a.k.a. Jevons Paradox in economics; Downs–Thomson paradox in\xa0mobility.', '•\n\nC6 - Green Shift Left\n• Estimate energy efficiency using static code analysis. \n• We don’t need an accurate value. \n• It is useful to know which code is more likely to \nintroduce energy hotspots and that should be \nreviewed with more attention. \n• Can be scoped to a particular domain (react, php, data \nscience, web, etc., etc.)\n27\n\nC7 - Education\n• Educational game for Software \nSustainability practices \n• Purpose: use within software teams to \ndiscuss or learn about different sustainable \nIT practices: at the organisation level, \nsoftware, etc.\n28\nhttps://github.com/OttoKaaij/Ticket-To-Sustainability/?tab=readme-ov-file\n\nProject ideas (old)\n• Plugin from EnergiBridge (GUI, report generator, python library, etc.) \n• Plugin for ChatGPT (carbon emissions per chat window) \n• Seamless measurements for AI libraries \n• Energy patterns for Green AI \n• Sustainable SW dev gamification \n• Sustainability auditor for AI projects \n• Energy Profiling of screen colour filter tools (or display settings) \n• … you can also propose yours!\n\nhttps://edu.nl/64gpk\nedu.nl/64gpk']","[""['Sustainability via compliance\\n• EU wants to be carbon neutral by 2030\\n• This also aﬀects the ICT sector. Estimated to impact \\n14% of the global carbon footprint by 2040.\\n• Some initiatives are already being negotiated.\\n• Extending the smartphone lifetime to 7 years.\\n• Right-to-repair movement. https://repair.eu\\n• Making IT services relying on clean energy more \\naccessible (e.g., less taxes).\\n21']""]","The website https://repair.eu is associated with the right-to-repair movement, which is part of sustainability initiatives aimed at extending the lifetime of devices, such as smartphones, to reduce their environmental impact. This movement is relevant to green software practices as it promotes making IT services more sustainable by allowing devices to be repaired and maintained for longer periods, thus reducing electronic waste and the need for new resources.","The website https://repair.eu is associated with the right-to-repair movement, which aims to extend the lifetime of devices and reduce environmental impact.",0.9999999999,1.0,0.5714285714285714,0.83,0.999999995,0.9652942566533596
What is the relationship between Environmental Sustainability and Green Software in the context of software engineering?,"['• Examples: \n• Technical Debt \n• Does it scale? \n• Software testing \n• Bus-factor \n• Data integrity \n• Innovation \n• …\n10\n\nIndividual\n• Well-being of the individuals in an organisation.\u2028\nNote that it also includes how well individuals interact \nwith each other within the org. \n• Examples: \n• mental and physical well-being \n• self-respect \n• education/skills \n• career development \n• …\n11\n\nSocial\n• concerned with societal communities (groups of people, \norganisations) and the factors that erode trust in society. \n• Examples: \n• Social equity \n• Justice \n• Employment \n• Democracy \n• … \n• Also includes compliance with policies and regulations \n12\n\nEnvironmental Sustainability\n• the branch of Software Engineering that studies \nthe development of software that has minimal \nimpact in our planet throughout its whole \nlifecycle. \n• Looking at software at different levels: \n• Developing, Using, Serving, … \n• Also includes e-waste. \n• Almost identical to Green Software. (?)\n13\nBordallo II\n\nGreen Software\n• Sustainability and energy efficiency. \n• Building energy-efficient software is important also from a \ntechnical sustainability POV. \n• Smartphones, smart wearables, IoT devices, etc. run on limited \npower resources. \n• Developing software to these devices require energy-efficiency \ntesting and improvement. \n• It also leads to environmental sustainability (e.g., less battery \ncycles) \n• Important for UX (e.g., no need to walk around with power banks)\n14\n\nhttps://www.menti.com/uns9d89kzn\nWhat is the sustainability \ndimension you are most \ninterested in?\n?\n15\n\nEconomical sustainability tops the environment\n• In general, a software project will not survive if it’s not economical \nsustainable \n• Yet, a project can survive even if it is not environmental sustainable \n• The mindset is changing! \n• Software consumers have started to worry about the climate impact \nof their behaviour as users. \n• Being environmentally sustainable is now an important competitive \nfactor \n• Marketing teams are already using all eco-friendly labels. Technical \nteams are not there yet, though. \n• It’s easier said than done!\n$\n16\n\nGreen Washing\n• Deceptively use marketing techniques to \nclaim being eco-friendly.', 'Carolin Brandt \nC.E.Brandt@tudelft.nl \nLuís Cruz \nL.Cruz@tudelft.nl \n1. Intro Class\nSustainable Software Engineering\u2028\nCS4575\nSustainableSE 2025\nEnrique Barba Roque \nE.BarbaRoque@tudelft.nl\n\n1. Intro to Sustainable SE \n2. Intro to the course\n2\n\nof the electricity consumed worldwide \nby 2040 will stem from ICT\n14%\n\n4\nhttps://xkcd.com/1007/\n\nBuzz words\n• Eco-friendly \n• Climate change, action, adaption \n• Energy efficiency \n• Environmental-responsible \n• Carbon-neutral; Climate-neutral; Net zero \n• Carbon-offsetting \n• Carbon-free \n• Clean technology \n• E-waste\n5\n\nhttps://www.menti.com/uns9d89kzn\nWhat is Sustainable \nSoftware Engineering?\n?\n6\n\nSustainable Software \nEngineering is…\n7\n…the discipline that studies the process of creating software systems that are able \nto create value in the long term without hindering its surrounding environment.\n\n8\nEconomical\nSocial\nTechnical\nIndividual\nEnvironmental\nSustainable\nSoftware\nEngineering\n⭐\nTechnical\u2028\n⚙\nEconomical\u2028\n💰\nSocial\u2028\n👩💼👨💼👩💼👩💼\nIndividual\u2028\n👩💻\nEnvironmental\u2028\n🌱\nSustainable\u2028\nSoftware \nEngineering\n\nEconomical\n• Focused on assets, capital and added value\u2028\n(wealth creation, prosperity, profitability, capital \ninvestment, income, etc.) \n• Nr of customers  \n• Man-day-rate estimate \n• Next round of funding \n• Meet requirements in the contract\n9\n\nTechnical\n• Longevity of information, systems, and infrastructure and their \nadequate evolution with changing surrounding conditions. \n• Examples: \n• Technical Debt \n• Does it scale? \n• Software testing \n• Bus-factor \n• Data integrity \n• Innovation \n• …\n10\n\nIndividual\n• Well-being of the individuals in an organisation.\u2028\nNote that it also includes how well individuals interact \nwith each other within the org.']","[""['Environmental Sustainability\\n• the branch of Software Engineering that studies \\nthe development of software that has minimal \\nimpact in our planet throughout its whole \\nlifecycle.\\n• Looking at software at diﬀerent levels:\\n• Developing, Using, Serving, …\\n• Also includes e-waste.\\n• Almost identical to Green Software. (?)\\n13\\n Bordallo II']""]","In the context of software engineering, Environmental Sustainability and Green Software are closely related concepts. Environmental Sustainability focuses on developing software with minimal impact on the planet throughout its lifecycle, including aspects like e-waste. Green Software specifically emphasizes sustainability and energy efficiency, particularly for devices with limited power resources such as smartphones, smart wearables, and IoT devices. Both aim to reduce environmental impact, but Green Software also highlights the importance of energy-efficient software for better user experience and reduced battery cycles, contributing to overall environmental sustainability.","Environmental Sustainability in software engineering is focused on creating software with minimal environmental impact throughout its lifecycle, which is almost identical to the concept of Green Software.",0.9999999999,1.0,1.0,0.5,0.3333333327777777,0.9899467964614806
What is the relevance of Bus factor to software sustainability?,"['• Examples: \n• Technical Debt \n• Does it scale? \n• Software testing \n• Bus-factor \n• Data integrity \n• Innovation \n• …\n10\n\nIndividual\n• Well-being of the individuals in an organisation.\u2028\nNote that it also includes how well individuals interact \nwith each other within the org. \n• Examples: \n• mental and physical well-being \n• self-respect \n• education/skills \n• career development \n• …\n11\n\nSocial\n• concerned with societal communities (groups of people, \norganisations) and the factors that erode trust in society. \n• Examples: \n• Social equity \n• Justice \n• Employment \n• Democracy \n• … \n• Also includes compliance with policies and regulations \n12\n\nEnvironmental Sustainability\n• the branch of Software Engineering that studies \nthe development of software that has minimal \nimpact in our planet throughout its whole \nlifecycle. \n• Looking at software at different levels: \n• Developing, Using, Serving, … \n• Also includes e-waste. \n• Almost identical to Green Software. (?)\n13\nBordallo II\n\nGreen Software\n• Sustainability and energy efficiency. \n• Building energy-efficient software is important also from a \ntechnical sustainability POV. \n• Smartphones, smart wearables, IoT devices, etc. run on limited \npower resources. \n• Developing software to these devices require energy-efficiency \ntesting and improvement. \n• It also leads to environmental sustainability (e.g., less battery \ncycles) \n• Important for UX (e.g., no need to walk around with power banks)\n14\n\nhttps://www.menti.com/uns9d89kzn\nWhat is the sustainability \ndimension you are most \ninterested in?\n?\n15\n\nEconomical sustainability tops the environment\n• In general, a software project will not survive if it’s not economical \nsustainable \n• Yet, a project can survive even if it is not environmental sustainable \n• The mindset is changing! \n• Software consumers have started to worry about the climate impact \nof their behaviour as users. \n• Being environmentally sustainable is now an important competitive \nfactor \n• Marketing teams are already using all eco-friendly labels. Technical \nteams are not there yet, though. \n• It’s easier said than done!\n$\n16\n\nGreen Washing\n• Deceptively use marketing techniques to \nclaim being eco-friendly.', 'Carolin Brandt \nC.E.Brandt@tudelft.nl \nLuís Cruz \nL.Cruz@tudelft.nl \n1. Intro Class\nSustainable Software Engineering\u2028\nCS4575\nSustainableSE 2025\nEnrique Barba Roque \nE.BarbaRoque@tudelft.nl\n\n1. Intro to Sustainable SE \n2. Intro to the course\n2\n\nof the electricity consumed worldwide \nby 2040 will stem from ICT\n14%\n\n4\nhttps://xkcd.com/1007/\n\nBuzz words\n• Eco-friendly \n• Climate change, action, adaption \n• Energy efficiency \n• Environmental-responsible \n• Carbon-neutral; Climate-neutral; Net zero \n• Carbon-offsetting \n• Carbon-free \n• Clean technology \n• E-waste\n5\n\nhttps://www.menti.com/uns9d89kzn\nWhat is Sustainable \nSoftware Engineering?\n?\n6\n\nSustainable Software \nEngineering is…\n7\n…the discipline that studies the process of creating software systems that are able \nto create value in the long term without hindering its surrounding environment.\n\n8\nEconomical\nSocial\nTechnical\nIndividual\nEnvironmental\nSustainable\nSoftware\nEngineering\n⭐\nTechnical\u2028\n⚙\nEconomical\u2028\n💰\nSocial\u2028\n👩💼👨💼👩💼👩💼\nIndividual\u2028\n👩💻\nEnvironmental\u2028\n🌱\nSustainable\u2028\nSoftware \nEngineering\n\nEconomical\n• Focused on assets, capital and added value\u2028\n(wealth creation, prosperity, profitability, capital \ninvestment, income, etc.) \n• Nr of customers  \n• Man-day-rate estimate \n• Next round of funding \n• Meet requirements in the contract\n9\n\nTechnical\n• Longevity of information, systems, and infrastructure and their \nadequate evolution with changing surrounding conditions. \n• Examples: \n• Technical Debt \n• Does it scale? \n• Software testing \n• Bus-factor \n• Data integrity \n• Innovation \n• …\n10\n\nIndividual\n• Well-being of the individuals in an organisation.\u2028\nNote that it also includes how well individuals interact \nwith each other within the org.']","[""['Technical\\n• Longevity of information, systems, and infrastructure and their \\nadequate evolution with changing surrounding conditions.\\n• Examples:\\n• Technical Debt\\n• Does it scale?\\n• Software testing\\n• Bus-factor\\n• Data integrity\\n• Innovation\\n• …\\n10']""]","The bus factor is relevant to software sustainability as it pertains to the technical dimension of sustainability. It refers to the number of key individuals who, if unavailable, would cause the project to be significantly disrupted. A low bus factor indicates that a project is heavily dependent on a few individuals, which poses a risk to the longevity and evolution of the software system. Ensuring a higher bus factor by spreading knowledge and responsibilities among more team members can contribute to the sustainable development and maintenance of software systems.",Bus-factor is a relevant consideration in software sustainability.,0.99999999995,1.0,0.5,0.0,0.4999999975,0.977494541470706
What is the sustainability dimention in software engineering that you find most interesting?,"['• Examples: \n• Technical Debt \n• Does it scale? \n• Software testing \n• Bus-factor \n• Data integrity \n• Innovation \n• …\n10\n\nIndividual\n• Well-being of the individuals in an organisation.\u2028\nNote that it also includes how well individuals interact \nwith each other within the org. \n• Examples: \n• mental and physical well-being \n• self-respect \n• education/skills \n• career development \n• …\n11\n\nSocial\n• concerned with societal communities (groups of people, \norganisations) and the factors that erode trust in society. \n• Examples: \n• Social equity \n• Justice \n• Employment \n• Democracy \n• … \n• Also includes compliance with policies and regulations \n12\n\nEnvironmental Sustainability\n• the branch of Software Engineering that studies \nthe development of software that has minimal \nimpact in our planet throughout its whole \nlifecycle. \n• Looking at software at different levels: \n• Developing, Using, Serving, … \n• Also includes e-waste. \n• Almost identical to Green Software. (?)\n13\nBordallo II\n\nGreen Software\n• Sustainability and energy efficiency. \n• Building energy-efficient software is important also from a \ntechnical sustainability POV. \n• Smartphones, smart wearables, IoT devices, etc. run on limited \npower resources. \n• Developing software to these devices require energy-efficiency \ntesting and improvement. \n• It also leads to environmental sustainability (e.g., less battery \ncycles) \n• Important for UX (e.g., no need to walk around with power banks)\n14\n\nhttps://www.menti.com/uns9d89kzn\nWhat is the sustainability \ndimension you are most \ninterested in?\n?\n15\n\nEconomical sustainability tops the environment\n• In general, a software project will not survive if it’s not economical \nsustainable \n• Yet, a project can survive even if it is not environmental sustainable \n• The mindset is changing! \n• Software consumers have started to worry about the climate impact \nof their behaviour as users. \n• Being environmentally sustainable is now an important competitive \nfactor \n• Marketing teams are already using all eco-friendly labels. Technical \nteams are not there yet, though. \n• It’s easier said than done!\n$\n16\n\nGreen Washing\n• Deceptively use marketing techniques to \nclaim being eco-friendly.', 'Luís Cruz \nL.Cruz@tudelft.nl \n7. Green SE – Research\nSustainable Software Engineering\u2028\nCS4575\nSustainableSE 2025\nCarolin Brandt \nC.E.Brandt@tudelft.nl \nEnrique Barba Roque \nE.BarbaRoque@tudelft.nl\n\n1. Energy patterns for mobile apps \n2. Carbon-aware datacenters \n3. Energy Regression Testing \n4. Debugging Energy with Docker images \n5. Energy Efficiency vs Code Quality \n\n• While learning about these works, try to be critical about them and find their \npitfalls.\n3\n\n• We have seen that measuring energy consumption is not trivial \n• It is not practical considering that developers have other priorities above \nenergy efficiency \n• At the same time, every now and then there are some efforts to improve \nenergy efficiency in some cases. This is time consuming and requires \nexpertise. \n• How can we reuse these efforts?\n4\n\nEnergy Patterns for Mobile \nApps\nhttps://tqrg.github.io/energy-patterns/\n\nMethodology\n5. Catalog of Energy Patterns\n22 \npatterns\nF-droid\nCurated Lists\n1. App Collection\n1783 \napps\n3. Manual Refinement of Subjects of \nInterest\n1563 \nchanges\n4. Thematic Analysis\n431 \nreusable \nchanges\n2. Collect Changes With Potential Interest\n/.*(energy|power|battery).*/\n6028 \nchanges\n\nThematic Analysis\n1. Familiarization with data \n2. Generating initial labels \n3. Reviewing themes\n4. Defining and naming themes\n\n• Energy Pattern: design pattern to improve energy efficiency.. \n• 22 energy patterns. \n• Each pattern is described by Context, Solution, Example, References from \nliterature, and Occurences (links to code changes from git repositories).\n8\n\nhttps://tqrg.github.io/energy-patterns\n\nDark UI Colors \nProvide a dark UI color theme to \nsave battery on devices with \nAMOLED screens.\n• Context: […] Apps that require heavy usage of screen can \nhave a substantial negative impact on battery life. \n• Solution: Provide a UI theme with dark background colors.']","[""['https://www.menti.com/uns9d89kzn\\nWhat is the sustainability \\ndimension you are most \\ninterested in?\\n?\\n15']""]","The sustainability dimension in software engineering that I find most interesting is ""Green Software,"" which focuses on sustainability and energy efficiency. This dimension is crucial because it addresses the development of energy-efficient software, particularly for devices with limited power resources like smartphones and IoT devices. It also contributes to environmental sustainability by reducing battery cycles and improving user experience. Additionally, the growing concern among software consumers about the climate impact of their behavior makes this an important competitive factor.",The question is about identifying the sustainability dimension in software engineering that you find most interesting.,0.0,0.0,1.0,0.8,0.0,0.9836956191889462
What percentage of the electricity consumed worldwide by 2040 is projected to come from information and communication technology (ICT)?,"['Carolin Brandt \nC.E.Brandt@tudelft.nl \nLuís Cruz \nL.Cruz@tudelft.nl \n1. Intro Class\nSustainable Software Engineering\u2028\nCS4575\nSustainableSE 2025\nEnrique Barba Roque \nE.BarbaRoque@tudelft.nl\n\n1. Intro to Sustainable SE \n2. Intro to the course\n2\n\nof the electricity consumed worldwide \nby 2040 will stem from ICT\n14%\n\n4\nhttps://xkcd.com/1007/\n\nBuzz words\n• Eco-friendly \n• Climate change, action, adaption \n• Energy efficiency \n• Environmental-responsible \n• Carbon-neutral; Climate-neutral; Net zero \n• Carbon-offsetting \n• Carbon-free \n• Clean technology \n• E-waste\n5\n\nhttps://www.menti.com/uns9d89kzn\nWhat is Sustainable \nSoftware Engineering?\n?\n6\n\nSustainable Software \nEngineering is…\n7\n…the discipline that studies the process of creating software systems that are able \nto create value in the long term without hindering its surrounding environment.\n\n8\nEconomical\nSocial\nTechnical\nIndividual\nEnvironmental\nSustainable\nSoftware\nEngineering\n⭐\nTechnical\u2028\n⚙\nEconomical\u2028\n💰\nSocial\u2028\n👩💼👨💼👩💼👩💼\nIndividual\u2028\n👩💻\nEnvironmental\u2028\n🌱\nSustainable\u2028\nSoftware \nEngineering\n\nEconomical\n• Focused on assets, capital and added value\u2028\n(wealth creation, prosperity, profitability, capital \ninvestment, income, etc.) \n• Nr of customers  \n• Man-day-rate estimate \n• Next round of funding \n• Meet requirements in the contract\n9\n\nTechnical\n• Longevity of information, systems, and infrastructure and their \nadequate evolution with changing surrounding conditions. \n• Examples: \n• Technical Debt \n• Does it scale? \n• Software testing \n• Bus-factor \n• Data integrity \n• Innovation \n• …\n10\n\nIndividual\n• Well-being of the individuals in an organisation.\u2028\nNote that it also includes how well individuals interact \nwith each other within the org.', '• Software consumers have started to worry about the climate impact \nof their behaviour as users. \n• Being environmentally sustainable is now an important competitive \nfactor \n• Marketing teams are already using all eco-friendly labels. Technical \nteams are not there yet, though. \n• It’s easier said than done!\n$\n16\n\nGreen Washing\n• Deceptively use marketing techniques to \nclaim being eco-friendly. \n• Opting for green-coloured designs. \n• Red/orange is usually perceived as \ntasty. \n• Green is perceived as eco-friendly. \n• The VW case. (?)\n17\n\nThe VW scandal\nGreenwashing\n• Used software to cheat on vehicle emissions \ntests. \n• The vehicle’s software could detect whether they \nwere being tested, changing the performance \naccordingly to improve results. \n• Affected 11M cars worldwide, 8M in Europe.\n18\n\nHow can we drive sustainability \nin the SE industry?\n\nGreen Procurement\n• Customers decide on providers that share their values \n• This is currently the main trigger reason why organisations \nworry about Sustainability and Green Software. \n• Examples of green procurement: \n• Customers that only buy green services/products \n• Companies that only use green providers \n• Developers that only work for green companies \n• Green procurement makes environmental sustainability \nessential for economical sustainability.\n20\n\nSustainability via compliance\n• EU wants to be carbon neutral by 2030 \n• This also affects the ICT sector. Estimated to impact \n14% of the global carbon footprint by 2040. \n• Some initiatives are already being negotiated. \n• Extending the smartphone lifetime to 7 years. \n• Right-to-repair movement. https://repair.eu \n• Making IT services relying on clean energy more \naccessible (e.g., less taxes).\n21\n\nSoftware for Sustainability \n• We are not covering it in this course.\n\nCarbon-free giants\n• Google, Microsoft, Meta/Facebook want to be carbon free by 2030 \n• Carbon free is different from carbon neutral \n• Green IT experts are needed to meet these goals\n23\n\n\nRebound effect*\n• Energy consumption decreases ↓↓ but demand also increases ↑↑. \n• *a.k.a. Jevons Paradox in economics; Downs–Thomson paradox in\xa0mobility.']","[""['of the electricity consumed worldwide \\nby 2040 will stem from ICT\\n14%']""]","By 2040, it is projected that 14% of the electricity consumed worldwide will stem from information and communication technology (ICT).","By 2040, 14% of the electricity consumed worldwide is projected to come from information and communication technology (ICT).",0.9999999999,1.0,1.0,1.0,0.3999999992,0.993105526014728
What role does career development play in individual well-being within an organization?,"['• Examples: \n• Technical Debt \n• Does it scale? \n• Software testing \n• Bus-factor \n• Data integrity \n• Innovation \n• …\n10\n\nIndividual\n• Well-being of the individuals in an organisation.\u2028\nNote that it also includes how well individuals interact \nwith each other within the org. \n• Examples: \n• mental and physical well-being \n• self-respect \n• education/skills \n• career development \n• …\n11\n\nSocial\n• concerned with societal communities (groups of people, \norganisations) and the factors that erode trust in society. \n• Examples: \n• Social equity \n• Justice \n• Employment \n• Democracy \n• … \n• Also includes compliance with policies and regulations \n12\n\nEnvironmental Sustainability\n• the branch of Software Engineering that studies \nthe development of software that has minimal \nimpact in our planet throughout its whole \nlifecycle. \n• Looking at software at different levels: \n• Developing, Using, Serving, … \n• Also includes e-waste. \n• Almost identical to Green Software. (?)\n13\nBordallo II\n\nGreen Software\n• Sustainability and energy efficiency. \n• Building energy-efficient software is important also from a \ntechnical sustainability POV. \n• Smartphones, smart wearables, IoT devices, etc. run on limited \npower resources. \n• Developing software to these devices require energy-efficiency \ntesting and improvement. \n• It also leads to environmental sustainability (e.g., less battery \ncycles) \n• Important for UX (e.g., no need to walk around with power banks)\n14\n\nhttps://www.menti.com/uns9d89kzn\nWhat is the sustainability \ndimension you are most \ninterested in?\n?\n15\n\nEconomical sustainability tops the environment\n• In general, a software project will not survive if it’s not economical \nsustainable \n• Yet, a project can survive even if it is not environmental sustainable \n• The mindset is changing! \n• Software consumers have started to worry about the climate impact \nof their behaviour as users. \n• Being environmentally sustainable is now an important competitive \nfactor \n• Marketing teams are already using all eco-friendly labels. Technical \nteams are not there yet, though. \n• It’s easier said than done!\n$\n16\n\nGreen Washing\n• Deceptively use marketing techniques to \nclaim being eco-friendly.', 'Carolin Brandt \nC.E.Brandt@tudelft.nl \nLuís Cruz \nL.Cruz@tudelft.nl \n1. Intro Class\nSustainable Software Engineering\u2028\nCS4575\nSustainableSE 2025\nEnrique Barba Roque \nE.BarbaRoque@tudelft.nl\n\n1. Intro to Sustainable SE \n2. Intro to the course\n2\n\nof the electricity consumed worldwide \nby 2040 will stem from ICT\n14%\n\n4\nhttps://xkcd.com/1007/\n\nBuzz words\n• Eco-friendly \n• Climate change, action, adaption \n• Energy efficiency \n• Environmental-responsible \n• Carbon-neutral; Climate-neutral; Net zero \n• Carbon-offsetting \n• Carbon-free \n• Clean technology \n• E-waste\n5\n\nhttps://www.menti.com/uns9d89kzn\nWhat is Sustainable \nSoftware Engineering?\n?\n6\n\nSustainable Software \nEngineering is…\n7\n…the discipline that studies the process of creating software systems that are able \nto create value in the long term without hindering its surrounding environment.\n\n8\nEconomical\nSocial\nTechnical\nIndividual\nEnvironmental\nSustainable\nSoftware\nEngineering\n⭐\nTechnical\u2028\n⚙\nEconomical\u2028\n💰\nSocial\u2028\n👩💼👨💼👩💼👩💼\nIndividual\u2028\n👩💻\nEnvironmental\u2028\n🌱\nSustainable\u2028\nSoftware \nEngineering\n\nEconomical\n• Focused on assets, capital and added value\u2028\n(wealth creation, prosperity, profitability, capital \ninvestment, income, etc.) \n• Nr of customers  \n• Man-day-rate estimate \n• Next round of funding \n• Meet requirements in the contract\n9\n\nTechnical\n• Longevity of information, systems, and infrastructure and their \nadequate evolution with changing surrounding conditions. \n• Examples: \n• Technical Debt \n• Does it scale? \n• Software testing \n• Bus-factor \n• Data integrity \n• Innovation \n• …\n10\n\nIndividual\n• Well-being of the individuals in an organisation.\u2028\nNote that it also includes how well individuals interact \nwith each other within the org.']","[""['Individual\\n• Well-being of the individuals in an organisation.\\u2028\\nNote that it also includes how well individuals interact \\nwith each other within the org.\\n• Examples:\\n• mental and physical well-being\\n• self-respect\\n• education/skills \\n• career development\\n• …\\n11']""]","Career development plays a significant role in individual well-being within an organization. It contributes to the mental and physical well-being of individuals by providing them with opportunities for growth, skill enhancement, and self-respect. By focusing on career development, organizations can help individuals feel valued and motivated, which in turn improves their interaction with others within the organization. This fosters a positive work environment and enhances overall individual well-being.",Career development is a key component of individual well-being within an organization.,0.9999999999,1.0,0.3333333333333333,0.44,0.0,0.989111630254786
What role does the social aspect play in software engineering?,"['Carolin Brandt \nC.E.Brandt@tudelft.nl \nLuís Cruz \nL.Cruz@tudelft.nl \n1. Intro Class\nSustainable Software Engineering\u2028\nCS4575\nSustainableSE 2025\nEnrique Barba Roque \nE.BarbaRoque@tudelft.nl\n\n1. Intro to Sustainable SE \n2. Intro to the course\n2\n\nof the electricity consumed worldwide \nby 2040 will stem from ICT\n14%\n\n4\nhttps://xkcd.com/1007/\n\nBuzz words\n• Eco-friendly \n• Climate change, action, adaption \n• Energy efficiency \n• Environmental-responsible \n• Carbon-neutral; Climate-neutral; Net zero \n• Carbon-offsetting \n• Carbon-free \n• Clean technology \n• E-waste\n5\n\nhttps://www.menti.com/uns9d89kzn\nWhat is Sustainable \nSoftware Engineering?\n?\n6\n\nSustainable Software \nEngineering is…\n7\n…the discipline that studies the process of creating software systems that are able \nto create value in the long term without hindering its surrounding environment.\n\n8\nEconomical\nSocial\nTechnical\nIndividual\nEnvironmental\nSustainable\nSoftware\nEngineering\n⭐\nTechnical\u2028\n⚙\nEconomical\u2028\n💰\nSocial\u2028\n👩💼👨💼👩💼👩💼\nIndividual\u2028\n👩💻\nEnvironmental\u2028\n🌱\nSustainable\u2028\nSoftware \nEngineering\n\nEconomical\n• Focused on assets, capital and added value\u2028\n(wealth creation, prosperity, profitability, capital \ninvestment, income, etc.) \n• Nr of customers  \n• Man-day-rate estimate \n• Next round of funding \n• Meet requirements in the contract\n9\n\nTechnical\n• Longevity of information, systems, and infrastructure and their \nadequate evolution with changing surrounding conditions. \n• Examples: \n• Technical Debt \n• Does it scale? \n• Software testing \n• Bus-factor \n• Data integrity \n• Innovation \n• …\n10\n\nIndividual\n• Well-being of the individuals in an organisation.\u2028\nNote that it also includes how well individuals interact \nwith each other within the org.', 'Carbon-free giants\n• Google, Microsoft, Meta/Facebook want to be carbon free by 2030 \n• Carbon free is different from carbon neutral \n• Green IT experts are needed to meet these goals\n23\n\n\nRebound effect*\n• Energy consumption decreases ↓↓ but demand also increases ↑↑. \n• *a.k.a. Jevons Paradox in economics; Downs–Thomson paradox in\xa0mobility.\nEnergy per prompt\nPrompts\n100\n80\n30\n38\nChat \nGPT\n“Energy-efficient” \nChat GPT\n0\n\nIs sustainability an\u2028\nethical issue?\n• Climate change is more likely to affect the \npoorest countries. \n• Less financial resources to adapt \n• Climate-impact does not necessarily affect \npolluting countries. \n• Poorest countries have contributed less to the \nclimate change. \n• We need to figure out how to do more using \nless resources.\n26\n\nMorality ≠ Moralising\n• We should not use climate action as a \nshaming weapon \n• Climate action should be agnostic of political \nviews, ideology, social status, etc. \n• We need everyone to take action!\n27\n\nWhy?\n• Throughout your career you might: \n• Design/maintain/contract data centers \n• Set up operations/devops \n• Develop AI for IoT devices \n• Be the next CEO/CTO of a software company \n• Sustainability can be your main role: \n• Green Software Developer \n• Sustainability Consultant \n• Green Advocate  \n• Founder of a Green Tech startup (B2B?)\n28\n\nFormat of classes\n• In-person. \n• Collegerama recordings. \n• Lectures and Labs. \n• Guest lectures. \n• Steering meetings (after week 5, new schedule)\n29\n\nFormat of classes\n• There’s no exam in this course. It’s more important that we learn how to \ndiscuss this topic and come up with new ideas than learning all the theory. \nCritical thinking over checkboxes. \n• Mix of content and discussion \n• Ultimately, the lectures aim to give you food for thought and the necessary \nknowledge to excel in Project 2.']","[""['8\\nEconomical\\nSocial\\nTechnical\\nIndividual\\nEnvironmental\\nSustainable\\nSoftware\\nEngineering\\n⭐\\nTechnical\\u2028\\n⚙\\nEconomical\\u2028\\n💰\\nSocial\\u2028\\n👩💼\\n👨💼\\n👩💼\\n👩💼\\nIndividual\\u2028\\n👩💻\\nEnvironmental\\u2028\\n🌱\\nSustainable\\u2028\\nSoftware \\nEngineering']""]","The social aspect in software engineering focuses on the well-being of individuals within an organization and how well they interact with each other. It emphasizes creating a work environment that supports collaboration and positive interactions among team members, which is crucial for the success of software projects. This aspect is part of the broader discipline of Sustainable Software Engineering, which aims to create long-term value without harming the surrounding environment.","The social aspect is one of the key dimensions in software engineering, alongside economical, technical, individual, environmental, and sustainable aspects.",0.9999999999,0.0,0.7142857142857143,0.29,0.0,0.9618082755232424
Who is E.BarbaRoque@tudelft.nl?,"['36\n\nGreen TU\n• https://www.tudelft.nl/sustainability/get-\ninvolved/greentu \n• Student organisation at the TU Delft devoted \nto stimulating sustainability in education, \nresearch, university operations and \ncommunity engagement.\n37\n\nClimateAction.tech\n• Great community for outreach \n• Based on Slack  \n• Regular meetings, talks, social events \n• You can join as a volunteer or simply to \nconnect to other techies \n• Also good to for job hunting on green tech.\n38\n\nClimateAction.tech\n39\n\nBranch magazine\n• Stay up-to-date on sustainable tech \n• Creativity booster \n• Carbon-aware UI \n• https://branch.climateaction.tech 🔗\n40\n\nThis is the fourth edition\n• Any feedback is welcome! Email or DM!\n41\n\n42\n\nCarolin Brandt \nC.E.Brandt@tudelft.nl \nLuís Cruz \nL.Cruz@tudelft.nl \n1. Intro Class\nSustainable Software Engineering\u2028\nCS4575\nSustainableSE 2025\nEnrique Barba Roque \nE.BarbaRoque@tudelft.nl', 'Revisiting Research Questions\n• Can we compare the energy efficiency of software languages?  \n• Is the faster language always the most energy efficient? \n• How does memory usage relate to energy consumption?  \n• Can we automatically decide what is the best programming language considering \nenergy, time, and memory usage?  \n• How do the results of our energy consumption analysis of programming \nlanguages gathered from rigorous performance benchmarking solutions \ncompare to results of average day-to-day solutions?  \n• What would happen if we cherry picked the tasks?\u2028\n44\n\n\nLuís Cruz \nL.Cruz@tudelft.nl \n3. Scientific Guide for Reliable \nEnergy Experiments\nSustainable Software Engineering\u2028\nCS4575\nSustainableSE 2025\nCarolin Brandt \nC.E.Brandt@tudelft.nl \nEnrique Barba Roque \nE.BarbaRoque@tudelft.nl']","[""['Carolin Brandt \\nC.E.Brandt@tudelft.nl \\nLuís Cruz \\nL.Cruz@tudelft.nl \\n1. Intro ClassSustainable Software Engineering\\u2028\\nCS4575\\nSustainableSE 2025\\nEnrique Barba Roque \\nE.BarbaRoque@tudelft.nl']""]","E.BarbaRoque@tudelft.nl is Enrique Barba Roque, who is associated with the Sustainable Software Engineering course (CS4575) at TU Delft.",E.BarbaRoque@tudelft.nl is Enrique Barba Roque.,0.99999999995,1.0,1.0,0.67,0.999999995,0.902131257820844
Why are limited power resorces important?,"['• Examples: \n• Technical Debt \n• Does it scale? \n• Software testing \n• Bus-factor \n• Data integrity \n• Innovation \n• …\n10\n\nIndividual\n• Well-being of the individuals in an organisation.\u2028\nNote that it also includes how well individuals interact \nwith each other within the org. \n• Examples: \n• mental and physical well-being \n• self-respect \n• education/skills \n• career development \n• …\n11\n\nSocial\n• concerned with societal communities (groups of people, \norganisations) and the factors that erode trust in society. \n• Examples: \n• Social equity \n• Justice \n• Employment \n• Democracy \n• … \n• Also includes compliance with policies and regulations \n12\n\nEnvironmental Sustainability\n• the branch of Software Engineering that studies \nthe development of software that has minimal \nimpact in our planet throughout its whole \nlifecycle. \n• Looking at software at different levels: \n• Developing, Using, Serving, … \n• Also includes e-waste. \n• Almost identical to Green Software. (?)\n13\nBordallo II\n\nGreen Software\n• Sustainability and energy efficiency. \n• Building energy-efficient software is important also from a \ntechnical sustainability POV. \n• Smartphones, smart wearables, IoT devices, etc. run on limited \npower resources. \n• Developing software to these devices require energy-efficiency \ntesting and improvement. \n• It also leads to environmental sustainability (e.g., less battery \ncycles) \n• Important for UX (e.g., no need to walk around with power banks)\n14\n\nhttps://www.menti.com/uns9d89kzn\nWhat is the sustainability \ndimension you are most \ninterested in?\n?\n15\n\nEconomical sustainability tops the environment\n• In general, a software project will not survive if it’s not economical \nsustainable \n• Yet, a project can survive even if it is not environmental sustainable \n• The mindset is changing! \n• Software consumers have started to worry about the climate impact \nof their behaviour as users. \n• Being environmentally sustainable is now an important competitive \nfactor \n• Marketing teams are already using all eco-friendly labels. Technical \nteams are not there yet, though. \n• It’s easier said than done!\n$\n16\n\nGreen Washing\n• Deceptively use marketing techniques to \nclaim being eco-friendly.', '• Choose your metrics wisely ;)\n26\n\n• Carbon emissions ✅ \n• How do we go from energy consumption to carbon consumption?\n27\n\nCarbon intensity\n• How much carbon is emitted per kWh of electricity consumed. \n• The common unit: \n 🤷 \n• E.g.,  gas-based power plants emit less carbon than coal-based plants. \n• The power grid is a mix between different sources of electricity – different \nlocations have different carbon intensity.\ngCO2eq/kWh\n28\n\nhttps://app.electricitymaps.com/map\n\nBy Asim Hussain: https://principles.green/principles/carbon-intensity/\n📝 Reducing software energy consumption can help reduce the carbon intensity. Why?\n\nOne would expect zero carbon intensity from solar-\npanels or wind farms, but that’s not the case.\n⚠\n?\n\nMarginal Power Plant\n• Renewable-based power plants cannot adapt to demand. \n• When demand is higher than the existing power in the electricity grid, we \nneed a power plant that is able to scale up to that demand. \n• This is usually done by fossil-based power plants. They are called the \nmarginal power plants. \n• The problem is that marginal power plants do not scale down to zero. \n• There is always a minimum carbon that needs to be emitted, even if there is \na lot of renewable energy in the grid.\n32\n\nBy Asim Hussain: https://principles.green/principles/carbon-intensity/\nHow could we fix this?\nWhat’s the problem here?\n\nMarginal Carbon Intensity\n• Increase or decrease in carbon emissions in the electrical grid, in response \nto an infinitesimal increase/decrease in power demand/supply.\n\nFrom: “Literature Review: On the effectiveness of a Marginal Carbon Intensity Signal “\n\nWhy is marginal carbon intensity \nrelevant for software?\n• Tip: consider a task scheduler in a datacenter.\n\nRecap\n• Power \n• Energy \n• Average Power \n• Energy Delay Product \n• Electric charge (battery capacity) \n• Carbon dioxide equivalent (carbon emissions) \n• 100-global-warming potential \n• Carbon Intensity \n• Marginal Carbon Intensity\n37\n?\n\nFurther Reading\n• Blog post on energy units:\u2028\nhttps://luiscruz.github.io/2023/05/13/energy-units.html \n38\n?']","[""['Green Software\\n• Sustainability and energy eﬃciency.\\n• Building energy-eﬃcient software is important also from a \\ntechnical sustainability POV.\\n• Smartphones, smart wearables, IoT devices, etc. run on limited \\npower resources.\\n• Developing software to these devices require energy-eﬃciency \\ntesting and improvement.\\n• It also leads to environmental sustainability (e.g., less battery \\ncycles)\\n• Important for UX (e.g., no need to walk around with power banks)\\n14']""]","Limited power resources are important because many modern devices, such as smartphones, smart wearables, and IoT devices, operate on these constrained power supplies. Developing energy-efficient software for these devices is crucial to ensure they function effectively without frequent recharging, which enhances user experience by reducing the need for power banks and extending battery life. Additionally, energy-efficient software contributes to environmental sustainability by reducing the number of battery cycles and overall energy consumption, which in turn can help lower carbon emissions.","Smartphones, smart wearables, IoT devices, etc. run on limited power resources.",0.9999999999,1.0,1.0,0.33,0.49999999875,0.9648308873782508
Why are the poorest countries most affected by climate change?,"['Carbon-free giants\n• Google, Microsoft, Meta/Facebook want to be carbon free by 2030 \n• Carbon free is different from carbon neutral \n• Green IT experts are needed to meet these goals\n23\n\n\nRebound effect*\n• Energy consumption decreases ↓↓ but demand also increases ↑↑. \n• *a.k.a. Jevons Paradox in economics; Downs–Thomson paradox in\xa0mobility.\nEnergy per prompt\nPrompts\n100\n80\n30\n38\nChat \nGPT\n“Energy-efficient” \nChat GPT\n0\n\nIs sustainability an\u2028\nethical issue?\n• Climate change is more likely to affect the \npoorest countries. \n• Less financial resources to adapt \n• Climate-impact does not necessarily affect \npolluting countries. \n• Poorest countries have contributed less to the \nclimate change. \n• We need to figure out how to do more using \nless resources.\n26\n\nMorality ≠ Moralising\n• We should not use climate action as a \nshaming weapon \n• Climate action should be agnostic of political \nviews, ideology, social status, etc. \n• We need everyone to take action!\n27\n\nWhy?\n• Throughout your career you might: \n• Design/maintain/contract data centers \n• Set up operations/devops \n• Develop AI for IoT devices \n• Be the next CEO/CTO of a software company \n• Sustainability can be your main role: \n• Green Software Developer \n• Sustainability Consultant \n• Green Advocate  \n• Founder of a Green Tech startup (B2B?)\n28\n\nFormat of classes\n• In-person. \n• Collegerama recordings. \n• Lectures and Labs. \n• Guest lectures. \n• Steering meetings (after week 5, new schedule)\n29\n\nFormat of classes\n• There’s no exam in this course. It’s more important that we learn how to \ndiscuss this topic and come up with new ideas than learning all the theory. \nCritical thinking over checkboxes. \n• Mix of content and discussion \n• Ultimately, the lectures aim to give you food for thought and the necessary \nknowledge to excel in Project 2.', '• Software consumers have started to worry about the climate impact \nof their behaviour as users. \n• Being environmentally sustainable is now an important competitive \nfactor \n• Marketing teams are already using all eco-friendly labels. Technical \nteams are not there yet, though. \n• It’s easier said than done!\n$\n16\n\nGreen Washing\n• Deceptively use marketing techniques to \nclaim being eco-friendly. \n• Opting for green-coloured designs. \n• Red/orange is usually perceived as \ntasty. \n• Green is perceived as eco-friendly. \n• The VW case. (?)\n17\n\nThe VW scandal\nGreenwashing\n• Used software to cheat on vehicle emissions \ntests. \n• The vehicle’s software could detect whether they \nwere being tested, changing the performance \naccordingly to improve results. \n• Affected 11M cars worldwide, 8M in Europe.\n18\n\nHow can we drive sustainability \nin the SE industry?\n\nGreen Procurement\n• Customers decide on providers that share their values \n• This is currently the main trigger reason why organisations \nworry about Sustainability and Green Software. \n• Examples of green procurement: \n• Customers that only buy green services/products \n• Companies that only use green providers \n• Developers that only work for green companies \n• Green procurement makes environmental sustainability \nessential for economical sustainability.\n20\n\nSustainability via compliance\n• EU wants to be carbon neutral by 2030 \n• This also affects the ICT sector. Estimated to impact \n14% of the global carbon footprint by 2040. \n• Some initiatives are already being negotiated. \n• Extending the smartphone lifetime to 7 years. \n• Right-to-repair movement. https://repair.eu \n• Making IT services relying on clean energy more \naccessible (e.g., less taxes).\n21\n\nSoftware for Sustainability \n• We are not covering it in this course.\n\nCarbon-free giants\n• Google, Microsoft, Meta/Facebook want to be carbon free by 2030 \n• Carbon free is different from carbon neutral \n• Green IT experts are needed to meet these goals\n23\n\n\nRebound effect*\n• Energy consumption decreases ↓↓ but demand also increases ↑↑. \n• *a.k.a. Jevons Paradox in economics; Downs–Thomson paradox in\xa0mobility.']","[""['Is sustainability an\\u2028\\nethical issue?\\n• Climate change is more likely to aﬀect the \\npoorest countries.\\n• Less ﬁnancial resources to adapt\\n• Climate-impact does not necessarily aﬀect \\npolluting countries.\\n• Poorest countries have contributed less to the \\nclimate change.\\n• We need to ﬁgure out how to do more using \\nless resources.\\n26']""]","The poorest countries are most affected by climate change because they have less financial resources to adapt to its impacts. Additionally, climate change does not necessarily affect the countries that are the biggest polluters, and the poorest countries have contributed less to climate change. This creates a situation where those least responsible for the problem are the most vulnerable to its effects.",The poorest countries are more likely to be affected by climate change because they have less financial resources to adapt and have contributed less to climate change.,0.9999999999,1.0,1.0,0.89,0.0,1.0000000000000004
Why developers work for green companies?,"['• Software consumers have started to worry about the climate impact \nof their behaviour as users. \n• Being environmentally sustainable is now an important competitive \nfactor \n• Marketing teams are already using all eco-friendly labels. Technical \nteams are not there yet, though. \n• It’s easier said than done!\n$\n16\n\nGreen Washing\n• Deceptively use marketing techniques to \nclaim being eco-friendly. \n• Opting for green-coloured designs. \n• Red/orange is usually perceived as \ntasty. \n• Green is perceived as eco-friendly. \n• The VW case. (?)\n17\n\nThe VW scandal\nGreenwashing\n• Used software to cheat on vehicle emissions \ntests. \n• The vehicle’s software could detect whether they \nwere being tested, changing the performance \naccordingly to improve results. \n• Affected 11M cars worldwide, 8M in Europe.\n18\n\nHow can we drive sustainability \nin the SE industry?\n\nGreen Procurement\n• Customers decide on providers that share their values \n• This is currently the main trigger reason why organisations \nworry about Sustainability and Green Software. \n• Examples of green procurement: \n• Customers that only buy green services/products \n• Companies that only use green providers \n• Developers that only work for green companies \n• Green procurement makes environmental sustainability \nessential for economical sustainability.\n20\n\nSustainability via compliance\n• EU wants to be carbon neutral by 2030 \n• This also affects the ICT sector. Estimated to impact \n14% of the global carbon footprint by 2040. \n• Some initiatives are already being negotiated. \n• Extending the smartphone lifetime to 7 years. \n• Right-to-repair movement. https://repair.eu \n• Making IT services relying on clean energy more \naccessible (e.g., less taxes).\n21\n\nSoftware for Sustainability \n• We are not covering it in this course.\n\nCarbon-free giants\n• Google, Microsoft, Meta/Facebook want to be carbon free by 2030 \n• Carbon free is different from carbon neutral \n• Green IT experts are needed to meet these goals\n23\n\n\nRebound effect*\n• Energy consumption decreases ↓↓ but demand also increases ↑↑. \n• *a.k.a. Jevons Paradox in economics; Downs–Thomson paradox in\xa0mobility.', 'Carbon-free giants\n• Google, Microsoft, Meta/Facebook want to be carbon free by 2030 \n• Carbon free is different from carbon neutral \n• Green IT experts are needed to meet these goals\n23\n\n\nRebound effect*\n• Energy consumption decreases ↓↓ but demand also increases ↑↑. \n• *a.k.a. Jevons Paradox in economics; Downs–Thomson paradox in\xa0mobility.\nEnergy per prompt\nPrompts\n100\n80\n30\n38\nChat \nGPT\n“Energy-efficient” \nChat GPT\n0\n\nIs sustainability an\u2028\nethical issue?\n• Climate change is more likely to affect the \npoorest countries. \n• Less financial resources to adapt \n• Climate-impact does not necessarily affect \npolluting countries. \n• Poorest countries have contributed less to the \nclimate change. \n• We need to figure out how to do more using \nless resources.\n26\n\nMorality ≠ Moralising\n• We should not use climate action as a \nshaming weapon \n• Climate action should be agnostic of political \nviews, ideology, social status, etc. \n• We need everyone to take action!\n27\n\nWhy?\n• Throughout your career you might: \n• Design/maintain/contract data centers \n• Set up operations/devops \n• Develop AI for IoT devices \n• Be the next CEO/CTO of a software company \n• Sustainability can be your main role: \n• Green Software Developer \n• Sustainability Consultant \n• Green Advocate  \n• Founder of a Green Tech startup (B2B?)\n28\n\nFormat of classes\n• In-person. \n• Collegerama recordings. \n• Lectures and Labs. \n• Guest lectures. \n• Steering meetings (after week 5, new schedule)\n29\n\nFormat of classes\n• There’s no exam in this course. It’s more important that we learn how to \ndiscuss this topic and come up with new ideas than learning all the theory. \nCritical thinking over checkboxes. \n• Mix of content and discussion \n• Ultimately, the lectures aim to give you food for thought and the necessary \nknowledge to excel in Project 2.']","[""['Green Procurement\\n• Customers decide on providers that share their values\\n• This is currently the main trigger reason why organisations \\nworry about Sustainability and Green Software.\\n• Examples of green procurement:\\n• Customers that only buy green services/products\\n• Companies that only use green providers\\n• Developers that only work for green companies\\n• Green procurement makes environmental sustainability \\nessential for economical sustainability.\\n20']""]","Developers may choose to work for green companies because of the alignment with their personal values and the growing importance of environmental sustainability. Green procurement, where customers and companies prefer to engage with providers that share their sustainability values, is a significant factor. This makes environmental sustainability essential for economic sustainability, and developers may be motivated to contribute to this positive impact. Additionally, working for green companies can offer roles focused on sustainability, such as Green Software Developer or Sustainability Consultant, which can be appealing career paths for those passionate about environmental issues.",Developers work for green companies because green procurement is a main trigger for organizations to worry about sustainability and green software.,0.9999999999,1.0,0.8888888888888888,0.22,,0.9856881660074696
Why do we have a mix of content and discussion in class?,"['Carbon-free giants\n• Google, Microsoft, Meta/Facebook want to be carbon free by 2030 \n• Carbon free is different from carbon neutral \n• Green IT experts are needed to meet these goals\n23\n\n\nRebound effect*\n• Energy consumption decreases ↓↓ but demand also increases ↑↑. \n• *a.k.a. Jevons Paradox in economics; Downs–Thomson paradox in\xa0mobility.\nEnergy per prompt\nPrompts\n100\n80\n30\n38\nChat \nGPT\n“Energy-efficient” \nChat GPT\n0\n\nIs sustainability an\u2028\nethical issue?\n• Climate change is more likely to affect the \npoorest countries. \n• Less financial resources to adapt \n• Climate-impact does not necessarily affect \npolluting countries. \n• Poorest countries have contributed less to the \nclimate change. \n• We need to figure out how to do more using \nless resources.\n26\n\nMorality ≠ Moralising\n• We should not use climate action as a \nshaming weapon \n• Climate action should be agnostic of political \nviews, ideology, social status, etc. \n• We need everyone to take action!\n27\n\nWhy?\n• Throughout your career you might: \n• Design/maintain/contract data centers \n• Set up operations/devops \n• Develop AI for IoT devices \n• Be the next CEO/CTO of a software company \n• Sustainability can be your main role: \n• Green Software Developer \n• Sustainability Consultant \n• Green Advocate  \n• Founder of a Green Tech startup (B2B?)\n28\n\nFormat of classes\n• In-person. \n• Collegerama recordings. \n• Lectures and Labs. \n• Guest lectures. \n• Steering meetings (after week 5, new schedule)\n29\n\nFormat of classes\n• There’s no exam in this course. It’s more important that we learn how to \ndiscuss this topic and come up with new ideas than learning all the theory. \nCritical thinking over checkboxes. \n• Mix of content and discussion \n• Ultimately, the lectures aim to give you food for thought and the necessary \nknowledge to excel in Project 2.', '• Guest lectures. \n• Steering meetings (after week 5, new schedule)\n29\n\nFormat of classes\n• There’s no exam in this course. It’s more important that we learn how to \ndiscuss this topic and come up with new ideas than learning all the theory. \nCritical thinking over checkboxes. \n• Mix of content and discussion \n• Ultimately, the lectures aim to give you food for thought and the necessary \nknowledge to excel in Project 2. (We will talk about it later)\n30\n\nhttps://luiscruz.github.io/course_sustainableSE/\n31\nContent of the course 👇\n\n32\nhttps://mattermost.tudelft.nl/signup_user_complete/?id=1nj9tk6usjf8xmsws8wpq3s5uy&md=link&sbr=su\n\nProject 1\n• Goal: Measure the energy consumption of software applications. \n• Approach: energy measurement tools; use case testing. \n• Deliverable: blog-style report (approx. 2500 words) \n• Deadline: Week 3, Feb 28, 2025 \n• Group size: 4–5\n33\n\nProject 2\n• Goal: Create a solution/tool/technique that helps building green software. (You \ncan come up with your own idea or choose one from a list of suggestions). \n• Approach: open-source software development; literature review. \n• Deliverable: library/tool/app; paper; presentation. \n• Two deadlines:\u2028\n1. Paper and software: Week 8, April 4, 2025\u2028\n2. Presentation: Week 9, April 11, 2025 \n• Group size: 4–5\n34\n\nGuest Lectures\nNergis Tömen \nComputer Vision lab | TU Delft \nWeek 4, Wed, Mar 5, 2025\n35\n\nCommunity \nHow to get involved?\n36\n\nGreen TU\n• https://www.tudelft.nl/sustainability/get-\ninvolved/greentu \n• Student organisation at the TU Delft devoted \nto stimulating sustainability in education, \nresearch, university operations and \ncommunity engagement.']","[""['Format of classes\\n• There’s no exam in this course. It’s more important that we learn how to \\ndiscuss this topic and come up with new ideas than learning all the theory. \\nCritical thinking over checkboxes.\\n• Mix of content and discussion\\n• Ultimately, the lectures aim to give you food for thought and the necessary \\nknowledge to excel in Project 2. (We will talk about it later)\\n30']""]","The mix of content and discussion in class is designed to prioritize critical thinking over simply learning theory. This approach aims to provide students with food for thought and the necessary knowledge to excel in projects, encouraging them to discuss topics and come up with new ideas rather than just checking off theoretical knowledge.","The mix of content and discussion in class is designed to help students learn how to discuss topics, come up with new ideas, and think critically, rather than just learning all the theory. This approach aims to prepare students for Project 2 by providing them with the necessary knowledge and encouraging critical thinking.",0.99999999995,1.0,1.0,0.67,0.0,0.854613852348547
Why does economical sustainability prioritzes the environment in software projects?,"['• Examples: \n• Technical Debt \n• Does it scale? \n• Software testing \n• Bus-factor \n• Data integrity \n• Innovation \n• …\n10\n\nIndividual\n• Well-being of the individuals in an organisation.\u2028\nNote that it also includes how well individuals interact \nwith each other within the org. \n• Examples: \n• mental and physical well-being \n• self-respect \n• education/skills \n• career development \n• …\n11\n\nSocial\n• concerned with societal communities (groups of people, \norganisations) and the factors that erode trust in society. \n• Examples: \n• Social equity \n• Justice \n• Employment \n• Democracy \n• … \n• Also includes compliance with policies and regulations \n12\n\nEnvironmental Sustainability\n• the branch of Software Engineering that studies \nthe development of software that has minimal \nimpact in our planet throughout its whole \nlifecycle. \n• Looking at software at different levels: \n• Developing, Using, Serving, … \n• Also includes e-waste. \n• Almost identical to Green Software. (?)\n13\nBordallo II\n\nGreen Software\n• Sustainability and energy efficiency. \n• Building energy-efficient software is important also from a \ntechnical sustainability POV. \n• Smartphones, smart wearables, IoT devices, etc. run on limited \npower resources. \n• Developing software to these devices require energy-efficiency \ntesting and improvement. \n• It also leads to environmental sustainability (e.g., less battery \ncycles) \n• Important for UX (e.g., no need to walk around with power banks)\n14\n\nhttps://www.menti.com/uns9d89kzn\nWhat is the sustainability \ndimension you are most \ninterested in?\n?\n15\n\nEconomical sustainability tops the environment\n• In general, a software project will not survive if it’s not economical \nsustainable \n• Yet, a project can survive even if it is not environmental sustainable \n• The mindset is changing! \n• Software consumers have started to worry about the climate impact \nof their behaviour as users. \n• Being environmentally sustainable is now an important competitive \nfactor \n• Marketing teams are already using all eco-friendly labels. Technical \nteams are not there yet, though. \n• It’s easier said than done!\n$\n16\n\nGreen Washing\n• Deceptively use marketing techniques to \nclaim being eco-friendly.', 'Carolin Brandt \nC.E.Brandt@tudelft.nl \nLuís Cruz \nL.Cruz@tudelft.nl \n1. Intro Class\nSustainable Software Engineering\u2028\nCS4575\nSustainableSE 2025\nEnrique Barba Roque \nE.BarbaRoque@tudelft.nl\n\n1. Intro to Sustainable SE \n2. Intro to the course\n2\n\nof the electricity consumed worldwide \nby 2040 will stem from ICT\n14%\n\n4\nhttps://xkcd.com/1007/\n\nBuzz words\n• Eco-friendly \n• Climate change, action, adaption \n• Energy efficiency \n• Environmental-responsible \n• Carbon-neutral; Climate-neutral; Net zero \n• Carbon-offsetting \n• Carbon-free \n• Clean technology \n• E-waste\n5\n\nhttps://www.menti.com/uns9d89kzn\nWhat is Sustainable \nSoftware Engineering?\n?\n6\n\nSustainable Software \nEngineering is…\n7\n…the discipline that studies the process of creating software systems that are able \nto create value in the long term without hindering its surrounding environment.\n\n8\nEconomical\nSocial\nTechnical\nIndividual\nEnvironmental\nSustainable\nSoftware\nEngineering\n⭐\nTechnical\u2028\n⚙\nEconomical\u2028\n💰\nSocial\u2028\n👩💼👨💼👩💼👩💼\nIndividual\u2028\n👩💻\nEnvironmental\u2028\n🌱\nSustainable\u2028\nSoftware \nEngineering\n\nEconomical\n• Focused on assets, capital and added value\u2028\n(wealth creation, prosperity, profitability, capital \ninvestment, income, etc.) \n• Nr of customers  \n• Man-day-rate estimate \n• Next round of funding \n• Meet requirements in the contract\n9\n\nTechnical\n• Longevity of information, systems, and infrastructure and their \nadequate evolution with changing surrounding conditions. \n• Examples: \n• Technical Debt \n• Does it scale? \n• Software testing \n• Bus-factor \n• Data integrity \n• Innovation \n• …\n10\n\nIndividual\n• Well-being of the individuals in an organisation.\u2028\nNote that it also includes how well individuals interact \nwith each other within the org.']","[""['Economical sustainability tops the environment\\n• In general, a software project will not survive if it’s not economical \\nsustainable\\n• Yet, a project can survive even if it is not environmental sustainable\\n• The mindset is changing! \\n• Software consumers have started to worry about the climate impact \\nof their behaviour as users.\\n• Being environmentally sustainable is now an important competitive \\nfactor\\n• Marketing teams are already using all eco-friendly labels. Technical \\nteams are not there yet, though.\\n• It’s easier said than done!\\n$\\n16']""]","Economical sustainability often takes precedence over environmental sustainability in software projects because a project will not survive if it is not economically sustainable. This means that the project needs to be profitable, meet contractual requirements, and attract customers and investments to continue operating. However, a project can still survive even if it is not environmentally sustainable. Despite this, the mindset is changing as software consumers become more concerned about the climate impact of their behavior, making environmental sustainability an important competitive factor. Marketing teams are already leveraging eco-friendly labels, although technical teams are not fully there yet.","Economical sustainability is crucial for the survival of software projects, while environmental sustainability, though increasingly important, is not as critical for immediate survival but is becoming a key competitive factor.",0.9999999999,1.0,0.7777777777777778,0.75,,0.9628433132396162
Why is Green Software important for computer science students?,"['• Guest lectures. \n• Steering meetings (after week 5, new schedule)\n29\n\nFormat of classes\n• There’s no exam in this course. It’s more important that we learn how to \ndiscuss this topic and come up with new ideas than learning all the theory. \nCritical thinking over checkboxes. \n• Mix of content and discussion \n• Ultimately, the lectures aim to give you food for thought and the necessary \nknowledge to excel in Project 2. (We will talk about it later)\n30\n\nhttps://luiscruz.github.io/course_sustainableSE/\n31\nContent of the course 👇\n\n32\nhttps://mattermost.tudelft.nl/signup_user_complete/?id=1nj9tk6usjf8xmsws8wpq3s5uy&md=link&sbr=su\n\nProject 1\n• Goal: Measure the energy consumption of software applications. \n• Approach: energy measurement tools; use case testing. \n• Deliverable: blog-style report (approx. 2500 words) \n• Deadline: Week 3, Feb 28, 2025 \n• Group size: 4–5\n33\n\nProject 2\n• Goal: Create a solution/tool/technique that helps building green software. (You \ncan come up with your own idea or choose one from a list of suggestions). \n• Approach: open-source software development; literature review. \n• Deliverable: library/tool/app; paper; presentation. \n• Two deadlines:\u2028\n1. Paper and software: Week 8, April 4, 2025\u2028\n2. Presentation: Week 9, April 11, 2025 \n• Group size: 4–5\n34\n\nGuest Lectures\nNergis Tömen \nComputer Vision lab | TU Delft \nWeek 4, Wed, Mar 5, 2025\n35\n\nCommunity \nHow to get involved?\n36\n\nGreen TU\n• https://www.tudelft.nl/sustainability/get-\ninvolved/greentu \n• Student organisation at the TU Delft devoted \nto stimulating sustainability in education, \nresearch, university operations and \ncommunity engagement.', '• Software consumers have started to worry about the climate impact \nof their behaviour as users. \n• Being environmentally sustainable is now an important competitive \nfactor \n• Marketing teams are already using all eco-friendly labels. Technical \nteams are not there yet, though. \n• It’s easier said than done!\n$\n16\n\nGreen Washing\n• Deceptively use marketing techniques to \nclaim being eco-friendly. \n• Opting for green-coloured designs. \n• Red/orange is usually perceived as \ntasty. \n• Green is perceived as eco-friendly. \n• The VW case. (?)\n17\n\nThe VW scandal\nGreenwashing\n• Used software to cheat on vehicle emissions \ntests. \n• The vehicle’s software could detect whether they \nwere being tested, changing the performance \naccordingly to improve results. \n• Affected 11M cars worldwide, 8M in Europe.\n18\n\nHow can we drive sustainability \nin the SE industry?\n\nGreen Procurement\n• Customers decide on providers that share their values \n• This is currently the main trigger reason why organisations \nworry about Sustainability and Green Software. \n• Examples of green procurement: \n• Customers that only buy green services/products \n• Companies that only use green providers \n• Developers that only work for green companies \n• Green procurement makes environmental sustainability \nessential for economical sustainability.\n20\n\nSustainability via compliance\n• EU wants to be carbon neutral by 2030 \n• This also affects the ICT sector. Estimated to impact \n14% of the global carbon footprint by 2040. \n• Some initiatives are already being negotiated. \n• Extending the smartphone lifetime to 7 years. \n• Right-to-repair movement. https://repair.eu \n• Making IT services relying on clean energy more \naccessible (e.g., less taxes).\n21\n\nSoftware for Sustainability \n• We are not covering it in this course.\n\nCarbon-free giants\n• Google, Microsoft, Meta/Facebook want to be carbon free by 2030 \n• Carbon free is different from carbon neutral \n• Green IT experts are needed to meet these goals\n23\n\n\nRebound effect*\n• Energy consumption decreases ↓↓ but demand also increases ↑↑. \n• *a.k.a. Jevons Paradox in economics; Downs–Thomson paradox in\xa0mobility.']","[""['Green Software\\n• Sustainability and energy eﬃciency.\\n• Building energy-eﬃcient software is important also from a \\ntechnical sustainability POV.\\n• Smartphones, smart wearables, IoT devices, etc. run on limited \\npower resources.\\n• Developing software to these devices require energy-eﬃciency \\ntesting and improvement.\\n• It also leads to environmental sustainability (e.g., less battery \\ncycles)\\n• Important for UX (e.g., no need to walk around with power banks)\\n14']""]","Green Software is important for computer science students because it aligns with the growing concern about the climate impact of software usage and the demand for environmentally sustainable practices. As sustainability becomes a competitive factor, understanding how to develop and implement green software can enhance a student's career prospects. Additionally, green procurement practices are making environmental sustainability essential for economic sustainability, which means that organizations increasingly value software solutions that are eco-friendly. Therefore, learning about Green Software prepares students to meet industry demands and contribute to a more sustainable future.","Green Software is important because it focuses on sustainability and energy efficiency, which is crucial for developing software for devices with limited power resources. It also contributes to environmental sustainability and improves user experience.",0.0,0.5,0.9,0.31,0.0,0.9999999999999994
Why is green perceived as eco-friendly?,"['• Software consumers have started to worry about the climate impact \nof their behaviour as users. \n• Being environmentally sustainable is now an important competitive \nfactor \n• Marketing teams are already using all eco-friendly labels. Technical \nteams are not there yet, though. \n• It’s easier said than done!\n$\n16\n\nGreen Washing\n• Deceptively use marketing techniques to \nclaim being eco-friendly. \n• Opting for green-coloured designs. \n• Red/orange is usually perceived as \ntasty. \n• Green is perceived as eco-friendly. \n• The VW case. (?)\n17\n\nThe VW scandal\nGreenwashing\n• Used software to cheat on vehicle emissions \ntests. \n• The vehicle’s software could detect whether they \nwere being tested, changing the performance \naccordingly to improve results. \n• Affected 11M cars worldwide, 8M in Europe.\n18\n\nHow can we drive sustainability \nin the SE industry?\n\nGreen Procurement\n• Customers decide on providers that share their values \n• This is currently the main trigger reason why organisations \nworry about Sustainability and Green Software. \n• Examples of green procurement: \n• Customers that only buy green services/products \n• Companies that only use green providers \n• Developers that only work for green companies \n• Green procurement makes environmental sustainability \nessential for economical sustainability.\n20\n\nSustainability via compliance\n• EU wants to be carbon neutral by 2030 \n• This also affects the ICT sector. Estimated to impact \n14% of the global carbon footprint by 2040. \n• Some initiatives are already being negotiated. \n• Extending the smartphone lifetime to 7 years. \n• Right-to-repair movement. https://repair.eu \n• Making IT services relying on clean energy more \naccessible (e.g., less taxes).\n21\n\nSoftware for Sustainability \n• We are not covering it in this course.\n\nCarbon-free giants\n• Google, Microsoft, Meta/Facebook want to be carbon free by 2030 \n• Carbon free is different from carbon neutral \n• Green IT experts are needed to meet these goals\n23\n\n\nRebound effect*\n• Energy consumption decreases ↓↓ but demand also increases ↑↑. \n• *a.k.a. Jevons Paradox in economics; Downs–Thomson paradox in\xa0mobility.', '• Examples: \n• Technical Debt \n• Does it scale? \n• Software testing \n• Bus-factor \n• Data integrity \n• Innovation \n• …\n10\n\nIndividual\n• Well-being of the individuals in an organisation.\u2028\nNote that it also includes how well individuals interact \nwith each other within the org. \n• Examples: \n• mental and physical well-being \n• self-respect \n• education/skills \n• career development \n• …\n11\n\nSocial\n• concerned with societal communities (groups of people, \norganisations) and the factors that erode trust in society. \n• Examples: \n• Social equity \n• Justice \n• Employment \n• Democracy \n• … \n• Also includes compliance with policies and regulations \n12\n\nEnvironmental Sustainability\n• the branch of Software Engineering that studies \nthe development of software that has minimal \nimpact in our planet throughout its whole \nlifecycle. \n• Looking at software at different levels: \n• Developing, Using, Serving, … \n• Also includes e-waste. \n• Almost identical to Green Software. (?)\n13\nBordallo II\n\nGreen Software\n• Sustainability and energy efficiency. \n• Building energy-efficient software is important also from a \ntechnical sustainability POV. \n• Smartphones, smart wearables, IoT devices, etc. run on limited \npower resources. \n• Developing software to these devices require energy-efficiency \ntesting and improvement. \n• It also leads to environmental sustainability (e.g., less battery \ncycles) \n• Important for UX (e.g., no need to walk around with power banks)\n14\n\nhttps://www.menti.com/uns9d89kzn\nWhat is the sustainability \ndimension you are most \ninterested in?\n?\n15\n\nEconomical sustainability tops the environment\n• In general, a software project will not survive if it’s not economical \nsustainable \n• Yet, a project can survive even if it is not environmental sustainable \n• The mindset is changing! \n• Software consumers have started to worry about the climate impact \nof their behaviour as users. \n• Being environmentally sustainable is now an important competitive \nfactor \n• Marketing teams are already using all eco-friendly labels. Technical \nteams are not there yet, though. \n• It’s easier said than done!\n$\n16\n\nGreen Washing\n• Deceptively use marketing techniques to \nclaim being eco-friendly.']","[""['Green Washing\\n• Deceptively use marketing techniques to \\nclaim being eco-friendly.\\n• Opting for green-coloured designs.\\n• Red/orange is usually perceived as \\ntasty.\\n• Green is perceived as eco-friendly.\\n• The VW case. (?)\\n17']""]","Green is perceived as eco-friendly because it is often associated with nature, plants, and the environment. This association makes it a common choice for marketing techniques that aim to convey eco-friendliness, as seen in the practice of greenwashing, where companies deceptively use green-colored designs to claim being environmentally friendly.",Green is perceived as eco-friendly.,0.99999999995,1.0,0.5,0.0,,0.9977165088105816
Why is it important for software to have minimal impact on the environment?,"['• Examples: \n• Technical Debt \n• Does it scale? \n• Software testing \n• Bus-factor \n• Data integrity \n• Innovation \n• …\n10\n\nIndividual\n• Well-being of the individuals in an organisation.\u2028\nNote that it also includes how well individuals interact \nwith each other within the org. \n• Examples: \n• mental and physical well-being \n• self-respect \n• education/skills \n• career development \n• …\n11\n\nSocial\n• concerned with societal communities (groups of people, \norganisations) and the factors that erode trust in society. \n• Examples: \n• Social equity \n• Justice \n• Employment \n• Democracy \n• … \n• Also includes compliance with policies and regulations \n12\n\nEnvironmental Sustainability\n• the branch of Software Engineering that studies \nthe development of software that has minimal \nimpact in our planet throughout its whole \nlifecycle. \n• Looking at software at different levels: \n• Developing, Using, Serving, … \n• Also includes e-waste. \n• Almost identical to Green Software. (?)\n13\nBordallo II\n\nGreen Software\n• Sustainability and energy efficiency. \n• Building energy-efficient software is important also from a \ntechnical sustainability POV. \n• Smartphones, smart wearables, IoT devices, etc. run on limited \npower resources. \n• Developing software to these devices require energy-efficiency \ntesting and improvement. \n• It also leads to environmental sustainability (e.g., less battery \ncycles) \n• Important for UX (e.g., no need to walk around with power banks)\n14\n\nhttps://www.menti.com/uns9d89kzn\nWhat is the sustainability \ndimension you are most \ninterested in?\n?\n15\n\nEconomical sustainability tops the environment\n• In general, a software project will not survive if it’s not economical \nsustainable \n• Yet, a project can survive even if it is not environmental sustainable \n• The mindset is changing! \n• Software consumers have started to worry about the climate impact \nof their behaviour as users. \n• Being environmentally sustainable is now an important competitive \nfactor \n• Marketing teams are already using all eco-friendly labels. Technical \nteams are not there yet, though. \n• It’s easier said than done!\n$\n16\n\nGreen Washing\n• Deceptively use marketing techniques to \nclaim being eco-friendly.', '• Software consumers have started to worry about the climate impact \nof their behaviour as users. \n• Being environmentally sustainable is now an important competitive \nfactor \n• Marketing teams are already using all eco-friendly labels. Technical \nteams are not there yet, though. \n• It’s easier said than done!\n$\n16\n\nGreen Washing\n• Deceptively use marketing techniques to \nclaim being eco-friendly. \n• Opting for green-coloured designs. \n• Red/orange is usually perceived as \ntasty. \n• Green is perceived as eco-friendly. \n• The VW case. (?)\n17\n\nThe VW scandal\nGreenwashing\n• Used software to cheat on vehicle emissions \ntests. \n• The vehicle’s software could detect whether they \nwere being tested, changing the performance \naccordingly to improve results. \n• Affected 11M cars worldwide, 8M in Europe.\n18\n\nHow can we drive sustainability \nin the SE industry?\n\nGreen Procurement\n• Customers decide on providers that share their values \n• This is currently the main trigger reason why organisations \nworry about Sustainability and Green Software. \n• Examples of green procurement: \n• Customers that only buy green services/products \n• Companies that only use green providers \n• Developers that only work for green companies \n• Green procurement makes environmental sustainability \nessential for economical sustainability.\n20\n\nSustainability via compliance\n• EU wants to be carbon neutral by 2030 \n• This also affects the ICT sector. Estimated to impact \n14% of the global carbon footprint by 2040. \n• Some initiatives are already being negotiated. \n• Extending the smartphone lifetime to 7 years. \n• Right-to-repair movement. https://repair.eu \n• Making IT services relying on clean energy more \naccessible (e.g., less taxes).\n21\n\nSoftware for Sustainability \n• We are not covering it in this course.\n\nCarbon-free giants\n• Google, Microsoft, Meta/Facebook want to be carbon free by 2030 \n• Carbon free is different from carbon neutral \n• Green IT experts are needed to meet these goals\n23\n\n\nRebound effect*\n• Energy consumption decreases ↓↓ but demand also increases ↑↑. \n• *a.k.a. Jevons Paradox in economics; Downs–Thomson paradox in\xa0mobility.']","[""['Environmental Sustainability\\n• the branch of Software Engineering that studies \\nthe development of software that has minimal \\nimpact in our planet throughout its whole \\nlifecycle.\\n• Looking at software at diﬀerent levels:\\n• Developing, Using, Serving, …\\n• Also includes e-waste.\\n• Almost identical to Green Software. (?)\\n13\\n Bordallo II']""]","It is important for software to have minimal impact on the environment because it contributes to environmental sustainability by reducing e-waste and energy consumption. Developing energy-efficient software is crucial, especially for devices with limited power resources like smartphones and IoT devices, as it leads to fewer battery cycles and less environmental strain. Additionally, being environmentally sustainable has become an important competitive factor, as consumers are increasingly concerned about the climate impact of their behavior. This shift in consumer behavior is driving organizations to prioritize sustainability, making it essential for economic sustainability as well.","Software that has minimal impact on the environment is important because it reduces the environmental effects throughout its entire lifecycle, including development, usage, and serving phases. This approach aligns with green software practices and helps address issues like e-waste.",0.9999999999,1.0,1.0,0.29,0.1111111109876543,1.0000000000000009
"Why is it important to focus on sustainability in different career paths like designing data centers, setting up operations, developing AI for IoT, or becoming a CEO or CTO? How does sustainability play a role in jobs like green software developer, sustainability consultant, green advocate, or starting a green tech startup?","['Carbon-free giants\n• Google, Microsoft, Meta/Facebook want to be carbon free by 2030 \n• Carbon free is different from carbon neutral \n• Green IT experts are needed to meet these goals\n23\n\n\nRebound effect*\n• Energy consumption decreases ↓↓ but demand also increases ↑↑. \n• *a.k.a. Jevons Paradox in economics; Downs–Thomson paradox in\xa0mobility.\nEnergy per prompt\nPrompts\n100\n80\n30\n38\nChat \nGPT\n“Energy-efficient” \nChat GPT\n0\n\nIs sustainability an\u2028\nethical issue?\n• Climate change is more likely to affect the \npoorest countries. \n• Less financial resources to adapt \n• Climate-impact does not necessarily affect \npolluting countries. \n• Poorest countries have contributed less to the \nclimate change. \n• We need to figure out how to do more using \nless resources.\n26\n\nMorality ≠ Moralising\n• We should not use climate action as a \nshaming weapon \n• Climate action should be agnostic of political \nviews, ideology, social status, etc. \n• We need everyone to take action!\n27\n\nWhy?\n• Throughout your career you might: \n• Design/maintain/contract data centers \n• Set up operations/devops \n• Develop AI for IoT devices \n• Be the next CEO/CTO of a software company \n• Sustainability can be your main role: \n• Green Software Developer \n• Sustainability Consultant \n• Green Advocate  \n• Founder of a Green Tech startup (B2B?)\n28\n\nFormat of classes\n• In-person. \n• Collegerama recordings. \n• Lectures and Labs. \n• Guest lectures. \n• Steering meetings (after week 5, new schedule)\n29\n\nFormat of classes\n• There’s no exam in this course. It’s more important that we learn how to \ndiscuss this topic and come up with new ideas than learning all the theory. \nCritical thinking over checkboxes. \n• Mix of content and discussion \n• Ultimately, the lectures aim to give you food for thought and the necessary \nknowledge to excel in Project 2.', '• Examples: \n• Technical Debt \n• Does it scale? \n• Software testing \n• Bus-factor \n• Data integrity \n• Innovation \n• …\n10\n\nIndividual\n• Well-being of the individuals in an organisation.\u2028\nNote that it also includes how well individuals interact \nwith each other within the org. \n• Examples: \n• mental and physical well-being \n• self-respect \n• education/skills \n• career development \n• …\n11\n\nSocial\n• concerned with societal communities (groups of people, \norganisations) and the factors that erode trust in society. \n• Examples: \n• Social equity \n• Justice \n• Employment \n• Democracy \n• … \n• Also includes compliance with policies and regulations \n12\n\nEnvironmental Sustainability\n• the branch of Software Engineering that studies \nthe development of software that has minimal \nimpact in our planet throughout its whole \nlifecycle. \n• Looking at software at different levels: \n• Developing, Using, Serving, … \n• Also includes e-waste. \n• Almost identical to Green Software. (?)\n13\nBordallo II\n\nGreen Software\n• Sustainability and energy efficiency. \n• Building energy-efficient software is important also from a \ntechnical sustainability POV. \n• Smartphones, smart wearables, IoT devices, etc. run on limited \npower resources. \n• Developing software to these devices require energy-efficiency \ntesting and improvement. \n• It also leads to environmental sustainability (e.g., less battery \ncycles) \n• Important for UX (e.g., no need to walk around with power banks)\n14\n\nhttps://www.menti.com/uns9d89kzn\nWhat is the sustainability \ndimension you are most \ninterested in?\n?\n15\n\nEconomical sustainability tops the environment\n• In general, a software project will not survive if it’s not economical \nsustainable \n• Yet, a project can survive even if it is not environmental sustainable \n• The mindset is changing! \n• Software consumers have started to worry about the climate impact \nof their behaviour as users. \n• Being environmentally sustainable is now an important competitive \nfactor \n• Marketing teams are already using all eco-friendly labels. Technical \nteams are not there yet, though. \n• It’s easier said than done!\n$\n16\n\nGreen Washing\n• Deceptively use marketing techniques to \nclaim being eco-friendly.']","[""['Why?\\n• Throughout your career you might:\\n• Design/maintain/contract data centers\\n• Set up operations/devops\\n• Develop AI for IoT devices\\n• Be the next CEO/CTO of a software company\\n• Sustainability can be your main role:\\n• Green Software Developer\\n• Sustainability Consultant\\n• Green Advocate \\n• Founder of a Green Tech startup (B2B?)\\n28']""]","Focusing on sustainability in various career paths is crucial because it addresses the ethical and environmental challenges posed by climate change and resource consumption. In roles like designing data centers, setting up operations, and developing AI for IoT, sustainability involves creating systems that are energy-efficient and have minimal environmental impact. This is important as it helps reduce carbon footprints and supports the goal of becoming carbon-free, as seen with companies like Google, Microsoft, and Meta aiming for carbon-free operations by 2030.

For roles such as a green software developer, sustainability consultant, or green advocate, the focus is on developing and promoting technologies and practices that minimize environmental impact. This includes building energy-efficient software, which is crucial for devices with limited power resources, and advocating for sustainable practices within organizations and industries.

Starting a green tech startup involves innovating and providing solutions that help other businesses and consumers reduce their environmental impact, aligning with the growing consumer demand for environmentally sustainable products and services.

Overall, sustainability in these career paths not only helps mitigate climate change but also meets the increasing market demand for eco-friendly solutions, making it a competitive advantage.","Sustainability is important in various career paths because it influences roles such as designing or maintaining data centers, setting up operations or devops, developing AI for IoT devices, and leadership roles like CEO or CTO. It can also be a main focus in jobs like green software developer, sustainability consultant, green advocate, or founder of a green tech startup.",0.99999999995,1.0,0.6666666666666666,0.0,0.0,0.921229526348602
Why is the smartphone lifetime being extended to 7 years?,"['• Software consumers have started to worry about the climate impact \nof their behaviour as users. \n• Being environmentally sustainable is now an important competitive \nfactor \n• Marketing teams are already using all eco-friendly labels. Technical \nteams are not there yet, though. \n• It’s easier said than done!\n$\n16\n\nGreen Washing\n• Deceptively use marketing techniques to \nclaim being eco-friendly. \n• Opting for green-coloured designs. \n• Red/orange is usually perceived as \ntasty. \n• Green is perceived as eco-friendly. \n• The VW case. (?)\n17\n\nThe VW scandal\nGreenwashing\n• Used software to cheat on vehicle emissions \ntests. \n• The vehicle’s software could detect whether they \nwere being tested, changing the performance \naccordingly to improve results. \n• Affected 11M cars worldwide, 8M in Europe.\n18\n\nHow can we drive sustainability \nin the SE industry?\n\nGreen Procurement\n• Customers decide on providers that share their values \n• This is currently the main trigger reason why organisations \nworry about Sustainability and Green Software. \n• Examples of green procurement: \n• Customers that only buy green services/products \n• Companies that only use green providers \n• Developers that only work for green companies \n• Green procurement makes environmental sustainability \nessential for economical sustainability.\n20\n\nSustainability via compliance\n• EU wants to be carbon neutral by 2030 \n• This also affects the ICT sector. Estimated to impact \n14% of the global carbon footprint by 2040. \n• Some initiatives are already being negotiated. \n• Extending the smartphone lifetime to 7 years. \n• Right-to-repair movement. https://repair.eu \n• Making IT services relying on clean energy more \naccessible (e.g., less taxes).\n21\n\nSoftware for Sustainability \n• We are not covering it in this course.\n\nCarbon-free giants\n• Google, Microsoft, Meta/Facebook want to be carbon free by 2030 \n• Carbon free is different from carbon neutral \n• Green IT experts are needed to meet these goals\n23\n\n\nRebound effect*\n• Energy consumption decreases ↓↓ but demand also increases ↑↑. \n• *a.k.a. Jevons Paradox in economics; Downs–Thomson paradox in\xa0mobility.', '• Examples: \n• Technical Debt \n• Does it scale? \n• Software testing \n• Bus-factor \n• Data integrity \n• Innovation \n• …\n10\n\nIndividual\n• Well-being of the individuals in an organisation.\u2028\nNote that it also includes how well individuals interact \nwith each other within the org. \n• Examples: \n• mental and physical well-being \n• self-respect \n• education/skills \n• career development \n• …\n11\n\nSocial\n• concerned with societal communities (groups of people, \norganisations) and the factors that erode trust in society. \n• Examples: \n• Social equity \n• Justice \n• Employment \n• Democracy \n• … \n• Also includes compliance with policies and regulations \n12\n\nEnvironmental Sustainability\n• the branch of Software Engineering that studies \nthe development of software that has minimal \nimpact in our planet throughout its whole \nlifecycle. \n• Looking at software at different levels: \n• Developing, Using, Serving, … \n• Also includes e-waste. \n• Almost identical to Green Software. (?)\n13\nBordallo II\n\nGreen Software\n• Sustainability and energy efficiency. \n• Building energy-efficient software is important also from a \ntechnical sustainability POV. \n• Smartphones, smart wearables, IoT devices, etc. run on limited \npower resources. \n• Developing software to these devices require energy-efficiency \ntesting and improvement. \n• It also leads to environmental sustainability (e.g., less battery \ncycles) \n• Important for UX (e.g., no need to walk around with power banks)\n14\n\nhttps://www.menti.com/uns9d89kzn\nWhat is the sustainability \ndimension you are most \ninterested in?\n?\n15\n\nEconomical sustainability tops the environment\n• In general, a software project will not survive if it’s not economical \nsustainable \n• Yet, a project can survive even if it is not environmental sustainable \n• The mindset is changing! \n• Software consumers have started to worry about the climate impact \nof their behaviour as users. \n• Being environmentally sustainable is now an important competitive \nfactor \n• Marketing teams are already using all eco-friendly labels. Technical \nteams are not there yet, though. \n• It’s easier said than done!\n$\n16\n\nGreen Washing\n• Deceptively use marketing techniques to \nclaim being eco-friendly.']","[""['Sustainability via compliance\\n• EU wants to be carbon neutral by 2030\\n• This also aﬀects the ICT sector. Estimated to impact \\n14% of the global carbon footprint by 2040.\\n• Some initiatives are already being negotiated.\\n• Extending the smartphone lifetime to 7 years.\\n• Right-to-repair movement. https://repair.eu\\n• Making IT services relying on clean energy more \\naccessible (e.g., less taxes).\\n21']""]","The extension of smartphone lifetimes to 7 years is part of sustainability initiatives aimed at reducing the environmental impact of the ICT sector. This is in line with efforts to achieve carbon neutrality, particularly in the EU, by 2030. Extending the lifespan of smartphones helps reduce e-waste and the demand for new devices, contributing to environmental sustainability.",Extending the smartphone lifetime to 7 years is part of sustainability initiatives aimed at reducing the carbon footprint of the ICT sector.,0.99999999995,1.0,0.6666666666666666,0.67,,0.9885366567704812
"Why should climate action be neutral towards political views, ideologies, and social status when addressing global environmental challenges?","['Carbon-free giants\n• Google, Microsoft, Meta/Facebook want to be carbon free by 2030 \n• Carbon free is different from carbon neutral \n• Green IT experts are needed to meet these goals\n23\n\n\nRebound effect*\n• Energy consumption decreases ↓↓ but demand also increases ↑↑. \n• *a.k.a. Jevons Paradox in economics; Downs–Thomson paradox in\xa0mobility.\nEnergy per prompt\nPrompts\n100\n80\n30\n38\nChat \nGPT\n“Energy-efficient” \nChat GPT\n0\n\nIs sustainability an\u2028\nethical issue?\n• Climate change is more likely to affect the \npoorest countries. \n• Less financial resources to adapt \n• Climate-impact does not necessarily affect \npolluting countries. \n• Poorest countries have contributed less to the \nclimate change. \n• We need to figure out how to do more using \nless resources.\n26\n\nMorality ≠ Moralising\n• We should not use climate action as a \nshaming weapon \n• Climate action should be agnostic of political \nviews, ideology, social status, etc. \n• We need everyone to take action!\n27\n\nWhy?\n• Throughout your career you might: \n• Design/maintain/contract data centers \n• Set up operations/devops \n• Develop AI for IoT devices \n• Be the next CEO/CTO of a software company \n• Sustainability can be your main role: \n• Green Software Developer \n• Sustainability Consultant \n• Green Advocate  \n• Founder of a Green Tech startup (B2B?)\n28\n\nFormat of classes\n• In-person. \n• Collegerama recordings. \n• Lectures and Labs. \n• Guest lectures. \n• Steering meetings (after week 5, new schedule)\n29\n\nFormat of classes\n• There’s no exam in this course. It’s more important that we learn how to \ndiscuss this topic and come up with new ideas than learning all the theory. \nCritical thinking over checkboxes. \n• Mix of content and discussion \n• Ultimately, the lectures aim to give you food for thought and the necessary \nknowledge to excel in Project 2.', 'Carolin Brandt \nC.E.Brandt@tudelft.nl \nLuís Cruz \nL.Cruz@tudelft.nl \n1. Intro Class\nSustainable Software Engineering\u2028\nCS4575\nSustainableSE 2025\nEnrique Barba Roque \nE.BarbaRoque@tudelft.nl\n\n1. Intro to Sustainable SE \n2. Intro to the course\n2\n\nof the electricity consumed worldwide \nby 2040 will stem from ICT\n14%\n\n4\nhttps://xkcd.com/1007/\n\nBuzz words\n• Eco-friendly \n• Climate change, action, adaption \n• Energy efficiency \n• Environmental-responsible \n• Carbon-neutral; Climate-neutral; Net zero \n• Carbon-offsetting \n• Carbon-free \n• Clean technology \n• E-waste\n5\n\nhttps://www.menti.com/uns9d89kzn\nWhat is Sustainable \nSoftware Engineering?\n?\n6\n\nSustainable Software \nEngineering is…\n7\n…the discipline that studies the process of creating software systems that are able \nto create value in the long term without hindering its surrounding environment.\n\n8\nEconomical\nSocial\nTechnical\nIndividual\nEnvironmental\nSustainable\nSoftware\nEngineering\n⭐\nTechnical\u2028\n⚙\nEconomical\u2028\n💰\nSocial\u2028\n👩💼👨💼👩💼👩💼\nIndividual\u2028\n👩💻\nEnvironmental\u2028\n🌱\nSustainable\u2028\nSoftware \nEngineering\n\nEconomical\n• Focused on assets, capital and added value\u2028\n(wealth creation, prosperity, profitability, capital \ninvestment, income, etc.) \n• Nr of customers  \n• Man-day-rate estimate \n• Next round of funding \n• Meet requirements in the contract\n9\n\nTechnical\n• Longevity of information, systems, and infrastructure and their \nadequate evolution with changing surrounding conditions. \n• Examples: \n• Technical Debt \n• Does it scale? \n• Software testing \n• Bus-factor \n• Data integrity \n• Innovation \n• …\n10\n\nIndividual\n• Well-being of the individuals in an organisation.\u2028\nNote that it also includes how well individuals interact \nwith each other within the org.']","[""['Morality ≠ Moralising\\n• We should not use climate action as a \\nshaming weapon \\n• Climate action should be agnostic of political \\nviews, ideology, social status, etc.\\n• We need everyone to take action!\\n27']""]","Climate action should be neutral towards political views, ideologies, and social status because it is a global issue that requires collective action from everyone. Climate change affects all countries, but it disproportionately impacts the poorest countries that have contributed the least to the problem and have fewer resources to adapt. By keeping climate action agnostic of political and social differences, we can foster inclusive participation and collaboration, ensuring that efforts to combat climate change are effective and equitable. This approach avoids using climate action as a shaming weapon and encourages a united front in addressing environmental challenges.","Climate action should be neutral towards political views, ideologies, and social status because it is essential to avoid using it as a shaming tool and to ensure that everyone can participate in addressing global environmental challenges collectively.",0.9999999999,1.0,0.9090909090909092,0.86,0.1666666663888888,0.980290027370632
Why software for sustainability is not covered in this course?,"['• Software consumers have started to worry about the climate impact \nof their behaviour as users. \n• Being environmentally sustainable is now an important competitive \nfactor \n• Marketing teams are already using all eco-friendly labels. Technical \nteams are not there yet, though. \n• It’s easier said than done!\n$\n16\n\nGreen Washing\n• Deceptively use marketing techniques to \nclaim being eco-friendly. \n• Opting for green-coloured designs. \n• Red/orange is usually perceived as \ntasty. \n• Green is perceived as eco-friendly. \n• The VW case. (?)\n17\n\nThe VW scandal\nGreenwashing\n• Used software to cheat on vehicle emissions \ntests. \n• The vehicle’s software could detect whether they \nwere being tested, changing the performance \naccordingly to improve results. \n• Affected 11M cars worldwide, 8M in Europe.\n18\n\nHow can we drive sustainability \nin the SE industry?\n\nGreen Procurement\n• Customers decide on providers that share their values \n• This is currently the main trigger reason why organisations \nworry about Sustainability and Green Software. \n• Examples of green procurement: \n• Customers that only buy green services/products \n• Companies that only use green providers \n• Developers that only work for green companies \n• Green procurement makes environmental sustainability \nessential for economical sustainability.\n20\n\nSustainability via compliance\n• EU wants to be carbon neutral by 2030 \n• This also affects the ICT sector. Estimated to impact \n14% of the global carbon footprint by 2040. \n• Some initiatives are already being negotiated. \n• Extending the smartphone lifetime to 7 years. \n• Right-to-repair movement. https://repair.eu \n• Making IT services relying on clean energy more \naccessible (e.g., less taxes).\n21\n\nSoftware for Sustainability \n• We are not covering it in this course.\n\nCarbon-free giants\n• Google, Microsoft, Meta/Facebook want to be carbon free by 2030 \n• Carbon free is different from carbon neutral \n• Green IT experts are needed to meet these goals\n23\n\n\nRebound effect*\n• Energy consumption decreases ↓↓ but demand also increases ↑↑. \n• *a.k.a. Jevons Paradox in economics; Downs–Thomson paradox in\xa0mobility.', 'Carbon-free giants\n• Google, Microsoft, Meta/Facebook want to be carbon free by 2030 \n• Carbon free is different from carbon neutral \n• Green IT experts are needed to meet these goals\n23\n\n\nRebound effect*\n• Energy consumption decreases ↓↓ but demand also increases ↑↑. \n• *a.k.a. Jevons Paradox in economics; Downs–Thomson paradox in\xa0mobility.\nEnergy per prompt\nPrompts\n100\n80\n30\n38\nChat \nGPT\n“Energy-efficient” \nChat GPT\n0\n\nIs sustainability an\u2028\nethical issue?\n• Climate change is more likely to affect the \npoorest countries. \n• Less financial resources to adapt \n• Climate-impact does not necessarily affect \npolluting countries. \n• Poorest countries have contributed less to the \nclimate change. \n• We need to figure out how to do more using \nless resources.\n26\n\nMorality ≠ Moralising\n• We should not use climate action as a \nshaming weapon \n• Climate action should be agnostic of political \nviews, ideology, social status, etc. \n• We need everyone to take action!\n27\n\nWhy?\n• Throughout your career you might: \n• Design/maintain/contract data centers \n• Set up operations/devops \n• Develop AI for IoT devices \n• Be the next CEO/CTO of a software company \n• Sustainability can be your main role: \n• Green Software Developer \n• Sustainability Consultant \n• Green Advocate  \n• Founder of a Green Tech startup (B2B?)\n28\n\nFormat of classes\n• In-person. \n• Collegerama recordings. \n• Lectures and Labs. \n• Guest lectures. \n• Steering meetings (after week 5, new schedule)\n29\n\nFormat of classes\n• There’s no exam in this course. It’s more important that we learn how to \ndiscuss this topic and come up with new ideas than learning all the theory. \nCritical thinking over checkboxes. \n• Mix of content and discussion \n• Ultimately, the lectures aim to give you food for thought and the necessary \nknowledge to excel in Project 2.']","[""['Software for Sustainability \\n• We are not covering it in this course.']""]","The sources provided do not explicitly state why software for sustainability is not covered in the course. However, the course seems to focus more on discussing sustainability issues, critical thinking, and generating new ideas rather than covering all theoretical aspects. This approach might be why specific topics like software for sustainability are not included.",Software for sustainability is not covered in this course.,0.9999999999,1.0,0.7142857142857143,0.0,,0.0
